/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.sidney.dbsyncserver.tserializ.admanager;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TDbSync_AdManager_Ad_Space implements org.apache.thrift.TBase<TDbSync_AdManager_Ad_Space, TDbSync_AdManager_Ad_Space._Fields>, java.io.Serializable, Cloneable, Comparable<TDbSync_AdManager_Ad_Space> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TDbSync_AdManager_Ad_Space");

  private static final org.apache.thrift.protocol.TField AD_SPACE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("adSpaceID", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField LAST_CHANGED_FIELD_DESC = new org.apache.thrift.protocol.TField("lastChanged", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("version", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("accountID", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField DEFAULT_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("defaultUrl", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField SIZE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sizeID", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField SITE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("siteID", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField N_F__SIZE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("nF_SizeID", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField ADV_FEATURE_FIELD_DESC = new org.apache.thrift.protocol.TField("advFeature", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField DISPLAY_INTERVAL_FIELD_DESC = new org.apache.thrift.protocol.TField("displayInterval", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField V_P__SHOW_FREQUENCY_FIELD_DESC = new org.apache.thrift.protocol.TField("vP_ShowFrequency", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField SURVEY_PROBABILITY_FIELD_DESC = new org.apache.thrift.protocol.TField("surveyProbability", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField PAGE_ANCHOR_FIELD_DESC = new org.apache.thrift.protocol.TField("pageAnchor", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField PUB_PAID_TIMES_FIELD_DESC = new org.apache.thrift.protocol.TField("pubPaidTimes", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField R_B__GROUP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("rB_GroupID", org.apache.thrift.protocol.TType.I32, (short)16);
  private static final org.apache.thrift.protocol.TField IS_RB__MAIN_AD_SPACE_FIELD_DESC = new org.apache.thrift.protocol.TField("isRB_MainAdSpace", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField FORMAT_FIELD_DESC = new org.apache.thrift.protocol.TField("format", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField TRACKING_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("trackingUrl", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField CLICK_TRACKING_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("clickTrackingUrl", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField JS_PATH_FIELD_DESC = new org.apache.thrift.protocol.TField("jsPath", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField AUTO_CHANGE_SEC_FIELD_DESC = new org.apache.thrift.protocol.TField("autoChangeSec", org.apache.thrift.protocol.TType.I32, (short)22);
  private static final org.apache.thrift.protocol.TField CRAZY_MAPPING_FIELD_DESC = new org.apache.thrift.protocol.TField("crazyMapping", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField AD_SPACE_FORMAT_DEFINE_FIELD_DESC = new org.apache.thrift.protocol.TField("adSpaceFormatDefine", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField AD_SPACE_FORMAT_FIELD_DESC = new org.apache.thrift.protocol.TField("adSpaceFormat", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField BUY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("BuyType", org.apache.thrift.protocol.TType.I32, (short)26);
  private static final org.apache.thrift.protocol.TField ASK_CPD_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("AskCpdRate", org.apache.thrift.protocol.TType.I32, (short)27);
  private static final org.apache.thrift.protocol.TField ASK_CPM_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("AskCpmRate", org.apache.thrift.protocol.TType.I32, (short)28);
  private static final org.apache.thrift.protocol.TField ASK_CPC_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("AskCpcRate", org.apache.thrift.protocol.TType.I32, (short)29);
  private static final org.apache.thrift.protocol.TField NET_WORK_FIELD_DESC = new org.apache.thrift.protocol.TField("NetWork", org.apache.thrift.protocol.TType.I32, (short)30);
  private static final org.apache.thrift.protocol.TField TEMPLATE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("TemplateId", org.apache.thrift.protocol.TType.I32, (short)31);
  private static final org.apache.thrift.protocol.TField TEXT_RECYCLE_FIELD_DESC = new org.apache.thrift.protocol.TField("TextRecycle", org.apache.thrift.protocol.TType.I32, (short)32);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TDbSync_AdManager_Ad_SpaceStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TDbSync_AdManager_Ad_SpaceTupleSchemeFactory());
  }

  public int adSpaceID; // required
  public int status; // required
  public String lastChanged; // required
  public int version; // required
  public int accountID; // required
  public String defaultUrl; // required
  public int sizeID; // required
  public int siteID; // required
  public int nF_SizeID; // required
  public long advFeature; // required
  public int displayInterval; // required
  public int vP_ShowFrequency; // required
  public int surveyProbability; // required
  public String pageAnchor; // required
  public int pubPaidTimes; // required
  public int rB_GroupID; // required
  public int isRB_MainAdSpace; // required
  public int format; // required
  public String trackingUrl; // required
  public String clickTrackingUrl; // required
  public String jsPath; // required
  public int autoChangeSec; // required
  public String crazyMapping; // required
  public String adSpaceFormatDefine; // required
  public String adSpaceFormat; // required
  public int BuyType; // required
  public int AskCpdRate; // required
  public int AskCpmRate; // required
  public int AskCpcRate; // required
  public int NetWork; // required
  public int TemplateId; // required
  public int TextRecycle; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    AD_SPACE_ID((short)1, "adSpaceID"),
    STATUS((short)2, "status"),
    LAST_CHANGED((short)3, "lastChanged"),
    VERSION((short)4, "version"),
    ACCOUNT_ID((short)5, "accountID"),
    DEFAULT_URL((short)6, "defaultUrl"),
    SIZE_ID((short)7, "sizeID"),
    SITE_ID((short)8, "siteID"),
    N_F__SIZE_ID((short)9, "nF_SizeID"),
    ADV_FEATURE((short)10, "advFeature"),
    DISPLAY_INTERVAL((short)11, "displayInterval"),
    V_P__SHOW_FREQUENCY((short)12, "vP_ShowFrequency"),
    SURVEY_PROBABILITY((short)13, "surveyProbability"),
    PAGE_ANCHOR((short)14, "pageAnchor"),
    PUB_PAID_TIMES((short)15, "pubPaidTimes"),
    R_B__GROUP_ID((short)16, "rB_GroupID"),
    IS_RB__MAIN_AD_SPACE((short)17, "isRB_MainAdSpace"),
    FORMAT((short)18, "format"),
    TRACKING_URL((short)19, "trackingUrl"),
    CLICK_TRACKING_URL((short)20, "clickTrackingUrl"),
    JS_PATH((short)21, "jsPath"),
    AUTO_CHANGE_SEC((short)22, "autoChangeSec"),
    CRAZY_MAPPING((short)23, "crazyMapping"),
    AD_SPACE_FORMAT_DEFINE((short)24, "adSpaceFormatDefine"),
    AD_SPACE_FORMAT((short)25, "adSpaceFormat"),
    BUY_TYPE((short)26, "BuyType"),
    ASK_CPD_RATE((short)27, "AskCpdRate"),
    ASK_CPM_RATE((short)28, "AskCpmRate"),
    ASK_CPC_RATE((short)29, "AskCpcRate"),
    NET_WORK((short)30, "NetWork"),
    TEMPLATE_ID((short)31, "TemplateId"),
    TEXT_RECYCLE((short)32, "TextRecycle");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // AD_SPACE_ID
          return AD_SPACE_ID;
        case 2: // STATUS
          return STATUS;
        case 3: // LAST_CHANGED
          return LAST_CHANGED;
        case 4: // VERSION
          return VERSION;
        case 5: // ACCOUNT_ID
          return ACCOUNT_ID;
        case 6: // DEFAULT_URL
          return DEFAULT_URL;
        case 7: // SIZE_ID
          return SIZE_ID;
        case 8: // SITE_ID
          return SITE_ID;
        case 9: // N_F__SIZE_ID
          return N_F__SIZE_ID;
        case 10: // ADV_FEATURE
          return ADV_FEATURE;
        case 11: // DISPLAY_INTERVAL
          return DISPLAY_INTERVAL;
        case 12: // V_P__SHOW_FREQUENCY
          return V_P__SHOW_FREQUENCY;
        case 13: // SURVEY_PROBABILITY
          return SURVEY_PROBABILITY;
        case 14: // PAGE_ANCHOR
          return PAGE_ANCHOR;
        case 15: // PUB_PAID_TIMES
          return PUB_PAID_TIMES;
        case 16: // R_B__GROUP_ID
          return R_B__GROUP_ID;
        case 17: // IS_RB__MAIN_AD_SPACE
          return IS_RB__MAIN_AD_SPACE;
        case 18: // FORMAT
          return FORMAT;
        case 19: // TRACKING_URL
          return TRACKING_URL;
        case 20: // CLICK_TRACKING_URL
          return CLICK_TRACKING_URL;
        case 21: // JS_PATH
          return JS_PATH;
        case 22: // AUTO_CHANGE_SEC
          return AUTO_CHANGE_SEC;
        case 23: // CRAZY_MAPPING
          return CRAZY_MAPPING;
        case 24: // AD_SPACE_FORMAT_DEFINE
          return AD_SPACE_FORMAT_DEFINE;
        case 25: // AD_SPACE_FORMAT
          return AD_SPACE_FORMAT;
        case 26: // BUY_TYPE
          return BUY_TYPE;
        case 27: // ASK_CPD_RATE
          return ASK_CPD_RATE;
        case 28: // ASK_CPM_RATE
          return ASK_CPM_RATE;
        case 29: // ASK_CPC_RATE
          return ASK_CPC_RATE;
        case 30: // NET_WORK
          return NET_WORK;
        case 31: // TEMPLATE_ID
          return TEMPLATE_ID;
        case 32: // TEXT_RECYCLE
          return TEXT_RECYCLE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ADSPACEID_ISSET_ID = 0;
  private static final int __STATUS_ISSET_ID = 1;
  private static final int __VERSION_ISSET_ID = 2;
  private static final int __ACCOUNTID_ISSET_ID = 3;
  private static final int __SIZEID_ISSET_ID = 4;
  private static final int __SITEID_ISSET_ID = 5;
  private static final int __NF_SIZEID_ISSET_ID = 6;
  private static final int __ADVFEATURE_ISSET_ID = 7;
  private static final int __DISPLAYINTERVAL_ISSET_ID = 8;
  private static final int __VP_SHOWFREQUENCY_ISSET_ID = 9;
  private static final int __SURVEYPROBABILITY_ISSET_ID = 10;
  private static final int __PUBPAIDTIMES_ISSET_ID = 11;
  private static final int __RB_GROUPID_ISSET_ID = 12;
  private static final int __ISRB_MAINADSPACE_ISSET_ID = 13;
  private static final int __FORMAT_ISSET_ID = 14;
  private static final int __AUTOCHANGESEC_ISSET_ID = 15;
  private static final int __BUYTYPE_ISSET_ID = 16;
  private static final int __ASKCPDRATE_ISSET_ID = 17;
  private static final int __ASKCPMRATE_ISSET_ID = 18;
  private static final int __ASKCPCRATE_ISSET_ID = 19;
  private static final int __NETWORK_ISSET_ID = 20;
  private static final int __TEMPLATEID_ISSET_ID = 21;
  private static final int __TEXTRECYCLE_ISSET_ID = 22;
  private int __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.AD_SPACE_ID, new org.apache.thrift.meta_data.FieldMetaData("adSpaceID", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LAST_CHANGED, new org.apache.thrift.meta_data.FieldMetaData("lastChanged", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VERSION, new org.apache.thrift.meta_data.FieldMetaData("version", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("accountID", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DEFAULT_URL, new org.apache.thrift.meta_data.FieldMetaData("defaultUrl", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SIZE_ID, new org.apache.thrift.meta_data.FieldMetaData("sizeID", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SITE_ID, new org.apache.thrift.meta_data.FieldMetaData("siteID", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.N_F__SIZE_ID, new org.apache.thrift.meta_data.FieldMetaData("nF_SizeID", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ADV_FEATURE, new org.apache.thrift.meta_data.FieldMetaData("advFeature", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DISPLAY_INTERVAL, new org.apache.thrift.meta_data.FieldMetaData("displayInterval", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.V_P__SHOW_FREQUENCY, new org.apache.thrift.meta_data.FieldMetaData("vP_ShowFrequency", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SURVEY_PROBABILITY, new org.apache.thrift.meta_data.FieldMetaData("surveyProbability", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PAGE_ANCHOR, new org.apache.thrift.meta_data.FieldMetaData("pageAnchor", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PUB_PAID_TIMES, new org.apache.thrift.meta_data.FieldMetaData("pubPaidTimes", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.R_B__GROUP_ID, new org.apache.thrift.meta_data.FieldMetaData("rB_GroupID", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IS_RB__MAIN_AD_SPACE, new org.apache.thrift.meta_data.FieldMetaData("isRB_MainAdSpace", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FORMAT, new org.apache.thrift.meta_data.FieldMetaData("format", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TRACKING_URL, new org.apache.thrift.meta_data.FieldMetaData("trackingUrl", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLICK_TRACKING_URL, new org.apache.thrift.meta_data.FieldMetaData("clickTrackingUrl", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JS_PATH, new org.apache.thrift.meta_data.FieldMetaData("jsPath", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUTO_CHANGE_SEC, new org.apache.thrift.meta_data.FieldMetaData("autoChangeSec", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CRAZY_MAPPING, new org.apache.thrift.meta_data.FieldMetaData("crazyMapping", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AD_SPACE_FORMAT_DEFINE, new org.apache.thrift.meta_data.FieldMetaData("adSpaceFormatDefine", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AD_SPACE_FORMAT, new org.apache.thrift.meta_data.FieldMetaData("adSpaceFormat", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("BuyType", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ASK_CPD_RATE, new org.apache.thrift.meta_data.FieldMetaData("AskCpdRate", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ASK_CPM_RATE, new org.apache.thrift.meta_data.FieldMetaData("AskCpmRate", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ASK_CPC_RATE, new org.apache.thrift.meta_data.FieldMetaData("AskCpcRate", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NET_WORK, new org.apache.thrift.meta_data.FieldMetaData("NetWork", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TEMPLATE_ID, new org.apache.thrift.meta_data.FieldMetaData("TemplateId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TEXT_RECYCLE, new org.apache.thrift.meta_data.FieldMetaData("TextRecycle", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TDbSync_AdManager_Ad_Space.class, metaDataMap);
  }

  public TDbSync_AdManager_Ad_Space() {
  }

  public TDbSync_AdManager_Ad_Space(
    int adSpaceID,
    int status,
    String lastChanged,
    int version,
    int accountID,
    String defaultUrl,
    int sizeID,
    int siteID,
    int nF_SizeID,
    long advFeature,
    int displayInterval,
    int vP_ShowFrequency,
    int surveyProbability,
    String pageAnchor,
    int pubPaidTimes,
    int rB_GroupID,
    int isRB_MainAdSpace,
    int format,
    String trackingUrl,
    String clickTrackingUrl,
    String jsPath,
    int autoChangeSec,
    String crazyMapping,
    String adSpaceFormatDefine,
    String adSpaceFormat,
    int BuyType,
    int AskCpdRate,
    int AskCpmRate,
    int AskCpcRate,
    int NetWork,
    int TemplateId,
    int TextRecycle)
  {
    this();
    this.adSpaceID = adSpaceID;
    setAdSpaceIDIsSet(true);
    this.status = status;
    setStatusIsSet(true);
    this.lastChanged = lastChanged;
    this.version = version;
    setVersionIsSet(true);
    this.accountID = accountID;
    setAccountIDIsSet(true);
    this.defaultUrl = defaultUrl;
    this.sizeID = sizeID;
    setSizeIDIsSet(true);
    this.siteID = siteID;
    setSiteIDIsSet(true);
    this.nF_SizeID = nF_SizeID;
    setNF_SizeIDIsSet(true);
    this.advFeature = advFeature;
    setAdvFeatureIsSet(true);
    this.displayInterval = displayInterval;
    setDisplayIntervalIsSet(true);
    this.vP_ShowFrequency = vP_ShowFrequency;
    setVP_ShowFrequencyIsSet(true);
    this.surveyProbability = surveyProbability;
    setSurveyProbabilityIsSet(true);
    this.pageAnchor = pageAnchor;
    this.pubPaidTimes = pubPaidTimes;
    setPubPaidTimesIsSet(true);
    this.rB_GroupID = rB_GroupID;
    setRB_GroupIDIsSet(true);
    this.isRB_MainAdSpace = isRB_MainAdSpace;
    setIsRB_MainAdSpaceIsSet(true);
    this.format = format;
    setFormatIsSet(true);
    this.trackingUrl = trackingUrl;
    this.clickTrackingUrl = clickTrackingUrl;
    this.jsPath = jsPath;
    this.autoChangeSec = autoChangeSec;
    setAutoChangeSecIsSet(true);
    this.crazyMapping = crazyMapping;
    this.adSpaceFormatDefine = adSpaceFormatDefine;
    this.adSpaceFormat = adSpaceFormat;
    this.BuyType = BuyType;
    setBuyTypeIsSet(true);
    this.AskCpdRate = AskCpdRate;
    setAskCpdRateIsSet(true);
    this.AskCpmRate = AskCpmRate;
    setAskCpmRateIsSet(true);
    this.AskCpcRate = AskCpcRate;
    setAskCpcRateIsSet(true);
    this.NetWork = NetWork;
    setNetWorkIsSet(true);
    this.TemplateId = TemplateId;
    setTemplateIdIsSet(true);
    this.TextRecycle = TextRecycle;
    setTextRecycleIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TDbSync_AdManager_Ad_Space(TDbSync_AdManager_Ad_Space other) {
    __isset_bitfield = other.__isset_bitfield;
    this.adSpaceID = other.adSpaceID;
    this.status = other.status;
    if (other.isSetLastChanged()) {
      this.lastChanged = other.lastChanged;
    }
    this.version = other.version;
    this.accountID = other.accountID;
    if (other.isSetDefaultUrl()) {
      this.defaultUrl = other.defaultUrl;
    }
    this.sizeID = other.sizeID;
    this.siteID = other.siteID;
    this.nF_SizeID = other.nF_SizeID;
    this.advFeature = other.advFeature;
    this.displayInterval = other.displayInterval;
    this.vP_ShowFrequency = other.vP_ShowFrequency;
    this.surveyProbability = other.surveyProbability;
    if (other.isSetPageAnchor()) {
      this.pageAnchor = other.pageAnchor;
    }
    this.pubPaidTimes = other.pubPaidTimes;
    this.rB_GroupID = other.rB_GroupID;
    this.isRB_MainAdSpace = other.isRB_MainAdSpace;
    this.format = other.format;
    if (other.isSetTrackingUrl()) {
      this.trackingUrl = other.trackingUrl;
    }
    if (other.isSetClickTrackingUrl()) {
      this.clickTrackingUrl = other.clickTrackingUrl;
    }
    if (other.isSetJsPath()) {
      this.jsPath = other.jsPath;
    }
    this.autoChangeSec = other.autoChangeSec;
    if (other.isSetCrazyMapping()) {
      this.crazyMapping = other.crazyMapping;
    }
    if (other.isSetAdSpaceFormatDefine()) {
      this.adSpaceFormatDefine = other.adSpaceFormatDefine;
    }
    if (other.isSetAdSpaceFormat()) {
      this.adSpaceFormat = other.adSpaceFormat;
    }
    this.BuyType = other.BuyType;
    this.AskCpdRate = other.AskCpdRate;
    this.AskCpmRate = other.AskCpmRate;
    this.AskCpcRate = other.AskCpcRate;
    this.NetWork = other.NetWork;
    this.TemplateId = other.TemplateId;
    this.TextRecycle = other.TextRecycle;
  }

  public TDbSync_AdManager_Ad_Space deepCopy() {
    return new TDbSync_AdManager_Ad_Space(this);
  }

  @Override
  public void clear() {
    setAdSpaceIDIsSet(false);
    this.adSpaceID = 0;
    setStatusIsSet(false);
    this.status = 0;
    this.lastChanged = null;
    setVersionIsSet(false);
    this.version = 0;
    setAccountIDIsSet(false);
    this.accountID = 0;
    this.defaultUrl = null;
    setSizeIDIsSet(false);
    this.sizeID = 0;
    setSiteIDIsSet(false);
    this.siteID = 0;
    setNF_SizeIDIsSet(false);
    this.nF_SizeID = 0;
    setAdvFeatureIsSet(false);
    this.advFeature = 0;
    setDisplayIntervalIsSet(false);
    this.displayInterval = 0;
    setVP_ShowFrequencyIsSet(false);
    this.vP_ShowFrequency = 0;
    setSurveyProbabilityIsSet(false);
    this.surveyProbability = 0;
    this.pageAnchor = null;
    setPubPaidTimesIsSet(false);
    this.pubPaidTimes = 0;
    setRB_GroupIDIsSet(false);
    this.rB_GroupID = 0;
    setIsRB_MainAdSpaceIsSet(false);
    this.isRB_MainAdSpace = 0;
    setFormatIsSet(false);
    this.format = 0;
    this.trackingUrl = null;
    this.clickTrackingUrl = null;
    this.jsPath = null;
    setAutoChangeSecIsSet(false);
    this.autoChangeSec = 0;
    this.crazyMapping = null;
    this.adSpaceFormatDefine = null;
    this.adSpaceFormat = null;
    setBuyTypeIsSet(false);
    this.BuyType = 0;
    setAskCpdRateIsSet(false);
    this.AskCpdRate = 0;
    setAskCpmRateIsSet(false);
    this.AskCpmRate = 0;
    setAskCpcRateIsSet(false);
    this.AskCpcRate = 0;
    setNetWorkIsSet(false);
    this.NetWork = 0;
    setTemplateIdIsSet(false);
    this.TemplateId = 0;
    setTextRecycleIsSet(false);
    this.TextRecycle = 0;
  }

  public int getAdSpaceID() {
    return this.adSpaceID;
  }

  public TDbSync_AdManager_Ad_Space setAdSpaceID(int adSpaceID) {
    this.adSpaceID = adSpaceID;
    setAdSpaceIDIsSet(true);
    return this;
  }

  public void unsetAdSpaceID() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ADSPACEID_ISSET_ID);
  }

  /** Returns true if field adSpaceID is set (has been assigned a value) and false otherwise */
  public boolean isSetAdSpaceID() {
    return EncodingUtils.testBit(__isset_bitfield, __ADSPACEID_ISSET_ID);
  }

  public void setAdSpaceIDIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ADSPACEID_ISSET_ID, value);
  }

  public int getStatus() {
    return this.status;
  }

  public TDbSync_AdManager_Ad_Space setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public String getLastChanged() {
    return this.lastChanged;
  }

  public TDbSync_AdManager_Ad_Space setLastChanged(String lastChanged) {
    this.lastChanged = lastChanged;
    return this;
  }

  public void unsetLastChanged() {
    this.lastChanged = null;
  }

  /** Returns true if field lastChanged is set (has been assigned a value) and false otherwise */
  public boolean isSetLastChanged() {
    return this.lastChanged != null;
  }

  public void setLastChangedIsSet(boolean value) {
    if (!value) {
      this.lastChanged = null;
    }
  }

  public int getVersion() {
    return this.version;
  }

  public TDbSync_AdManager_Ad_Space setVersion(int version) {
    this.version = version;
    setVersionIsSet(true);
    return this;
  }

  public void unsetVersion() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VERSION_ISSET_ID);
  }

  /** Returns true if field version is set (has been assigned a value) and false otherwise */
  public boolean isSetVersion() {
    return EncodingUtils.testBit(__isset_bitfield, __VERSION_ISSET_ID);
  }

  public void setVersionIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VERSION_ISSET_ID, value);
  }

  public int getAccountID() {
    return this.accountID;
  }

  public TDbSync_AdManager_Ad_Space setAccountID(int accountID) {
    this.accountID = accountID;
    setAccountIDIsSet(true);
    return this;
  }

  public void unsetAccountID() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
  }

  /** Returns true if field accountID is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountID() {
    return EncodingUtils.testBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
  }

  public void setAccountIDIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ACCOUNTID_ISSET_ID, value);
  }

  public String getDefaultUrl() {
    return this.defaultUrl;
  }

  public TDbSync_AdManager_Ad_Space setDefaultUrl(String defaultUrl) {
    this.defaultUrl = defaultUrl;
    return this;
  }

  public void unsetDefaultUrl() {
    this.defaultUrl = null;
  }

  /** Returns true if field defaultUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetDefaultUrl() {
    return this.defaultUrl != null;
  }

  public void setDefaultUrlIsSet(boolean value) {
    if (!value) {
      this.defaultUrl = null;
    }
  }

  public int getSizeID() {
    return this.sizeID;
  }

  public TDbSync_AdManager_Ad_Space setSizeID(int sizeID) {
    this.sizeID = sizeID;
    setSizeIDIsSet(true);
    return this;
  }

  public void unsetSizeID() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SIZEID_ISSET_ID);
  }

  /** Returns true if field sizeID is set (has been assigned a value) and false otherwise */
  public boolean isSetSizeID() {
    return EncodingUtils.testBit(__isset_bitfield, __SIZEID_ISSET_ID);
  }

  public void setSizeIDIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SIZEID_ISSET_ID, value);
  }

  public int getSiteID() {
    return this.siteID;
  }

  public TDbSync_AdManager_Ad_Space setSiteID(int siteID) {
    this.siteID = siteID;
    setSiteIDIsSet(true);
    return this;
  }

  public void unsetSiteID() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SITEID_ISSET_ID);
  }

  /** Returns true if field siteID is set (has been assigned a value) and false otherwise */
  public boolean isSetSiteID() {
    return EncodingUtils.testBit(__isset_bitfield, __SITEID_ISSET_ID);
  }

  public void setSiteIDIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SITEID_ISSET_ID, value);
  }

  public int getNF_SizeID() {
    return this.nF_SizeID;
  }

  public TDbSync_AdManager_Ad_Space setNF_SizeID(int nF_SizeID) {
    this.nF_SizeID = nF_SizeID;
    setNF_SizeIDIsSet(true);
    return this;
  }

  public void unsetNF_SizeID() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NF_SIZEID_ISSET_ID);
  }

  /** Returns true if field nF_SizeID is set (has been assigned a value) and false otherwise */
  public boolean isSetNF_SizeID() {
    return EncodingUtils.testBit(__isset_bitfield, __NF_SIZEID_ISSET_ID);
  }

  public void setNF_SizeIDIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NF_SIZEID_ISSET_ID, value);
  }

  public long getAdvFeature() {
    return this.advFeature;
  }

  public TDbSync_AdManager_Ad_Space setAdvFeature(long advFeature) {
    this.advFeature = advFeature;
    setAdvFeatureIsSet(true);
    return this;
  }

  public void unsetAdvFeature() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ADVFEATURE_ISSET_ID);
  }

  /** Returns true if field advFeature is set (has been assigned a value) and false otherwise */
  public boolean isSetAdvFeature() {
    return EncodingUtils.testBit(__isset_bitfield, __ADVFEATURE_ISSET_ID);
  }

  public void setAdvFeatureIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ADVFEATURE_ISSET_ID, value);
  }

  public int getDisplayInterval() {
    return this.displayInterval;
  }

  public TDbSync_AdManager_Ad_Space setDisplayInterval(int displayInterval) {
    this.displayInterval = displayInterval;
    setDisplayIntervalIsSet(true);
    return this;
  }

  public void unsetDisplayInterval() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DISPLAYINTERVAL_ISSET_ID);
  }

  /** Returns true if field displayInterval is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayInterval() {
    return EncodingUtils.testBit(__isset_bitfield, __DISPLAYINTERVAL_ISSET_ID);
  }

  public void setDisplayIntervalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DISPLAYINTERVAL_ISSET_ID, value);
  }

  public int getVP_ShowFrequency() {
    return this.vP_ShowFrequency;
  }

  public TDbSync_AdManager_Ad_Space setVP_ShowFrequency(int vP_ShowFrequency) {
    this.vP_ShowFrequency = vP_ShowFrequency;
    setVP_ShowFrequencyIsSet(true);
    return this;
  }

  public void unsetVP_ShowFrequency() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VP_SHOWFREQUENCY_ISSET_ID);
  }

  /** Returns true if field vP_ShowFrequency is set (has been assigned a value) and false otherwise */
  public boolean isSetVP_ShowFrequency() {
    return EncodingUtils.testBit(__isset_bitfield, __VP_SHOWFREQUENCY_ISSET_ID);
  }

  public void setVP_ShowFrequencyIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VP_SHOWFREQUENCY_ISSET_ID, value);
  }

  public int getSurveyProbability() {
    return this.surveyProbability;
  }

  public TDbSync_AdManager_Ad_Space setSurveyProbability(int surveyProbability) {
    this.surveyProbability = surveyProbability;
    setSurveyProbabilityIsSet(true);
    return this;
  }

  public void unsetSurveyProbability() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SURVEYPROBABILITY_ISSET_ID);
  }

  /** Returns true if field surveyProbability is set (has been assigned a value) and false otherwise */
  public boolean isSetSurveyProbability() {
    return EncodingUtils.testBit(__isset_bitfield, __SURVEYPROBABILITY_ISSET_ID);
  }

  public void setSurveyProbabilityIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SURVEYPROBABILITY_ISSET_ID, value);
  }

  public String getPageAnchor() {
    return this.pageAnchor;
  }

  public TDbSync_AdManager_Ad_Space setPageAnchor(String pageAnchor) {
    this.pageAnchor = pageAnchor;
    return this;
  }

  public void unsetPageAnchor() {
    this.pageAnchor = null;
  }

  /** Returns true if field pageAnchor is set (has been assigned a value) and false otherwise */
  public boolean isSetPageAnchor() {
    return this.pageAnchor != null;
  }

  public void setPageAnchorIsSet(boolean value) {
    if (!value) {
      this.pageAnchor = null;
    }
  }

  public int getPubPaidTimes() {
    return this.pubPaidTimes;
  }

  public TDbSync_AdManager_Ad_Space setPubPaidTimes(int pubPaidTimes) {
    this.pubPaidTimes = pubPaidTimes;
    setPubPaidTimesIsSet(true);
    return this;
  }

  public void unsetPubPaidTimes() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PUBPAIDTIMES_ISSET_ID);
  }

  /** Returns true if field pubPaidTimes is set (has been assigned a value) and false otherwise */
  public boolean isSetPubPaidTimes() {
    return EncodingUtils.testBit(__isset_bitfield, __PUBPAIDTIMES_ISSET_ID);
  }

  public void setPubPaidTimesIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PUBPAIDTIMES_ISSET_ID, value);
  }

  public int getRB_GroupID() {
    return this.rB_GroupID;
  }

  public TDbSync_AdManager_Ad_Space setRB_GroupID(int rB_GroupID) {
    this.rB_GroupID = rB_GroupID;
    setRB_GroupIDIsSet(true);
    return this;
  }

  public void unsetRB_GroupID() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RB_GROUPID_ISSET_ID);
  }

  /** Returns true if field rB_GroupID is set (has been assigned a value) and false otherwise */
  public boolean isSetRB_GroupID() {
    return EncodingUtils.testBit(__isset_bitfield, __RB_GROUPID_ISSET_ID);
  }

  public void setRB_GroupIDIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RB_GROUPID_ISSET_ID, value);
  }

  public int getIsRB_MainAdSpace() {
    return this.isRB_MainAdSpace;
  }

  public TDbSync_AdManager_Ad_Space setIsRB_MainAdSpace(int isRB_MainAdSpace) {
    this.isRB_MainAdSpace = isRB_MainAdSpace;
    setIsRB_MainAdSpaceIsSet(true);
    return this;
  }

  public void unsetIsRB_MainAdSpace() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISRB_MAINADSPACE_ISSET_ID);
  }

  /** Returns true if field isRB_MainAdSpace is set (has been assigned a value) and false otherwise */
  public boolean isSetIsRB_MainAdSpace() {
    return EncodingUtils.testBit(__isset_bitfield, __ISRB_MAINADSPACE_ISSET_ID);
  }

  public void setIsRB_MainAdSpaceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISRB_MAINADSPACE_ISSET_ID, value);
  }

  public int getFormat() {
    return this.format;
  }

  public TDbSync_AdManager_Ad_Space setFormat(int format) {
    this.format = format;
    setFormatIsSet(true);
    return this;
  }

  public void unsetFormat() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FORMAT_ISSET_ID);
  }

  /** Returns true if field format is set (has been assigned a value) and false otherwise */
  public boolean isSetFormat() {
    return EncodingUtils.testBit(__isset_bitfield, __FORMAT_ISSET_ID);
  }

  public void setFormatIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FORMAT_ISSET_ID, value);
  }

  public String getTrackingUrl() {
    return this.trackingUrl;
  }

  public TDbSync_AdManager_Ad_Space setTrackingUrl(String trackingUrl) {
    this.trackingUrl = trackingUrl;
    return this;
  }

  public void unsetTrackingUrl() {
    this.trackingUrl = null;
  }

  /** Returns true if field trackingUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetTrackingUrl() {
    return this.trackingUrl != null;
  }

  public void setTrackingUrlIsSet(boolean value) {
    if (!value) {
      this.trackingUrl = null;
    }
  }

  public String getClickTrackingUrl() {
    return this.clickTrackingUrl;
  }

  public TDbSync_AdManager_Ad_Space setClickTrackingUrl(String clickTrackingUrl) {
    this.clickTrackingUrl = clickTrackingUrl;
    return this;
  }

  public void unsetClickTrackingUrl() {
    this.clickTrackingUrl = null;
  }

  /** Returns true if field clickTrackingUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetClickTrackingUrl() {
    return this.clickTrackingUrl != null;
  }

  public void setClickTrackingUrlIsSet(boolean value) {
    if (!value) {
      this.clickTrackingUrl = null;
    }
  }

  public String getJsPath() {
    return this.jsPath;
  }

  public TDbSync_AdManager_Ad_Space setJsPath(String jsPath) {
    this.jsPath = jsPath;
    return this;
  }

  public void unsetJsPath() {
    this.jsPath = null;
  }

  /** Returns true if field jsPath is set (has been assigned a value) and false otherwise */
  public boolean isSetJsPath() {
    return this.jsPath != null;
  }

  public void setJsPathIsSet(boolean value) {
    if (!value) {
      this.jsPath = null;
    }
  }

  public int getAutoChangeSec() {
    return this.autoChangeSec;
  }

  public TDbSync_AdManager_Ad_Space setAutoChangeSec(int autoChangeSec) {
    this.autoChangeSec = autoChangeSec;
    setAutoChangeSecIsSet(true);
    return this;
  }

  public void unsetAutoChangeSec() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AUTOCHANGESEC_ISSET_ID);
  }

  /** Returns true if field autoChangeSec is set (has been assigned a value) and false otherwise */
  public boolean isSetAutoChangeSec() {
    return EncodingUtils.testBit(__isset_bitfield, __AUTOCHANGESEC_ISSET_ID);
  }

  public void setAutoChangeSecIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AUTOCHANGESEC_ISSET_ID, value);
  }

  public String getCrazyMapping() {
    return this.crazyMapping;
  }

  public TDbSync_AdManager_Ad_Space setCrazyMapping(String crazyMapping) {
    this.crazyMapping = crazyMapping;
    return this;
  }

  public void unsetCrazyMapping() {
    this.crazyMapping = null;
  }

  /** Returns true if field crazyMapping is set (has been assigned a value) and false otherwise */
  public boolean isSetCrazyMapping() {
    return this.crazyMapping != null;
  }

  public void setCrazyMappingIsSet(boolean value) {
    if (!value) {
      this.crazyMapping = null;
    }
  }

  public String getAdSpaceFormatDefine() {
    return this.adSpaceFormatDefine;
  }

  public TDbSync_AdManager_Ad_Space setAdSpaceFormatDefine(String adSpaceFormatDefine) {
    this.adSpaceFormatDefine = adSpaceFormatDefine;
    return this;
  }

  public void unsetAdSpaceFormatDefine() {
    this.adSpaceFormatDefine = null;
  }

  /** Returns true if field adSpaceFormatDefine is set (has been assigned a value) and false otherwise */
  public boolean isSetAdSpaceFormatDefine() {
    return this.adSpaceFormatDefine != null;
  }

  public void setAdSpaceFormatDefineIsSet(boolean value) {
    if (!value) {
      this.adSpaceFormatDefine = null;
    }
  }

  public String getAdSpaceFormat() {
    return this.adSpaceFormat;
  }

  public TDbSync_AdManager_Ad_Space setAdSpaceFormat(String adSpaceFormat) {
    this.adSpaceFormat = adSpaceFormat;
    return this;
  }

  public void unsetAdSpaceFormat() {
    this.adSpaceFormat = null;
  }

  /** Returns true if field adSpaceFormat is set (has been assigned a value) and false otherwise */
  public boolean isSetAdSpaceFormat() {
    return this.adSpaceFormat != null;
  }

  public void setAdSpaceFormatIsSet(boolean value) {
    if (!value) {
      this.adSpaceFormat = null;
    }
  }

  public int getBuyType() {
    return this.BuyType;
  }

  public TDbSync_AdManager_Ad_Space setBuyType(int BuyType) {
    this.BuyType = BuyType;
    setBuyTypeIsSet(true);
    return this;
  }

  public void unsetBuyType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BUYTYPE_ISSET_ID);
  }

  /** Returns true if field BuyType is set (has been assigned a value) and false otherwise */
  public boolean isSetBuyType() {
    return EncodingUtils.testBit(__isset_bitfield, __BUYTYPE_ISSET_ID);
  }

  public void setBuyTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BUYTYPE_ISSET_ID, value);
  }

  public int getAskCpdRate() {
    return this.AskCpdRate;
  }

  public TDbSync_AdManager_Ad_Space setAskCpdRate(int AskCpdRate) {
    this.AskCpdRate = AskCpdRate;
    setAskCpdRateIsSet(true);
    return this;
  }

  public void unsetAskCpdRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ASKCPDRATE_ISSET_ID);
  }

  /** Returns true if field AskCpdRate is set (has been assigned a value) and false otherwise */
  public boolean isSetAskCpdRate() {
    return EncodingUtils.testBit(__isset_bitfield, __ASKCPDRATE_ISSET_ID);
  }

  public void setAskCpdRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ASKCPDRATE_ISSET_ID, value);
  }

  public int getAskCpmRate() {
    return this.AskCpmRate;
  }

  public TDbSync_AdManager_Ad_Space setAskCpmRate(int AskCpmRate) {
    this.AskCpmRate = AskCpmRate;
    setAskCpmRateIsSet(true);
    return this;
  }

  public void unsetAskCpmRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ASKCPMRATE_ISSET_ID);
  }

  /** Returns true if field AskCpmRate is set (has been assigned a value) and false otherwise */
  public boolean isSetAskCpmRate() {
    return EncodingUtils.testBit(__isset_bitfield, __ASKCPMRATE_ISSET_ID);
  }

  public void setAskCpmRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ASKCPMRATE_ISSET_ID, value);
  }

  public int getAskCpcRate() {
    return this.AskCpcRate;
  }

  public TDbSync_AdManager_Ad_Space setAskCpcRate(int AskCpcRate) {
    this.AskCpcRate = AskCpcRate;
    setAskCpcRateIsSet(true);
    return this;
  }

  public void unsetAskCpcRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ASKCPCRATE_ISSET_ID);
  }

  /** Returns true if field AskCpcRate is set (has been assigned a value) and false otherwise */
  public boolean isSetAskCpcRate() {
    return EncodingUtils.testBit(__isset_bitfield, __ASKCPCRATE_ISSET_ID);
  }

  public void setAskCpcRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ASKCPCRATE_ISSET_ID, value);
  }

  public int getNetWork() {
    return this.NetWork;
  }

  public TDbSync_AdManager_Ad_Space setNetWork(int NetWork) {
    this.NetWork = NetWork;
    setNetWorkIsSet(true);
    return this;
  }

  public void unsetNetWork() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NETWORK_ISSET_ID);
  }

  /** Returns true if field NetWork is set (has been assigned a value) and false otherwise */
  public boolean isSetNetWork() {
    return EncodingUtils.testBit(__isset_bitfield, __NETWORK_ISSET_ID);
  }

  public void setNetWorkIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NETWORK_ISSET_ID, value);
  }

  public int getTemplateId() {
    return this.TemplateId;
  }

  public TDbSync_AdManager_Ad_Space setTemplateId(int TemplateId) {
    this.TemplateId = TemplateId;
    setTemplateIdIsSet(true);
    return this;
  }

  public void unsetTemplateId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TEMPLATEID_ISSET_ID);
  }

  /** Returns true if field TemplateId is set (has been assigned a value) and false otherwise */
  public boolean isSetTemplateId() {
    return EncodingUtils.testBit(__isset_bitfield, __TEMPLATEID_ISSET_ID);
  }

  public void setTemplateIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TEMPLATEID_ISSET_ID, value);
  }

  public int getTextRecycle() {
    return this.TextRecycle;
  }

  public TDbSync_AdManager_Ad_Space setTextRecycle(int TextRecycle) {
    this.TextRecycle = TextRecycle;
    setTextRecycleIsSet(true);
    return this;
  }

  public void unsetTextRecycle() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TEXTRECYCLE_ISSET_ID);
  }

  /** Returns true if field TextRecycle is set (has been assigned a value) and false otherwise */
  public boolean isSetTextRecycle() {
    return EncodingUtils.testBit(__isset_bitfield, __TEXTRECYCLE_ISSET_ID);
  }

  public void setTextRecycleIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TEXTRECYCLE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case AD_SPACE_ID:
      if (value == null) {
        unsetAdSpaceID();
      } else {
        setAdSpaceID((Integer)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    case LAST_CHANGED:
      if (value == null) {
        unsetLastChanged();
      } else {
        setLastChanged((String)value);
      }
      break;

    case VERSION:
      if (value == null) {
        unsetVersion();
      } else {
        setVersion((Integer)value);
      }
      break;

    case ACCOUNT_ID:
      if (value == null) {
        unsetAccountID();
      } else {
        setAccountID((Integer)value);
      }
      break;

    case DEFAULT_URL:
      if (value == null) {
        unsetDefaultUrl();
      } else {
        setDefaultUrl((String)value);
      }
      break;

    case SIZE_ID:
      if (value == null) {
        unsetSizeID();
      } else {
        setSizeID((Integer)value);
      }
      break;

    case SITE_ID:
      if (value == null) {
        unsetSiteID();
      } else {
        setSiteID((Integer)value);
      }
      break;

    case N_F__SIZE_ID:
      if (value == null) {
        unsetNF_SizeID();
      } else {
        setNF_SizeID((Integer)value);
      }
      break;

    case ADV_FEATURE:
      if (value == null) {
        unsetAdvFeature();
      } else {
        setAdvFeature((Long)value);
      }
      break;

    case DISPLAY_INTERVAL:
      if (value == null) {
        unsetDisplayInterval();
      } else {
        setDisplayInterval((Integer)value);
      }
      break;

    case V_P__SHOW_FREQUENCY:
      if (value == null) {
        unsetVP_ShowFrequency();
      } else {
        setVP_ShowFrequency((Integer)value);
      }
      break;

    case SURVEY_PROBABILITY:
      if (value == null) {
        unsetSurveyProbability();
      } else {
        setSurveyProbability((Integer)value);
      }
      break;

    case PAGE_ANCHOR:
      if (value == null) {
        unsetPageAnchor();
      } else {
        setPageAnchor((String)value);
      }
      break;

    case PUB_PAID_TIMES:
      if (value == null) {
        unsetPubPaidTimes();
      } else {
        setPubPaidTimes((Integer)value);
      }
      break;

    case R_B__GROUP_ID:
      if (value == null) {
        unsetRB_GroupID();
      } else {
        setRB_GroupID((Integer)value);
      }
      break;

    case IS_RB__MAIN_AD_SPACE:
      if (value == null) {
        unsetIsRB_MainAdSpace();
      } else {
        setIsRB_MainAdSpace((Integer)value);
      }
      break;

    case FORMAT:
      if (value == null) {
        unsetFormat();
      } else {
        setFormat((Integer)value);
      }
      break;

    case TRACKING_URL:
      if (value == null) {
        unsetTrackingUrl();
      } else {
        setTrackingUrl((String)value);
      }
      break;

    case CLICK_TRACKING_URL:
      if (value == null) {
        unsetClickTrackingUrl();
      } else {
        setClickTrackingUrl((String)value);
      }
      break;

    case JS_PATH:
      if (value == null) {
        unsetJsPath();
      } else {
        setJsPath((String)value);
      }
      break;

    case AUTO_CHANGE_SEC:
      if (value == null) {
        unsetAutoChangeSec();
      } else {
        setAutoChangeSec((Integer)value);
      }
      break;

    case CRAZY_MAPPING:
      if (value == null) {
        unsetCrazyMapping();
      } else {
        setCrazyMapping((String)value);
      }
      break;

    case AD_SPACE_FORMAT_DEFINE:
      if (value == null) {
        unsetAdSpaceFormatDefine();
      } else {
        setAdSpaceFormatDefine((String)value);
      }
      break;

    case AD_SPACE_FORMAT:
      if (value == null) {
        unsetAdSpaceFormat();
      } else {
        setAdSpaceFormat((String)value);
      }
      break;

    case BUY_TYPE:
      if (value == null) {
        unsetBuyType();
      } else {
        setBuyType((Integer)value);
      }
      break;

    case ASK_CPD_RATE:
      if (value == null) {
        unsetAskCpdRate();
      } else {
        setAskCpdRate((Integer)value);
      }
      break;

    case ASK_CPM_RATE:
      if (value == null) {
        unsetAskCpmRate();
      } else {
        setAskCpmRate((Integer)value);
      }
      break;

    case ASK_CPC_RATE:
      if (value == null) {
        unsetAskCpcRate();
      } else {
        setAskCpcRate((Integer)value);
      }
      break;

    case NET_WORK:
      if (value == null) {
        unsetNetWork();
      } else {
        setNetWork((Integer)value);
      }
      break;

    case TEMPLATE_ID:
      if (value == null) {
        unsetTemplateId();
      } else {
        setTemplateId((Integer)value);
      }
      break;

    case TEXT_RECYCLE:
      if (value == null) {
        unsetTextRecycle();
      } else {
        setTextRecycle((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case AD_SPACE_ID:
      return Integer.valueOf(getAdSpaceID());

    case STATUS:
      return Integer.valueOf(getStatus());

    case LAST_CHANGED:
      return getLastChanged();

    case VERSION:
      return Integer.valueOf(getVersion());

    case ACCOUNT_ID:
      return Integer.valueOf(getAccountID());

    case DEFAULT_URL:
      return getDefaultUrl();

    case SIZE_ID:
      return Integer.valueOf(getSizeID());

    case SITE_ID:
      return Integer.valueOf(getSiteID());

    case N_F__SIZE_ID:
      return Integer.valueOf(getNF_SizeID());

    case ADV_FEATURE:
      return Long.valueOf(getAdvFeature());

    case DISPLAY_INTERVAL:
      return Integer.valueOf(getDisplayInterval());

    case V_P__SHOW_FREQUENCY:
      return Integer.valueOf(getVP_ShowFrequency());

    case SURVEY_PROBABILITY:
      return Integer.valueOf(getSurveyProbability());

    case PAGE_ANCHOR:
      return getPageAnchor();

    case PUB_PAID_TIMES:
      return Integer.valueOf(getPubPaidTimes());

    case R_B__GROUP_ID:
      return Integer.valueOf(getRB_GroupID());

    case IS_RB__MAIN_AD_SPACE:
      return Integer.valueOf(getIsRB_MainAdSpace());

    case FORMAT:
      return Integer.valueOf(getFormat());

    case TRACKING_URL:
      return getTrackingUrl();

    case CLICK_TRACKING_URL:
      return getClickTrackingUrl();

    case JS_PATH:
      return getJsPath();

    case AUTO_CHANGE_SEC:
      return Integer.valueOf(getAutoChangeSec());

    case CRAZY_MAPPING:
      return getCrazyMapping();

    case AD_SPACE_FORMAT_DEFINE:
      return getAdSpaceFormatDefine();

    case AD_SPACE_FORMAT:
      return getAdSpaceFormat();

    case BUY_TYPE:
      return Integer.valueOf(getBuyType());

    case ASK_CPD_RATE:
      return Integer.valueOf(getAskCpdRate());

    case ASK_CPM_RATE:
      return Integer.valueOf(getAskCpmRate());

    case ASK_CPC_RATE:
      return Integer.valueOf(getAskCpcRate());

    case NET_WORK:
      return Integer.valueOf(getNetWork());

    case TEMPLATE_ID:
      return Integer.valueOf(getTemplateId());

    case TEXT_RECYCLE:
      return Integer.valueOf(getTextRecycle());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case AD_SPACE_ID:
      return isSetAdSpaceID();
    case STATUS:
      return isSetStatus();
    case LAST_CHANGED:
      return isSetLastChanged();
    case VERSION:
      return isSetVersion();
    case ACCOUNT_ID:
      return isSetAccountID();
    case DEFAULT_URL:
      return isSetDefaultUrl();
    case SIZE_ID:
      return isSetSizeID();
    case SITE_ID:
      return isSetSiteID();
    case N_F__SIZE_ID:
      return isSetNF_SizeID();
    case ADV_FEATURE:
      return isSetAdvFeature();
    case DISPLAY_INTERVAL:
      return isSetDisplayInterval();
    case V_P__SHOW_FREQUENCY:
      return isSetVP_ShowFrequency();
    case SURVEY_PROBABILITY:
      return isSetSurveyProbability();
    case PAGE_ANCHOR:
      return isSetPageAnchor();
    case PUB_PAID_TIMES:
      return isSetPubPaidTimes();
    case R_B__GROUP_ID:
      return isSetRB_GroupID();
    case IS_RB__MAIN_AD_SPACE:
      return isSetIsRB_MainAdSpace();
    case FORMAT:
      return isSetFormat();
    case TRACKING_URL:
      return isSetTrackingUrl();
    case CLICK_TRACKING_URL:
      return isSetClickTrackingUrl();
    case JS_PATH:
      return isSetJsPath();
    case AUTO_CHANGE_SEC:
      return isSetAutoChangeSec();
    case CRAZY_MAPPING:
      return isSetCrazyMapping();
    case AD_SPACE_FORMAT_DEFINE:
      return isSetAdSpaceFormatDefine();
    case AD_SPACE_FORMAT:
      return isSetAdSpaceFormat();
    case BUY_TYPE:
      return isSetBuyType();
    case ASK_CPD_RATE:
      return isSetAskCpdRate();
    case ASK_CPM_RATE:
      return isSetAskCpmRate();
    case ASK_CPC_RATE:
      return isSetAskCpcRate();
    case NET_WORK:
      return isSetNetWork();
    case TEMPLATE_ID:
      return isSetTemplateId();
    case TEXT_RECYCLE:
      return isSetTextRecycle();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TDbSync_AdManager_Ad_Space)
      return this.equals((TDbSync_AdManager_Ad_Space)that);
    return false;
  }

  public boolean equals(TDbSync_AdManager_Ad_Space that) {
    if (that == null)
      return false;

    boolean this_present_adSpaceID = true;
    boolean that_present_adSpaceID = true;
    if (this_present_adSpaceID || that_present_adSpaceID) {
      if (!(this_present_adSpaceID && that_present_adSpaceID))
        return false;
      if (this.adSpaceID != that.adSpaceID)
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_lastChanged = true && this.isSetLastChanged();
    boolean that_present_lastChanged = true && that.isSetLastChanged();
    if (this_present_lastChanged || that_present_lastChanged) {
      if (!(this_present_lastChanged && that_present_lastChanged))
        return false;
      if (!this.lastChanged.equals(that.lastChanged))
        return false;
    }

    boolean this_present_version = true;
    boolean that_present_version = true;
    if (this_present_version || that_present_version) {
      if (!(this_present_version && that_present_version))
        return false;
      if (this.version != that.version)
        return false;
    }

    boolean this_present_accountID = true;
    boolean that_present_accountID = true;
    if (this_present_accountID || that_present_accountID) {
      if (!(this_present_accountID && that_present_accountID))
        return false;
      if (this.accountID != that.accountID)
        return false;
    }

    boolean this_present_defaultUrl = true && this.isSetDefaultUrl();
    boolean that_present_defaultUrl = true && that.isSetDefaultUrl();
    if (this_present_defaultUrl || that_present_defaultUrl) {
      if (!(this_present_defaultUrl && that_present_defaultUrl))
        return false;
      if (!this.defaultUrl.equals(that.defaultUrl))
        return false;
    }

    boolean this_present_sizeID = true;
    boolean that_present_sizeID = true;
    if (this_present_sizeID || that_present_sizeID) {
      if (!(this_present_sizeID && that_present_sizeID))
        return false;
      if (this.sizeID != that.sizeID)
        return false;
    }

    boolean this_present_siteID = true;
    boolean that_present_siteID = true;
    if (this_present_siteID || that_present_siteID) {
      if (!(this_present_siteID && that_present_siteID))
        return false;
      if (this.siteID != that.siteID)
        return false;
    }

    boolean this_present_nF_SizeID = true;
    boolean that_present_nF_SizeID = true;
    if (this_present_nF_SizeID || that_present_nF_SizeID) {
      if (!(this_present_nF_SizeID && that_present_nF_SizeID))
        return false;
      if (this.nF_SizeID != that.nF_SizeID)
        return false;
    }

    boolean this_present_advFeature = true;
    boolean that_present_advFeature = true;
    if (this_present_advFeature || that_present_advFeature) {
      if (!(this_present_advFeature && that_present_advFeature))
        return false;
      if (this.advFeature != that.advFeature)
        return false;
    }

    boolean this_present_displayInterval = true;
    boolean that_present_displayInterval = true;
    if (this_present_displayInterval || that_present_displayInterval) {
      if (!(this_present_displayInterval && that_present_displayInterval))
        return false;
      if (this.displayInterval != that.displayInterval)
        return false;
    }

    boolean this_present_vP_ShowFrequency = true;
    boolean that_present_vP_ShowFrequency = true;
    if (this_present_vP_ShowFrequency || that_present_vP_ShowFrequency) {
      if (!(this_present_vP_ShowFrequency && that_present_vP_ShowFrequency))
        return false;
      if (this.vP_ShowFrequency != that.vP_ShowFrequency)
        return false;
    }

    boolean this_present_surveyProbability = true;
    boolean that_present_surveyProbability = true;
    if (this_present_surveyProbability || that_present_surveyProbability) {
      if (!(this_present_surveyProbability && that_present_surveyProbability))
        return false;
      if (this.surveyProbability != that.surveyProbability)
        return false;
    }

    boolean this_present_pageAnchor = true && this.isSetPageAnchor();
    boolean that_present_pageAnchor = true && that.isSetPageAnchor();
    if (this_present_pageAnchor || that_present_pageAnchor) {
      if (!(this_present_pageAnchor && that_present_pageAnchor))
        return false;
      if (!this.pageAnchor.equals(that.pageAnchor))
        return false;
    }

    boolean this_present_pubPaidTimes = true;
    boolean that_present_pubPaidTimes = true;
    if (this_present_pubPaidTimes || that_present_pubPaidTimes) {
      if (!(this_present_pubPaidTimes && that_present_pubPaidTimes))
        return false;
      if (this.pubPaidTimes != that.pubPaidTimes)
        return false;
    }

    boolean this_present_rB_GroupID = true;
    boolean that_present_rB_GroupID = true;
    if (this_present_rB_GroupID || that_present_rB_GroupID) {
      if (!(this_present_rB_GroupID && that_present_rB_GroupID))
        return false;
      if (this.rB_GroupID != that.rB_GroupID)
        return false;
    }

    boolean this_present_isRB_MainAdSpace = true;
    boolean that_present_isRB_MainAdSpace = true;
    if (this_present_isRB_MainAdSpace || that_present_isRB_MainAdSpace) {
      if (!(this_present_isRB_MainAdSpace && that_present_isRB_MainAdSpace))
        return false;
      if (this.isRB_MainAdSpace != that.isRB_MainAdSpace)
        return false;
    }

    boolean this_present_format = true;
    boolean that_present_format = true;
    if (this_present_format || that_present_format) {
      if (!(this_present_format && that_present_format))
        return false;
      if (this.format != that.format)
        return false;
    }

    boolean this_present_trackingUrl = true && this.isSetTrackingUrl();
    boolean that_present_trackingUrl = true && that.isSetTrackingUrl();
    if (this_present_trackingUrl || that_present_trackingUrl) {
      if (!(this_present_trackingUrl && that_present_trackingUrl))
        return false;
      if (!this.trackingUrl.equals(that.trackingUrl))
        return false;
    }

    boolean this_present_clickTrackingUrl = true && this.isSetClickTrackingUrl();
    boolean that_present_clickTrackingUrl = true && that.isSetClickTrackingUrl();
    if (this_present_clickTrackingUrl || that_present_clickTrackingUrl) {
      if (!(this_present_clickTrackingUrl && that_present_clickTrackingUrl))
        return false;
      if (!this.clickTrackingUrl.equals(that.clickTrackingUrl))
        return false;
    }

    boolean this_present_jsPath = true && this.isSetJsPath();
    boolean that_present_jsPath = true && that.isSetJsPath();
    if (this_present_jsPath || that_present_jsPath) {
      if (!(this_present_jsPath && that_present_jsPath))
        return false;
      if (!this.jsPath.equals(that.jsPath))
        return false;
    }

    boolean this_present_autoChangeSec = true;
    boolean that_present_autoChangeSec = true;
    if (this_present_autoChangeSec || that_present_autoChangeSec) {
      if (!(this_present_autoChangeSec && that_present_autoChangeSec))
        return false;
      if (this.autoChangeSec != that.autoChangeSec)
        return false;
    }

    boolean this_present_crazyMapping = true && this.isSetCrazyMapping();
    boolean that_present_crazyMapping = true && that.isSetCrazyMapping();
    if (this_present_crazyMapping || that_present_crazyMapping) {
      if (!(this_present_crazyMapping && that_present_crazyMapping))
        return false;
      if (!this.crazyMapping.equals(that.crazyMapping))
        return false;
    }

    boolean this_present_adSpaceFormatDefine = true && this.isSetAdSpaceFormatDefine();
    boolean that_present_adSpaceFormatDefine = true && that.isSetAdSpaceFormatDefine();
    if (this_present_adSpaceFormatDefine || that_present_adSpaceFormatDefine) {
      if (!(this_present_adSpaceFormatDefine && that_present_adSpaceFormatDefine))
        return false;
      if (!this.adSpaceFormatDefine.equals(that.adSpaceFormatDefine))
        return false;
    }

    boolean this_present_adSpaceFormat = true && this.isSetAdSpaceFormat();
    boolean that_present_adSpaceFormat = true && that.isSetAdSpaceFormat();
    if (this_present_adSpaceFormat || that_present_adSpaceFormat) {
      if (!(this_present_adSpaceFormat && that_present_adSpaceFormat))
        return false;
      if (!this.adSpaceFormat.equals(that.adSpaceFormat))
        return false;
    }

    boolean this_present_BuyType = true;
    boolean that_present_BuyType = true;
    if (this_present_BuyType || that_present_BuyType) {
      if (!(this_present_BuyType && that_present_BuyType))
        return false;
      if (this.BuyType != that.BuyType)
        return false;
    }

    boolean this_present_AskCpdRate = true;
    boolean that_present_AskCpdRate = true;
    if (this_present_AskCpdRate || that_present_AskCpdRate) {
      if (!(this_present_AskCpdRate && that_present_AskCpdRate))
        return false;
      if (this.AskCpdRate != that.AskCpdRate)
        return false;
    }

    boolean this_present_AskCpmRate = true;
    boolean that_present_AskCpmRate = true;
    if (this_present_AskCpmRate || that_present_AskCpmRate) {
      if (!(this_present_AskCpmRate && that_present_AskCpmRate))
        return false;
      if (this.AskCpmRate != that.AskCpmRate)
        return false;
    }

    boolean this_present_AskCpcRate = true;
    boolean that_present_AskCpcRate = true;
    if (this_present_AskCpcRate || that_present_AskCpcRate) {
      if (!(this_present_AskCpcRate && that_present_AskCpcRate))
        return false;
      if (this.AskCpcRate != that.AskCpcRate)
        return false;
    }

    boolean this_present_NetWork = true;
    boolean that_present_NetWork = true;
    if (this_present_NetWork || that_present_NetWork) {
      if (!(this_present_NetWork && that_present_NetWork))
        return false;
      if (this.NetWork != that.NetWork)
        return false;
    }

    boolean this_present_TemplateId = true;
    boolean that_present_TemplateId = true;
    if (this_present_TemplateId || that_present_TemplateId) {
      if (!(this_present_TemplateId && that_present_TemplateId))
        return false;
      if (this.TemplateId != that.TemplateId)
        return false;
    }

    boolean this_present_TextRecycle = true;
    boolean that_present_TextRecycle = true;
    if (this_present_TextRecycle || that_present_TextRecycle) {
      if (!(this_present_TextRecycle && that_present_TextRecycle))
        return false;
      if (this.TextRecycle != that.TextRecycle)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(TDbSync_AdManager_Ad_Space other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAdSpaceID()).compareTo(other.isSetAdSpaceID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdSpaceID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adSpaceID, other.adSpaceID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastChanged()).compareTo(other.isSetLastChanged());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastChanged()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastChanged, other.lastChanged);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVersion()).compareTo(other.isSetVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.version, other.version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountID()).compareTo(other.isSetAccountID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountID, other.accountID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDefaultUrl()).compareTo(other.isSetDefaultUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDefaultUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.defaultUrl, other.defaultUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSizeID()).compareTo(other.isSetSizeID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSizeID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sizeID, other.sizeID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSiteID()).compareTo(other.isSetSiteID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSiteID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.siteID, other.siteID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNF_SizeID()).compareTo(other.isSetNF_SizeID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNF_SizeID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nF_SizeID, other.nF_SizeID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdvFeature()).compareTo(other.isSetAdvFeature());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdvFeature()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.advFeature, other.advFeature);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisplayInterval()).compareTo(other.isSetDisplayInterval());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayInterval()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.displayInterval, other.displayInterval);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVP_ShowFrequency()).compareTo(other.isSetVP_ShowFrequency());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVP_ShowFrequency()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vP_ShowFrequency, other.vP_ShowFrequency);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSurveyProbability()).compareTo(other.isSetSurveyProbability());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSurveyProbability()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.surveyProbability, other.surveyProbability);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPageAnchor()).compareTo(other.isSetPageAnchor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageAnchor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageAnchor, other.pageAnchor);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPubPaidTimes()).compareTo(other.isSetPubPaidTimes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPubPaidTimes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pubPaidTimes, other.pubPaidTimes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRB_GroupID()).compareTo(other.isSetRB_GroupID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRB_GroupID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rB_GroupID, other.rB_GroupID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsRB_MainAdSpace()).compareTo(other.isSetIsRB_MainAdSpace());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsRB_MainAdSpace()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isRB_MainAdSpace, other.isRB_MainAdSpace);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFormat()).compareTo(other.isSetFormat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFormat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.format, other.format);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTrackingUrl()).compareTo(other.isSetTrackingUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrackingUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trackingUrl, other.trackingUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClickTrackingUrl()).compareTo(other.isSetClickTrackingUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClickTrackingUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clickTrackingUrl, other.clickTrackingUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJsPath()).compareTo(other.isSetJsPath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJsPath()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jsPath, other.jsPath);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAutoChangeSec()).compareTo(other.isSetAutoChangeSec());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAutoChangeSec()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.autoChangeSec, other.autoChangeSec);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCrazyMapping()).compareTo(other.isSetCrazyMapping());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCrazyMapping()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.crazyMapping, other.crazyMapping);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdSpaceFormatDefine()).compareTo(other.isSetAdSpaceFormatDefine());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdSpaceFormatDefine()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adSpaceFormatDefine, other.adSpaceFormatDefine);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdSpaceFormat()).compareTo(other.isSetAdSpaceFormat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdSpaceFormat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adSpaceFormat, other.adSpaceFormat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuyType()).compareTo(other.isSetBuyType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuyType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.BuyType, other.BuyType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAskCpdRate()).compareTo(other.isSetAskCpdRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAskCpdRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.AskCpdRate, other.AskCpdRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAskCpmRate()).compareTo(other.isSetAskCpmRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAskCpmRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.AskCpmRate, other.AskCpmRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAskCpcRate()).compareTo(other.isSetAskCpcRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAskCpcRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.AskCpcRate, other.AskCpcRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNetWork()).compareTo(other.isSetNetWork());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNetWork()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.NetWork, other.NetWork);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTemplateId()).compareTo(other.isSetTemplateId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTemplateId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.TemplateId, other.TemplateId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTextRecycle()).compareTo(other.isSetTextRecycle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTextRecycle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.TextRecycle, other.TextRecycle);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TDbSync_AdManager_Ad_Space(");
    boolean first = true;

    sb.append("adSpaceID:");
    sb.append(this.adSpaceID);
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastChanged:");
    if (this.lastChanged == null) {
      sb.append("null");
    } else {
      sb.append(this.lastChanged);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("version:");
    sb.append(this.version);
    first = false;
    if (!first) sb.append(", ");
    sb.append("accountID:");
    sb.append(this.accountID);
    first = false;
    if (!first) sb.append(", ");
    sb.append("defaultUrl:");
    if (this.defaultUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.defaultUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sizeID:");
    sb.append(this.sizeID);
    first = false;
    if (!first) sb.append(", ");
    sb.append("siteID:");
    sb.append(this.siteID);
    first = false;
    if (!first) sb.append(", ");
    sb.append("nF_SizeID:");
    sb.append(this.nF_SizeID);
    first = false;
    if (!first) sb.append(", ");
    sb.append("advFeature:");
    sb.append(this.advFeature);
    first = false;
    if (!first) sb.append(", ");
    sb.append("displayInterval:");
    sb.append(this.displayInterval);
    first = false;
    if (!first) sb.append(", ");
    sb.append("vP_ShowFrequency:");
    sb.append(this.vP_ShowFrequency);
    first = false;
    if (!first) sb.append(", ");
    sb.append("surveyProbability:");
    sb.append(this.surveyProbability);
    first = false;
    if (!first) sb.append(", ");
    sb.append("pageAnchor:");
    if (this.pageAnchor == null) {
      sb.append("null");
    } else {
      sb.append(this.pageAnchor);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pubPaidTimes:");
    sb.append(this.pubPaidTimes);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rB_GroupID:");
    sb.append(this.rB_GroupID);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isRB_MainAdSpace:");
    sb.append(this.isRB_MainAdSpace);
    first = false;
    if (!first) sb.append(", ");
    sb.append("format:");
    sb.append(this.format);
    first = false;
    if (!first) sb.append(", ");
    sb.append("trackingUrl:");
    if (this.trackingUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.trackingUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clickTrackingUrl:");
    if (this.clickTrackingUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.clickTrackingUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("jsPath:");
    if (this.jsPath == null) {
      sb.append("null");
    } else {
      sb.append(this.jsPath);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("autoChangeSec:");
    sb.append(this.autoChangeSec);
    first = false;
    if (!first) sb.append(", ");
    sb.append("crazyMapping:");
    if (this.crazyMapping == null) {
      sb.append("null");
    } else {
      sb.append(this.crazyMapping);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("adSpaceFormatDefine:");
    if (this.adSpaceFormatDefine == null) {
      sb.append("null");
    } else {
      sb.append(this.adSpaceFormatDefine);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("adSpaceFormat:");
    if (this.adSpaceFormat == null) {
      sb.append("null");
    } else {
      sb.append(this.adSpaceFormat);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("BuyType:");
    sb.append(this.BuyType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("AskCpdRate:");
    sb.append(this.AskCpdRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("AskCpmRate:");
    sb.append(this.AskCpmRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("AskCpcRate:");
    sb.append(this.AskCpcRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("NetWork:");
    sb.append(this.NetWork);
    first = false;
    if (!first) sb.append(", ");
    sb.append("TemplateId:");
    sb.append(this.TemplateId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("TextRecycle:");
    sb.append(this.TextRecycle);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'adSpaceID' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'status' because it's a primitive and you chose the non-beans generator.
    if (lastChanged == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'lastChanged' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'version' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'accountID' because it's a primitive and you chose the non-beans generator.
    if (defaultUrl == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'defaultUrl' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'sizeID' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'siteID' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'nF_SizeID' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'advFeature' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'displayInterval' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'vP_ShowFrequency' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'surveyProbability' because it's a primitive and you chose the non-beans generator.
    if (pageAnchor == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'pageAnchor' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'pubPaidTimes' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'rB_GroupID' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'isRB_MainAdSpace' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'format' because it's a primitive and you chose the non-beans generator.
    if (trackingUrl == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'trackingUrl' was not present! Struct: " + toString());
    }
    if (clickTrackingUrl == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'clickTrackingUrl' was not present! Struct: " + toString());
    }
    if (jsPath == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'jsPath' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'autoChangeSec' because it's a primitive and you chose the non-beans generator.
    if (crazyMapping == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'crazyMapping' was not present! Struct: " + toString());
    }
    if (adSpaceFormatDefine == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'adSpaceFormatDefine' was not present! Struct: " + toString());
    }
    if (adSpaceFormat == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'adSpaceFormat' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'BuyType' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'AskCpdRate' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'AskCpmRate' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'AskCpcRate' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'NetWork' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'TemplateId' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'TextRecycle' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TDbSync_AdManager_Ad_SpaceStandardSchemeFactory implements SchemeFactory {
    public TDbSync_AdManager_Ad_SpaceStandardScheme getScheme() {
      return new TDbSync_AdManager_Ad_SpaceStandardScheme();
    }
  }

  private static class TDbSync_AdManager_Ad_SpaceStandardScheme extends StandardScheme<TDbSync_AdManager_Ad_Space> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TDbSync_AdManager_Ad_Space struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // AD_SPACE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.adSpaceID = iprot.readI32();
              struct.setAdSpaceIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LAST_CHANGED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lastChanged = iprot.readString();
              struct.setLastChangedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.version = iprot.readI32();
              struct.setVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.accountID = iprot.readI32();
              struct.setAccountIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // DEFAULT_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.defaultUrl = iprot.readString();
              struct.setDefaultUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SIZE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sizeID = iprot.readI32();
              struct.setSizeIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SITE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.siteID = iprot.readI32();
              struct.setSiteIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // N_F__SIZE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.nF_SizeID = iprot.readI32();
              struct.setNF_SizeIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ADV_FEATURE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.advFeature = iprot.readI64();
              struct.setAdvFeatureIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // DISPLAY_INTERVAL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.displayInterval = iprot.readI32();
              struct.setDisplayIntervalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // V_P__SHOW_FREQUENCY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.vP_ShowFrequency = iprot.readI32();
              struct.setVP_ShowFrequencyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // SURVEY_PROBABILITY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.surveyProbability = iprot.readI32();
              struct.setSurveyProbabilityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PAGE_ANCHOR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pageAnchor = iprot.readString();
              struct.setPageAnchorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // PUB_PAID_TIMES
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pubPaidTimes = iprot.readI32();
              struct.setPubPaidTimesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // R_B__GROUP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rB_GroupID = iprot.readI32();
              struct.setRB_GroupIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // IS_RB__MAIN_AD_SPACE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.isRB_MainAdSpace = iprot.readI32();
              struct.setIsRB_MainAdSpaceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // FORMAT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.format = iprot.readI32();
              struct.setFormatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // TRACKING_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.trackingUrl = iprot.readString();
              struct.setTrackingUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // CLICK_TRACKING_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clickTrackingUrl = iprot.readString();
              struct.setClickTrackingUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // JS_PATH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.jsPath = iprot.readString();
              struct.setJsPathIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // AUTO_CHANGE_SEC
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.autoChangeSec = iprot.readI32();
              struct.setAutoChangeSecIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // CRAZY_MAPPING
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.crazyMapping = iprot.readString();
              struct.setCrazyMappingIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // AD_SPACE_FORMAT_DEFINE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.adSpaceFormatDefine = iprot.readString();
              struct.setAdSpaceFormatDefineIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // AD_SPACE_FORMAT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.adSpaceFormat = iprot.readString();
              struct.setAdSpaceFormatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // BUY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.BuyType = iprot.readI32();
              struct.setBuyTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // ASK_CPD_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.AskCpdRate = iprot.readI32();
              struct.setAskCpdRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // ASK_CPM_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.AskCpmRate = iprot.readI32();
              struct.setAskCpmRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // ASK_CPC_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.AskCpcRate = iprot.readI32();
              struct.setAskCpcRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // NET_WORK
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.NetWork = iprot.readI32();
              struct.setNetWorkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // TEMPLATE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.TemplateId = iprot.readI32();
              struct.setTemplateIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // TEXT_RECYCLE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.TextRecycle = iprot.readI32();
              struct.setTextRecycleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetAdSpaceID()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'adSpaceID' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetStatus()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'status' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetVersion()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'version' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetAccountID()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'accountID' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetSizeID()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'sizeID' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetSiteID()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'siteID' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetNF_SizeID()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'nF_SizeID' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetAdvFeature()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'advFeature' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetDisplayInterval()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'displayInterval' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetVP_ShowFrequency()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'vP_ShowFrequency' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetSurveyProbability()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'surveyProbability' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetPubPaidTimes()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'pubPaidTimes' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetRB_GroupID()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'rB_GroupID' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetIsRB_MainAdSpace()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'isRB_MainAdSpace' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetFormat()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'format' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetAutoChangeSec()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'autoChangeSec' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetBuyType()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'BuyType' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetAskCpdRate()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'AskCpdRate' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetAskCpmRate()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'AskCpmRate' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetAskCpcRate()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'AskCpcRate' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetNetWork()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'NetWork' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetTemplateId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'TemplateId' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetTextRecycle()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'TextRecycle' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TDbSync_AdManager_Ad_Space struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(AD_SPACE_ID_FIELD_DESC);
      oprot.writeI32(struct.adSpaceID);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.status);
      oprot.writeFieldEnd();
      if (struct.lastChanged != null) {
        oprot.writeFieldBegin(LAST_CHANGED_FIELD_DESC);
        oprot.writeString(struct.lastChanged);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(VERSION_FIELD_DESC);
      oprot.writeI32(struct.version);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ACCOUNT_ID_FIELD_DESC);
      oprot.writeI32(struct.accountID);
      oprot.writeFieldEnd();
      if (struct.defaultUrl != null) {
        oprot.writeFieldBegin(DEFAULT_URL_FIELD_DESC);
        oprot.writeString(struct.defaultUrl);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SIZE_ID_FIELD_DESC);
      oprot.writeI32(struct.sizeID);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SITE_ID_FIELD_DESC);
      oprot.writeI32(struct.siteID);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(N_F__SIZE_ID_FIELD_DESC);
      oprot.writeI32(struct.nF_SizeID);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ADV_FEATURE_FIELD_DESC);
      oprot.writeI64(struct.advFeature);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DISPLAY_INTERVAL_FIELD_DESC);
      oprot.writeI32(struct.displayInterval);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(V_P__SHOW_FREQUENCY_FIELD_DESC);
      oprot.writeI32(struct.vP_ShowFrequency);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SURVEY_PROBABILITY_FIELD_DESC);
      oprot.writeI32(struct.surveyProbability);
      oprot.writeFieldEnd();
      if (struct.pageAnchor != null) {
        oprot.writeFieldBegin(PAGE_ANCHOR_FIELD_DESC);
        oprot.writeString(struct.pageAnchor);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PUB_PAID_TIMES_FIELD_DESC);
      oprot.writeI32(struct.pubPaidTimes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(R_B__GROUP_ID_FIELD_DESC);
      oprot.writeI32(struct.rB_GroupID);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_RB__MAIN_AD_SPACE_FIELD_DESC);
      oprot.writeI32(struct.isRB_MainAdSpace);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FORMAT_FIELD_DESC);
      oprot.writeI32(struct.format);
      oprot.writeFieldEnd();
      if (struct.trackingUrl != null) {
        oprot.writeFieldBegin(TRACKING_URL_FIELD_DESC);
        oprot.writeString(struct.trackingUrl);
        oprot.writeFieldEnd();
      }
      if (struct.clickTrackingUrl != null) {
        oprot.writeFieldBegin(CLICK_TRACKING_URL_FIELD_DESC);
        oprot.writeString(struct.clickTrackingUrl);
        oprot.writeFieldEnd();
      }
      if (struct.jsPath != null) {
        oprot.writeFieldBegin(JS_PATH_FIELD_DESC);
        oprot.writeString(struct.jsPath);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(AUTO_CHANGE_SEC_FIELD_DESC);
      oprot.writeI32(struct.autoChangeSec);
      oprot.writeFieldEnd();
      if (struct.crazyMapping != null) {
        oprot.writeFieldBegin(CRAZY_MAPPING_FIELD_DESC);
        oprot.writeString(struct.crazyMapping);
        oprot.writeFieldEnd();
      }
      if (struct.adSpaceFormatDefine != null) {
        oprot.writeFieldBegin(AD_SPACE_FORMAT_DEFINE_FIELD_DESC);
        oprot.writeString(struct.adSpaceFormatDefine);
        oprot.writeFieldEnd();
      }
      if (struct.adSpaceFormat != null) {
        oprot.writeFieldBegin(AD_SPACE_FORMAT_FIELD_DESC);
        oprot.writeString(struct.adSpaceFormat);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BUY_TYPE_FIELD_DESC);
      oprot.writeI32(struct.BuyType);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ASK_CPD_RATE_FIELD_DESC);
      oprot.writeI32(struct.AskCpdRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ASK_CPM_RATE_FIELD_DESC);
      oprot.writeI32(struct.AskCpmRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ASK_CPC_RATE_FIELD_DESC);
      oprot.writeI32(struct.AskCpcRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NET_WORK_FIELD_DESC);
      oprot.writeI32(struct.NetWork);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TEMPLATE_ID_FIELD_DESC);
      oprot.writeI32(struct.TemplateId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TEXT_RECYCLE_FIELD_DESC);
      oprot.writeI32(struct.TextRecycle);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TDbSync_AdManager_Ad_SpaceTupleSchemeFactory implements SchemeFactory {
    public TDbSync_AdManager_Ad_SpaceTupleScheme getScheme() {
      return new TDbSync_AdManager_Ad_SpaceTupleScheme();
    }
  }

  private static class TDbSync_AdManager_Ad_SpaceTupleScheme extends TupleScheme<TDbSync_AdManager_Ad_Space> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TDbSync_AdManager_Ad_Space struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI32(struct.adSpaceID);
      oprot.writeI32(struct.status);
      oprot.writeString(struct.lastChanged);
      oprot.writeI32(struct.version);
      oprot.writeI32(struct.accountID);
      oprot.writeString(struct.defaultUrl);
      oprot.writeI32(struct.sizeID);
      oprot.writeI32(struct.siteID);
      oprot.writeI32(struct.nF_SizeID);
      oprot.writeI64(struct.advFeature);
      oprot.writeI32(struct.displayInterval);
      oprot.writeI32(struct.vP_ShowFrequency);
      oprot.writeI32(struct.surveyProbability);
      oprot.writeString(struct.pageAnchor);
      oprot.writeI32(struct.pubPaidTimes);
      oprot.writeI32(struct.rB_GroupID);
      oprot.writeI32(struct.isRB_MainAdSpace);
      oprot.writeI32(struct.format);
      oprot.writeString(struct.trackingUrl);
      oprot.writeString(struct.clickTrackingUrl);
      oprot.writeString(struct.jsPath);
      oprot.writeI32(struct.autoChangeSec);
      oprot.writeString(struct.crazyMapping);
      oprot.writeString(struct.adSpaceFormatDefine);
      oprot.writeString(struct.adSpaceFormat);
      oprot.writeI32(struct.BuyType);
      oprot.writeI32(struct.AskCpdRate);
      oprot.writeI32(struct.AskCpmRate);
      oprot.writeI32(struct.AskCpcRate);
      oprot.writeI32(struct.NetWork);
      oprot.writeI32(struct.TemplateId);
      oprot.writeI32(struct.TextRecycle);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TDbSync_AdManager_Ad_Space struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.adSpaceID = iprot.readI32();
      struct.setAdSpaceIDIsSet(true);
      struct.status = iprot.readI32();
      struct.setStatusIsSet(true);
      struct.lastChanged = iprot.readString();
      struct.setLastChangedIsSet(true);
      struct.version = iprot.readI32();
      struct.setVersionIsSet(true);
      struct.accountID = iprot.readI32();
      struct.setAccountIDIsSet(true);
      struct.defaultUrl = iprot.readString();
      struct.setDefaultUrlIsSet(true);
      struct.sizeID = iprot.readI32();
      struct.setSizeIDIsSet(true);
      struct.siteID = iprot.readI32();
      struct.setSiteIDIsSet(true);
      struct.nF_SizeID = iprot.readI32();
      struct.setNF_SizeIDIsSet(true);
      struct.advFeature = iprot.readI64();
      struct.setAdvFeatureIsSet(true);
      struct.displayInterval = iprot.readI32();
      struct.setDisplayIntervalIsSet(true);
      struct.vP_ShowFrequency = iprot.readI32();
      struct.setVP_ShowFrequencyIsSet(true);
      struct.surveyProbability = iprot.readI32();
      struct.setSurveyProbabilityIsSet(true);
      struct.pageAnchor = iprot.readString();
      struct.setPageAnchorIsSet(true);
      struct.pubPaidTimes = iprot.readI32();
      struct.setPubPaidTimesIsSet(true);
      struct.rB_GroupID = iprot.readI32();
      struct.setRB_GroupIDIsSet(true);
      struct.isRB_MainAdSpace = iprot.readI32();
      struct.setIsRB_MainAdSpaceIsSet(true);
      struct.format = iprot.readI32();
      struct.setFormatIsSet(true);
      struct.trackingUrl = iprot.readString();
      struct.setTrackingUrlIsSet(true);
      struct.clickTrackingUrl = iprot.readString();
      struct.setClickTrackingUrlIsSet(true);
      struct.jsPath = iprot.readString();
      struct.setJsPathIsSet(true);
      struct.autoChangeSec = iprot.readI32();
      struct.setAutoChangeSecIsSet(true);
      struct.crazyMapping = iprot.readString();
      struct.setCrazyMappingIsSet(true);
      struct.adSpaceFormatDefine = iprot.readString();
      struct.setAdSpaceFormatDefineIsSet(true);
      struct.adSpaceFormat = iprot.readString();
      struct.setAdSpaceFormatIsSet(true);
      struct.BuyType = iprot.readI32();
      struct.setBuyTypeIsSet(true);
      struct.AskCpdRate = iprot.readI32();
      struct.setAskCpdRateIsSet(true);
      struct.AskCpmRate = iprot.readI32();
      struct.setAskCpmRateIsSet(true);
      struct.AskCpcRate = iprot.readI32();
      struct.setAskCpcRateIsSet(true);
      struct.NetWork = iprot.readI32();
      struct.setNetWorkIsSet(true);
      struct.TemplateId = iprot.readI32();
      struct.setTemplateIdIsSet(true);
      struct.TextRecycle = iprot.readI32();
      struct.setTextRecycleIsSet(true);
    }
  }

}

