/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.sidney.dbsyncserver.tserializ.admanager;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TDbSync_AdManager_Ad_Space_Media_Buy implements org.apache.thrift.TBase<TDbSync_AdManager_Ad_Space_Media_Buy, TDbSync_AdManager_Ad_Space_Media_Buy._Fields>, java.io.Serializable, Cloneable, Comparable<TDbSync_AdManager_Ad_Space_Media_Buy> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TDbSync_AdManager_Ad_Space_Media_Buy");

  private static final org.apache.thrift.protocol.TField AD_SPACE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("adSpaceID", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField MEDIA_BUY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("mediaBuyID", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("Status", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField LAST_CHANGED_FIELD_DESC = new org.apache.thrift.protocol.TField("LastChanged", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField NETWORK_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("networkID", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("rate", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField ADV_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("advRate", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField BUDGET_FIELD_DESC = new org.apache.thrift.protocol.TField("budget", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField BALANCE_FIELD_DESC = new org.apache.thrift.protocol.TField("balance", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField MAPPING_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("mappingURL", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField ROAD_BLOCK_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("roadBlockID", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField CLICK_PAGE_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("clickPageURL", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField SURVEY_CLICK_POP_FIELD_DESC = new org.apache.thrift.protocol.TField("surveyClickPop", org.apache.thrift.protocol.TType.I32, (short)13);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TDbSync_AdManager_Ad_Space_Media_BuyStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TDbSync_AdManager_Ad_Space_Media_BuyTupleSchemeFactory());
  }

  public int adSpaceID; // required
  public int mediaBuyID; // required
  public int Status; // required
  public String LastChanged; // required
  public int networkID; // required
  public int rate; // required
  public int advRate; // required
  public long budget; // required
  public long balance; // required
  public String mappingURL; // required
  public int roadBlockID; // required
  public String clickPageURL; // required
  public int surveyClickPop; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    AD_SPACE_ID((short)1, "adSpaceID"),
    MEDIA_BUY_ID((short)2, "mediaBuyID"),
    STATUS((short)3, "Status"),
    LAST_CHANGED((short)4, "LastChanged"),
    NETWORK_ID((short)5, "networkID"),
    RATE((short)6, "rate"),
    ADV_RATE((short)7, "advRate"),
    BUDGET((short)8, "budget"),
    BALANCE((short)9, "balance"),
    MAPPING_URL((short)10, "mappingURL"),
    ROAD_BLOCK_ID((short)11, "roadBlockID"),
    CLICK_PAGE_URL((short)12, "clickPageURL"),
    SURVEY_CLICK_POP((short)13, "surveyClickPop");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // AD_SPACE_ID
          return AD_SPACE_ID;
        case 2: // MEDIA_BUY_ID
          return MEDIA_BUY_ID;
        case 3: // STATUS
          return STATUS;
        case 4: // LAST_CHANGED
          return LAST_CHANGED;
        case 5: // NETWORK_ID
          return NETWORK_ID;
        case 6: // RATE
          return RATE;
        case 7: // ADV_RATE
          return ADV_RATE;
        case 8: // BUDGET
          return BUDGET;
        case 9: // BALANCE
          return BALANCE;
        case 10: // MAPPING_URL
          return MAPPING_URL;
        case 11: // ROAD_BLOCK_ID
          return ROAD_BLOCK_ID;
        case 12: // CLICK_PAGE_URL
          return CLICK_PAGE_URL;
        case 13: // SURVEY_CLICK_POP
          return SURVEY_CLICK_POP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ADSPACEID_ISSET_ID = 0;
  private static final int __MEDIABUYID_ISSET_ID = 1;
  private static final int __STATUS_ISSET_ID = 2;
  private static final int __NETWORKID_ISSET_ID = 3;
  private static final int __RATE_ISSET_ID = 4;
  private static final int __ADVRATE_ISSET_ID = 5;
  private static final int __BUDGET_ISSET_ID = 6;
  private static final int __BALANCE_ISSET_ID = 7;
  private static final int __ROADBLOCKID_ISSET_ID = 8;
  private static final int __SURVEYCLICKPOP_ISSET_ID = 9;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.AD_SPACE_ID, new org.apache.thrift.meta_data.FieldMetaData("adSpaceID", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MEDIA_BUY_ID, new org.apache.thrift.meta_data.FieldMetaData("mediaBuyID", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("Status", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LAST_CHANGED, new org.apache.thrift.meta_data.FieldMetaData("LastChanged", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NETWORK_ID, new org.apache.thrift.meta_data.FieldMetaData("networkID", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RATE, new org.apache.thrift.meta_data.FieldMetaData("rate", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ADV_RATE, new org.apache.thrift.meta_data.FieldMetaData("advRate", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BUDGET, new org.apache.thrift.meta_data.FieldMetaData("budget", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.BALANCE, new org.apache.thrift.meta_data.FieldMetaData("balance", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MAPPING_URL, new org.apache.thrift.meta_data.FieldMetaData("mappingURL", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ROAD_BLOCK_ID, new org.apache.thrift.meta_data.FieldMetaData("roadBlockID", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CLICK_PAGE_URL, new org.apache.thrift.meta_data.FieldMetaData("clickPageURL", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SURVEY_CLICK_POP, new org.apache.thrift.meta_data.FieldMetaData("surveyClickPop", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TDbSync_AdManager_Ad_Space_Media_Buy.class, metaDataMap);
  }

  public TDbSync_AdManager_Ad_Space_Media_Buy() {
  }

  public TDbSync_AdManager_Ad_Space_Media_Buy(
    int adSpaceID,
    int mediaBuyID,
    int Status,
    String LastChanged,
    int networkID,
    int rate,
    int advRate,
    long budget,
    long balance,
    String mappingURL,
    int roadBlockID,
    String clickPageURL,
    int surveyClickPop)
  {
    this();
    this.adSpaceID = adSpaceID;
    setAdSpaceIDIsSet(true);
    this.mediaBuyID = mediaBuyID;
    setMediaBuyIDIsSet(true);
    this.Status = Status;
    setStatusIsSet(true);
    this.LastChanged = LastChanged;
    this.networkID = networkID;
    setNetworkIDIsSet(true);
    this.rate = rate;
    setRateIsSet(true);
    this.advRate = advRate;
    setAdvRateIsSet(true);
    this.budget = budget;
    setBudgetIsSet(true);
    this.balance = balance;
    setBalanceIsSet(true);
    this.mappingURL = mappingURL;
    this.roadBlockID = roadBlockID;
    setRoadBlockIDIsSet(true);
    this.clickPageURL = clickPageURL;
    this.surveyClickPop = surveyClickPop;
    setSurveyClickPopIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TDbSync_AdManager_Ad_Space_Media_Buy(TDbSync_AdManager_Ad_Space_Media_Buy other) {
    __isset_bitfield = other.__isset_bitfield;
    this.adSpaceID = other.adSpaceID;
    this.mediaBuyID = other.mediaBuyID;
    this.Status = other.Status;
    if (other.isSetLastChanged()) {
      this.LastChanged = other.LastChanged;
    }
    this.networkID = other.networkID;
    this.rate = other.rate;
    this.advRate = other.advRate;
    this.budget = other.budget;
    this.balance = other.balance;
    if (other.isSetMappingURL()) {
      this.mappingURL = other.mappingURL;
    }
    this.roadBlockID = other.roadBlockID;
    if (other.isSetClickPageURL()) {
      this.clickPageURL = other.clickPageURL;
    }
    this.surveyClickPop = other.surveyClickPop;
  }

  public TDbSync_AdManager_Ad_Space_Media_Buy deepCopy() {
    return new TDbSync_AdManager_Ad_Space_Media_Buy(this);
  }

  @Override
  public void clear() {
    setAdSpaceIDIsSet(false);
    this.adSpaceID = 0;
    setMediaBuyIDIsSet(false);
    this.mediaBuyID = 0;
    setStatusIsSet(false);
    this.Status = 0;
    this.LastChanged = null;
    setNetworkIDIsSet(false);
    this.networkID = 0;
    setRateIsSet(false);
    this.rate = 0;
    setAdvRateIsSet(false);
    this.advRate = 0;
    setBudgetIsSet(false);
    this.budget = 0;
    setBalanceIsSet(false);
    this.balance = 0;
    this.mappingURL = null;
    setRoadBlockIDIsSet(false);
    this.roadBlockID = 0;
    this.clickPageURL = null;
    setSurveyClickPopIsSet(false);
    this.surveyClickPop = 0;
  }

  public int getAdSpaceID() {
    return this.adSpaceID;
  }

  public TDbSync_AdManager_Ad_Space_Media_Buy setAdSpaceID(int adSpaceID) {
    this.adSpaceID = adSpaceID;
    setAdSpaceIDIsSet(true);
    return this;
  }

  public void unsetAdSpaceID() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ADSPACEID_ISSET_ID);
  }

  /** Returns true if field adSpaceID is set (has been assigned a value) and false otherwise */
  public boolean isSetAdSpaceID() {
    return EncodingUtils.testBit(__isset_bitfield, __ADSPACEID_ISSET_ID);
  }

  public void setAdSpaceIDIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ADSPACEID_ISSET_ID, value);
  }

  public int getMediaBuyID() {
    return this.mediaBuyID;
  }

  public TDbSync_AdManager_Ad_Space_Media_Buy setMediaBuyID(int mediaBuyID) {
    this.mediaBuyID = mediaBuyID;
    setMediaBuyIDIsSet(true);
    return this;
  }

  public void unsetMediaBuyID() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MEDIABUYID_ISSET_ID);
  }

  /** Returns true if field mediaBuyID is set (has been assigned a value) and false otherwise */
  public boolean isSetMediaBuyID() {
    return EncodingUtils.testBit(__isset_bitfield, __MEDIABUYID_ISSET_ID);
  }

  public void setMediaBuyIDIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MEDIABUYID_ISSET_ID, value);
  }

  public int getStatus() {
    return this.Status;
  }

  public TDbSync_AdManager_Ad_Space_Media_Buy setStatus(int Status) {
    this.Status = Status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field Status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public String getLastChanged() {
    return this.LastChanged;
  }

  public TDbSync_AdManager_Ad_Space_Media_Buy setLastChanged(String LastChanged) {
    this.LastChanged = LastChanged;
    return this;
  }

  public void unsetLastChanged() {
    this.LastChanged = null;
  }

  /** Returns true if field LastChanged is set (has been assigned a value) and false otherwise */
  public boolean isSetLastChanged() {
    return this.LastChanged != null;
  }

  public void setLastChangedIsSet(boolean value) {
    if (!value) {
      this.LastChanged = null;
    }
  }

  public int getNetworkID() {
    return this.networkID;
  }

  public TDbSync_AdManager_Ad_Space_Media_Buy setNetworkID(int networkID) {
    this.networkID = networkID;
    setNetworkIDIsSet(true);
    return this;
  }

  public void unsetNetworkID() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NETWORKID_ISSET_ID);
  }

  /** Returns true if field networkID is set (has been assigned a value) and false otherwise */
  public boolean isSetNetworkID() {
    return EncodingUtils.testBit(__isset_bitfield, __NETWORKID_ISSET_ID);
  }

  public void setNetworkIDIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NETWORKID_ISSET_ID, value);
  }

  public int getRate() {
    return this.rate;
  }

  public TDbSync_AdManager_Ad_Space_Media_Buy setRate(int rate) {
    this.rate = rate;
    setRateIsSet(true);
    return this;
  }

  public void unsetRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RATE_ISSET_ID);
  }

  /** Returns true if field rate is set (has been assigned a value) and false otherwise */
  public boolean isSetRate() {
    return EncodingUtils.testBit(__isset_bitfield, __RATE_ISSET_ID);
  }

  public void setRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RATE_ISSET_ID, value);
  }

  public int getAdvRate() {
    return this.advRate;
  }

  public TDbSync_AdManager_Ad_Space_Media_Buy setAdvRate(int advRate) {
    this.advRate = advRate;
    setAdvRateIsSet(true);
    return this;
  }

  public void unsetAdvRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ADVRATE_ISSET_ID);
  }

  /** Returns true if field advRate is set (has been assigned a value) and false otherwise */
  public boolean isSetAdvRate() {
    return EncodingUtils.testBit(__isset_bitfield, __ADVRATE_ISSET_ID);
  }

  public void setAdvRateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ADVRATE_ISSET_ID, value);
  }

  public long getBudget() {
    return this.budget;
  }

  public TDbSync_AdManager_Ad_Space_Media_Buy setBudget(long budget) {
    this.budget = budget;
    setBudgetIsSet(true);
    return this;
  }

  public void unsetBudget() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BUDGET_ISSET_ID);
  }

  /** Returns true if field budget is set (has been assigned a value) and false otherwise */
  public boolean isSetBudget() {
    return EncodingUtils.testBit(__isset_bitfield, __BUDGET_ISSET_ID);
  }

  public void setBudgetIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BUDGET_ISSET_ID, value);
  }

  public long getBalance() {
    return this.balance;
  }

  public TDbSync_AdManager_Ad_Space_Media_Buy setBalance(long balance) {
    this.balance = balance;
    setBalanceIsSet(true);
    return this;
  }

  public void unsetBalance() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BALANCE_ISSET_ID);
  }

  /** Returns true if field balance is set (has been assigned a value) and false otherwise */
  public boolean isSetBalance() {
    return EncodingUtils.testBit(__isset_bitfield, __BALANCE_ISSET_ID);
  }

  public void setBalanceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BALANCE_ISSET_ID, value);
  }

  public String getMappingURL() {
    return this.mappingURL;
  }

  public TDbSync_AdManager_Ad_Space_Media_Buy setMappingURL(String mappingURL) {
    this.mappingURL = mappingURL;
    return this;
  }

  public void unsetMappingURL() {
    this.mappingURL = null;
  }

  /** Returns true if field mappingURL is set (has been assigned a value) and false otherwise */
  public boolean isSetMappingURL() {
    return this.mappingURL != null;
  }

  public void setMappingURLIsSet(boolean value) {
    if (!value) {
      this.mappingURL = null;
    }
  }

  public int getRoadBlockID() {
    return this.roadBlockID;
  }

  public TDbSync_AdManager_Ad_Space_Media_Buy setRoadBlockID(int roadBlockID) {
    this.roadBlockID = roadBlockID;
    setRoadBlockIDIsSet(true);
    return this;
  }

  public void unsetRoadBlockID() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROADBLOCKID_ISSET_ID);
  }

  /** Returns true if field roadBlockID is set (has been assigned a value) and false otherwise */
  public boolean isSetRoadBlockID() {
    return EncodingUtils.testBit(__isset_bitfield, __ROADBLOCKID_ISSET_ID);
  }

  public void setRoadBlockIDIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROADBLOCKID_ISSET_ID, value);
  }

  public String getClickPageURL() {
    return this.clickPageURL;
  }

  public TDbSync_AdManager_Ad_Space_Media_Buy setClickPageURL(String clickPageURL) {
    this.clickPageURL = clickPageURL;
    return this;
  }

  public void unsetClickPageURL() {
    this.clickPageURL = null;
  }

  /** Returns true if field clickPageURL is set (has been assigned a value) and false otherwise */
  public boolean isSetClickPageURL() {
    return this.clickPageURL != null;
  }

  public void setClickPageURLIsSet(boolean value) {
    if (!value) {
      this.clickPageURL = null;
    }
  }

  public int getSurveyClickPop() {
    return this.surveyClickPop;
  }

  public TDbSync_AdManager_Ad_Space_Media_Buy setSurveyClickPop(int surveyClickPop) {
    this.surveyClickPop = surveyClickPop;
    setSurveyClickPopIsSet(true);
    return this;
  }

  public void unsetSurveyClickPop() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SURVEYCLICKPOP_ISSET_ID);
  }

  /** Returns true if field surveyClickPop is set (has been assigned a value) and false otherwise */
  public boolean isSetSurveyClickPop() {
    return EncodingUtils.testBit(__isset_bitfield, __SURVEYCLICKPOP_ISSET_ID);
  }

  public void setSurveyClickPopIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SURVEYCLICKPOP_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case AD_SPACE_ID:
      if (value == null) {
        unsetAdSpaceID();
      } else {
        setAdSpaceID((Integer)value);
      }
      break;

    case MEDIA_BUY_ID:
      if (value == null) {
        unsetMediaBuyID();
      } else {
        setMediaBuyID((Integer)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    case LAST_CHANGED:
      if (value == null) {
        unsetLastChanged();
      } else {
        setLastChanged((String)value);
      }
      break;

    case NETWORK_ID:
      if (value == null) {
        unsetNetworkID();
      } else {
        setNetworkID((Integer)value);
      }
      break;

    case RATE:
      if (value == null) {
        unsetRate();
      } else {
        setRate((Integer)value);
      }
      break;

    case ADV_RATE:
      if (value == null) {
        unsetAdvRate();
      } else {
        setAdvRate((Integer)value);
      }
      break;

    case BUDGET:
      if (value == null) {
        unsetBudget();
      } else {
        setBudget((Long)value);
      }
      break;

    case BALANCE:
      if (value == null) {
        unsetBalance();
      } else {
        setBalance((Long)value);
      }
      break;

    case MAPPING_URL:
      if (value == null) {
        unsetMappingURL();
      } else {
        setMappingURL((String)value);
      }
      break;

    case ROAD_BLOCK_ID:
      if (value == null) {
        unsetRoadBlockID();
      } else {
        setRoadBlockID((Integer)value);
      }
      break;

    case CLICK_PAGE_URL:
      if (value == null) {
        unsetClickPageURL();
      } else {
        setClickPageURL((String)value);
      }
      break;

    case SURVEY_CLICK_POP:
      if (value == null) {
        unsetSurveyClickPop();
      } else {
        setSurveyClickPop((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case AD_SPACE_ID:
      return Integer.valueOf(getAdSpaceID());

    case MEDIA_BUY_ID:
      return Integer.valueOf(getMediaBuyID());

    case STATUS:
      return Integer.valueOf(getStatus());

    case LAST_CHANGED:
      return getLastChanged();

    case NETWORK_ID:
      return Integer.valueOf(getNetworkID());

    case RATE:
      return Integer.valueOf(getRate());

    case ADV_RATE:
      return Integer.valueOf(getAdvRate());

    case BUDGET:
      return Long.valueOf(getBudget());

    case BALANCE:
      return Long.valueOf(getBalance());

    case MAPPING_URL:
      return getMappingURL();

    case ROAD_BLOCK_ID:
      return Integer.valueOf(getRoadBlockID());

    case CLICK_PAGE_URL:
      return getClickPageURL();

    case SURVEY_CLICK_POP:
      return Integer.valueOf(getSurveyClickPop());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case AD_SPACE_ID:
      return isSetAdSpaceID();
    case MEDIA_BUY_ID:
      return isSetMediaBuyID();
    case STATUS:
      return isSetStatus();
    case LAST_CHANGED:
      return isSetLastChanged();
    case NETWORK_ID:
      return isSetNetworkID();
    case RATE:
      return isSetRate();
    case ADV_RATE:
      return isSetAdvRate();
    case BUDGET:
      return isSetBudget();
    case BALANCE:
      return isSetBalance();
    case MAPPING_URL:
      return isSetMappingURL();
    case ROAD_BLOCK_ID:
      return isSetRoadBlockID();
    case CLICK_PAGE_URL:
      return isSetClickPageURL();
    case SURVEY_CLICK_POP:
      return isSetSurveyClickPop();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TDbSync_AdManager_Ad_Space_Media_Buy)
      return this.equals((TDbSync_AdManager_Ad_Space_Media_Buy)that);
    return false;
  }

  public boolean equals(TDbSync_AdManager_Ad_Space_Media_Buy that) {
    if (that == null)
      return false;

    boolean this_present_adSpaceID = true;
    boolean that_present_adSpaceID = true;
    if (this_present_adSpaceID || that_present_adSpaceID) {
      if (!(this_present_adSpaceID && that_present_adSpaceID))
        return false;
      if (this.adSpaceID != that.adSpaceID)
        return false;
    }

    boolean this_present_mediaBuyID = true;
    boolean that_present_mediaBuyID = true;
    if (this_present_mediaBuyID || that_present_mediaBuyID) {
      if (!(this_present_mediaBuyID && that_present_mediaBuyID))
        return false;
      if (this.mediaBuyID != that.mediaBuyID)
        return false;
    }

    boolean this_present_Status = true;
    boolean that_present_Status = true;
    if (this_present_Status || that_present_Status) {
      if (!(this_present_Status && that_present_Status))
        return false;
      if (this.Status != that.Status)
        return false;
    }

    boolean this_present_LastChanged = true && this.isSetLastChanged();
    boolean that_present_LastChanged = true && that.isSetLastChanged();
    if (this_present_LastChanged || that_present_LastChanged) {
      if (!(this_present_LastChanged && that_present_LastChanged))
        return false;
      if (!this.LastChanged.equals(that.LastChanged))
        return false;
    }

    boolean this_present_networkID = true;
    boolean that_present_networkID = true;
    if (this_present_networkID || that_present_networkID) {
      if (!(this_present_networkID && that_present_networkID))
        return false;
      if (this.networkID != that.networkID)
        return false;
    }

    boolean this_present_rate = true;
    boolean that_present_rate = true;
    if (this_present_rate || that_present_rate) {
      if (!(this_present_rate && that_present_rate))
        return false;
      if (this.rate != that.rate)
        return false;
    }

    boolean this_present_advRate = true;
    boolean that_present_advRate = true;
    if (this_present_advRate || that_present_advRate) {
      if (!(this_present_advRate && that_present_advRate))
        return false;
      if (this.advRate != that.advRate)
        return false;
    }

    boolean this_present_budget = true;
    boolean that_present_budget = true;
    if (this_present_budget || that_present_budget) {
      if (!(this_present_budget && that_present_budget))
        return false;
      if (this.budget != that.budget)
        return false;
    }

    boolean this_present_balance = true;
    boolean that_present_balance = true;
    if (this_present_balance || that_present_balance) {
      if (!(this_present_balance && that_present_balance))
        return false;
      if (this.balance != that.balance)
        return false;
    }

    boolean this_present_mappingURL = true && this.isSetMappingURL();
    boolean that_present_mappingURL = true && that.isSetMappingURL();
    if (this_present_mappingURL || that_present_mappingURL) {
      if (!(this_present_mappingURL && that_present_mappingURL))
        return false;
      if (!this.mappingURL.equals(that.mappingURL))
        return false;
    }

    boolean this_present_roadBlockID = true;
    boolean that_present_roadBlockID = true;
    if (this_present_roadBlockID || that_present_roadBlockID) {
      if (!(this_present_roadBlockID && that_present_roadBlockID))
        return false;
      if (this.roadBlockID != that.roadBlockID)
        return false;
    }

    boolean this_present_clickPageURL = true && this.isSetClickPageURL();
    boolean that_present_clickPageURL = true && that.isSetClickPageURL();
    if (this_present_clickPageURL || that_present_clickPageURL) {
      if (!(this_present_clickPageURL && that_present_clickPageURL))
        return false;
      if (!this.clickPageURL.equals(that.clickPageURL))
        return false;
    }

    boolean this_present_surveyClickPop = true;
    boolean that_present_surveyClickPop = true;
    if (this_present_surveyClickPop || that_present_surveyClickPop) {
      if (!(this_present_surveyClickPop && that_present_surveyClickPop))
        return false;
      if (this.surveyClickPop != that.surveyClickPop)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(TDbSync_AdManager_Ad_Space_Media_Buy other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAdSpaceID()).compareTo(other.isSetAdSpaceID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdSpaceID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adSpaceID, other.adSpaceID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMediaBuyID()).compareTo(other.isSetMediaBuyID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMediaBuyID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mediaBuyID, other.mediaBuyID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Status, other.Status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastChanged()).compareTo(other.isSetLastChanged());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastChanged()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.LastChanged, other.LastChanged);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNetworkID()).compareTo(other.isSetNetworkID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNetworkID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.networkID, other.networkID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRate()).compareTo(other.isSetRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rate, other.rate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdvRate()).compareTo(other.isSetAdvRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdvRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.advRate, other.advRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBudget()).compareTo(other.isSetBudget());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBudget()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.budget, other.budget);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBalance()).compareTo(other.isSetBalance());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBalance()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.balance, other.balance);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMappingURL()).compareTo(other.isSetMappingURL());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMappingURL()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mappingURL, other.mappingURL);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRoadBlockID()).compareTo(other.isSetRoadBlockID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRoadBlockID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.roadBlockID, other.roadBlockID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClickPageURL()).compareTo(other.isSetClickPageURL());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClickPageURL()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clickPageURL, other.clickPageURL);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSurveyClickPop()).compareTo(other.isSetSurveyClickPop());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSurveyClickPop()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.surveyClickPop, other.surveyClickPop);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TDbSync_AdManager_Ad_Space_Media_Buy(");
    boolean first = true;

    sb.append("adSpaceID:");
    sb.append(this.adSpaceID);
    first = false;
    if (!first) sb.append(", ");
    sb.append("mediaBuyID:");
    sb.append(this.mediaBuyID);
    first = false;
    if (!first) sb.append(", ");
    sb.append("Status:");
    sb.append(this.Status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("LastChanged:");
    if (this.LastChanged == null) {
      sb.append("null");
    } else {
      sb.append(this.LastChanged);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("networkID:");
    sb.append(this.networkID);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rate:");
    sb.append(this.rate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("advRate:");
    sb.append(this.advRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("budget:");
    sb.append(this.budget);
    first = false;
    if (!first) sb.append(", ");
    sb.append("balance:");
    sb.append(this.balance);
    first = false;
    if (!first) sb.append(", ");
    sb.append("mappingURL:");
    if (this.mappingURL == null) {
      sb.append("null");
    } else {
      sb.append(this.mappingURL);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("roadBlockID:");
    sb.append(this.roadBlockID);
    first = false;
    if (!first) sb.append(", ");
    sb.append("clickPageURL:");
    if (this.clickPageURL == null) {
      sb.append("null");
    } else {
      sb.append(this.clickPageURL);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("surveyClickPop:");
    sb.append(this.surveyClickPop);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'adSpaceID' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'mediaBuyID' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'Status' because it's a primitive and you chose the non-beans generator.
    if (LastChanged == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'LastChanged' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'networkID' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'rate' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'advRate' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'budget' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'balance' because it's a primitive and you chose the non-beans generator.
    if (mappingURL == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'mappingURL' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'roadBlockID' because it's a primitive and you chose the non-beans generator.
    if (clickPageURL == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'clickPageURL' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'surveyClickPop' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TDbSync_AdManager_Ad_Space_Media_BuyStandardSchemeFactory implements SchemeFactory {
    public TDbSync_AdManager_Ad_Space_Media_BuyStandardScheme getScheme() {
      return new TDbSync_AdManager_Ad_Space_Media_BuyStandardScheme();
    }
  }

  private static class TDbSync_AdManager_Ad_Space_Media_BuyStandardScheme extends StandardScheme<TDbSync_AdManager_Ad_Space_Media_Buy> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TDbSync_AdManager_Ad_Space_Media_Buy struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // AD_SPACE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.adSpaceID = iprot.readI32();
              struct.setAdSpaceIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MEDIA_BUY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.mediaBuyID = iprot.readI32();
              struct.setMediaBuyIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.Status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LAST_CHANGED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.LastChanged = iprot.readString();
              struct.setLastChangedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // NETWORK_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.networkID = iprot.readI32();
              struct.setNetworkIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rate = iprot.readI32();
              struct.setRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ADV_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.advRate = iprot.readI32();
              struct.setAdvRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // BUDGET
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.budget = iprot.readI64();
              struct.setBudgetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // BALANCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.balance = iprot.readI64();
              struct.setBalanceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // MAPPING_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mappingURL = iprot.readString();
              struct.setMappingURLIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ROAD_BLOCK_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.roadBlockID = iprot.readI32();
              struct.setRoadBlockIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CLICK_PAGE_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clickPageURL = iprot.readString();
              struct.setClickPageURLIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // SURVEY_CLICK_POP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.surveyClickPop = iprot.readI32();
              struct.setSurveyClickPopIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetAdSpaceID()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'adSpaceID' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetMediaBuyID()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'mediaBuyID' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetStatus()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'Status' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetNetworkID()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'networkID' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetRate()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'rate' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetAdvRate()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'advRate' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetBudget()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'budget' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetBalance()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'balance' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetRoadBlockID()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'roadBlockID' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetSurveyClickPop()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'surveyClickPop' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TDbSync_AdManager_Ad_Space_Media_Buy struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(AD_SPACE_ID_FIELD_DESC);
      oprot.writeI32(struct.adSpaceID);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MEDIA_BUY_ID_FIELD_DESC);
      oprot.writeI32(struct.mediaBuyID);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.Status);
      oprot.writeFieldEnd();
      if (struct.LastChanged != null) {
        oprot.writeFieldBegin(LAST_CHANGED_FIELD_DESC);
        oprot.writeString(struct.LastChanged);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(NETWORK_ID_FIELD_DESC);
      oprot.writeI32(struct.networkID);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RATE_FIELD_DESC);
      oprot.writeI32(struct.rate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ADV_RATE_FIELD_DESC);
      oprot.writeI32(struct.advRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BUDGET_FIELD_DESC);
      oprot.writeI64(struct.budget);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BALANCE_FIELD_DESC);
      oprot.writeI64(struct.balance);
      oprot.writeFieldEnd();
      if (struct.mappingURL != null) {
        oprot.writeFieldBegin(MAPPING_URL_FIELD_DESC);
        oprot.writeString(struct.mappingURL);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ROAD_BLOCK_ID_FIELD_DESC);
      oprot.writeI32(struct.roadBlockID);
      oprot.writeFieldEnd();
      if (struct.clickPageURL != null) {
        oprot.writeFieldBegin(CLICK_PAGE_URL_FIELD_DESC);
        oprot.writeString(struct.clickPageURL);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SURVEY_CLICK_POP_FIELD_DESC);
      oprot.writeI32(struct.surveyClickPop);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TDbSync_AdManager_Ad_Space_Media_BuyTupleSchemeFactory implements SchemeFactory {
    public TDbSync_AdManager_Ad_Space_Media_BuyTupleScheme getScheme() {
      return new TDbSync_AdManager_Ad_Space_Media_BuyTupleScheme();
    }
  }

  private static class TDbSync_AdManager_Ad_Space_Media_BuyTupleScheme extends TupleScheme<TDbSync_AdManager_Ad_Space_Media_Buy> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TDbSync_AdManager_Ad_Space_Media_Buy struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI32(struct.adSpaceID);
      oprot.writeI32(struct.mediaBuyID);
      oprot.writeI32(struct.Status);
      oprot.writeString(struct.LastChanged);
      oprot.writeI32(struct.networkID);
      oprot.writeI32(struct.rate);
      oprot.writeI32(struct.advRate);
      oprot.writeI64(struct.budget);
      oprot.writeI64(struct.balance);
      oprot.writeString(struct.mappingURL);
      oprot.writeI32(struct.roadBlockID);
      oprot.writeString(struct.clickPageURL);
      oprot.writeI32(struct.surveyClickPop);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TDbSync_AdManager_Ad_Space_Media_Buy struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.adSpaceID = iprot.readI32();
      struct.setAdSpaceIDIsSet(true);
      struct.mediaBuyID = iprot.readI32();
      struct.setMediaBuyIDIsSet(true);
      struct.Status = iprot.readI32();
      struct.setStatusIsSet(true);
      struct.LastChanged = iprot.readString();
      struct.setLastChangedIsSet(true);
      struct.networkID = iprot.readI32();
      struct.setNetworkIDIsSet(true);
      struct.rate = iprot.readI32();
      struct.setRateIsSet(true);
      struct.advRate = iprot.readI32();
      struct.setAdvRateIsSet(true);
      struct.budget = iprot.readI64();
      struct.setBudgetIsSet(true);
      struct.balance = iprot.readI64();
      struct.setBalanceIsSet(true);
      struct.mappingURL = iprot.readString();
      struct.setMappingURLIsSet(true);
      struct.roadBlockID = iprot.readI32();
      struct.setRoadBlockIDIsSet(true);
      struct.clickPageURL = iprot.readString();
      struct.setClickPageURLIsSet(true);
      struct.surveyClickPop = iprot.readI32();
      struct.setSurveyClickPopIsSet(true);
    }
  }

}

