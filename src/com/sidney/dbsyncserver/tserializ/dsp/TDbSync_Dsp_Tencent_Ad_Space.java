/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.sidney.dbsyncserver.tserializ.dsp;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TDbSync_Dsp_Tencent_Ad_Space implements org.apache.thrift.TBase<TDbSync_Dsp_Tencent_Ad_Space, TDbSync_Dsp_Tencent_Ad_Space._Fields>, java.io.Serializable, Cloneable, Comparable<TDbSync_Dsp_Tencent_Ad_Space> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TDbSync_Dsp_Tencent_Ad_Space");

  private static final org.apache.thrift.protocol.TField I_D_FIELD_DESC = new org.apache.thrift.protocol.TField("iD", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField LAST_CHANGED_FIELD_DESC = new org.apache.thrift.protocol.TField("lastChanged", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField LOCATION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("locationID", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField LOCATION_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("locationName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField STYLE_FIELD_DESC = new org.apache.thrift.protocol.TField("style", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField CPM_START_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("cpmStartPrice", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField BLOCK_VOCATION_FIELD_DESC = new org.apache.thrift.protocol.TField("blockVocation", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField ALLOW_FILE_FIELD_DESC = new org.apache.thrift.protocol.TField("allowFile", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField SUPPORT_ENABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("supportEnable", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField PRODUCT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("productName", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField MEDIA_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("mediaIDs", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField SLOT_POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("slotPosition", org.apache.thrift.protocol.TType.I32, (short)13);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TDbSync_Dsp_Tencent_Ad_SpaceStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TDbSync_Dsp_Tencent_Ad_SpaceTupleSchemeFactory());
  }

  public long iD; // required
  public int status; // required
  public String lastChanged; // required
  public String locationID; // required
  public String locationName; // required
  public String style; // required
  public String cpmStartPrice; // required
  public String blockVocation; // required
  public String allowFile; // required
  public String supportEnable; // required
  public String productName; // required
  public String mediaIDs; // required
  public int slotPosition; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    I_D((short)1, "iD"),
    STATUS((short)2, "status"),
    LAST_CHANGED((short)3, "lastChanged"),
    LOCATION_ID((short)4, "locationID"),
    LOCATION_NAME((short)5, "locationName"),
    STYLE((short)6, "style"),
    CPM_START_PRICE((short)7, "cpmStartPrice"),
    BLOCK_VOCATION((short)8, "blockVocation"),
    ALLOW_FILE((short)9, "allowFile"),
    SUPPORT_ENABLE((short)10, "supportEnable"),
    PRODUCT_NAME((short)11, "productName"),
    MEDIA_IDS((short)12, "mediaIDs"),
    SLOT_POSITION((short)13, "slotPosition");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // I_D
          return I_D;
        case 2: // STATUS
          return STATUS;
        case 3: // LAST_CHANGED
          return LAST_CHANGED;
        case 4: // LOCATION_ID
          return LOCATION_ID;
        case 5: // LOCATION_NAME
          return LOCATION_NAME;
        case 6: // STYLE
          return STYLE;
        case 7: // CPM_START_PRICE
          return CPM_START_PRICE;
        case 8: // BLOCK_VOCATION
          return BLOCK_VOCATION;
        case 9: // ALLOW_FILE
          return ALLOW_FILE;
        case 10: // SUPPORT_ENABLE
          return SUPPORT_ENABLE;
        case 11: // PRODUCT_NAME
          return PRODUCT_NAME;
        case 12: // MEDIA_IDS
          return MEDIA_IDS;
        case 13: // SLOT_POSITION
          return SLOT_POSITION;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __STATUS_ISSET_ID = 1;
  private static final int __SLOTPOSITION_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.I_D, new org.apache.thrift.meta_data.FieldMetaData("iD", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LAST_CHANGED, new org.apache.thrift.meta_data.FieldMetaData("lastChanged", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOCATION_ID, new org.apache.thrift.meta_data.FieldMetaData("locationID", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOCATION_NAME, new org.apache.thrift.meta_data.FieldMetaData("locationName", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STYLE, new org.apache.thrift.meta_data.FieldMetaData("style", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CPM_START_PRICE, new org.apache.thrift.meta_data.FieldMetaData("cpmStartPrice", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BLOCK_VOCATION, new org.apache.thrift.meta_data.FieldMetaData("blockVocation", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ALLOW_FILE, new org.apache.thrift.meta_data.FieldMetaData("allowFile", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUPPORT_ENABLE, new org.apache.thrift.meta_data.FieldMetaData("supportEnable", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_NAME, new org.apache.thrift.meta_data.FieldMetaData("productName", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEDIA_IDS, new org.apache.thrift.meta_data.FieldMetaData("mediaIDs", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SLOT_POSITION, new org.apache.thrift.meta_data.FieldMetaData("slotPosition", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TDbSync_Dsp_Tencent_Ad_Space.class, metaDataMap);
  }

  public TDbSync_Dsp_Tencent_Ad_Space() {
  }

  public TDbSync_Dsp_Tencent_Ad_Space(
    long iD,
    int status,
    String lastChanged,
    String locationID,
    String locationName,
    String style,
    String cpmStartPrice,
    String blockVocation,
    String allowFile,
    String supportEnable,
    String productName,
    String mediaIDs,
    int slotPosition)
  {
    this();
    this.iD = iD;
    setIDIsSet(true);
    this.status = status;
    setStatusIsSet(true);
    this.lastChanged = lastChanged;
    this.locationID = locationID;
    this.locationName = locationName;
    this.style = style;
    this.cpmStartPrice = cpmStartPrice;
    this.blockVocation = blockVocation;
    this.allowFile = allowFile;
    this.supportEnable = supportEnable;
    this.productName = productName;
    this.mediaIDs = mediaIDs;
    this.slotPosition = slotPosition;
    setSlotPositionIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TDbSync_Dsp_Tencent_Ad_Space(TDbSync_Dsp_Tencent_Ad_Space other) {
    __isset_bitfield = other.__isset_bitfield;
    this.iD = other.iD;
    this.status = other.status;
    if (other.isSetLastChanged()) {
      this.lastChanged = other.lastChanged;
    }
    if (other.isSetLocationID()) {
      this.locationID = other.locationID;
    }
    if (other.isSetLocationName()) {
      this.locationName = other.locationName;
    }
    if (other.isSetStyle()) {
      this.style = other.style;
    }
    if (other.isSetCpmStartPrice()) {
      this.cpmStartPrice = other.cpmStartPrice;
    }
    if (other.isSetBlockVocation()) {
      this.blockVocation = other.blockVocation;
    }
    if (other.isSetAllowFile()) {
      this.allowFile = other.allowFile;
    }
    if (other.isSetSupportEnable()) {
      this.supportEnable = other.supportEnable;
    }
    if (other.isSetProductName()) {
      this.productName = other.productName;
    }
    if (other.isSetMediaIDs()) {
      this.mediaIDs = other.mediaIDs;
    }
    this.slotPosition = other.slotPosition;
  }

  public TDbSync_Dsp_Tencent_Ad_Space deepCopy() {
    return new TDbSync_Dsp_Tencent_Ad_Space(this);
  }

  @Override
  public void clear() {
    setIDIsSet(false);
    this.iD = 0;
    setStatusIsSet(false);
    this.status = 0;
    this.lastChanged = null;
    this.locationID = null;
    this.locationName = null;
    this.style = null;
    this.cpmStartPrice = null;
    this.blockVocation = null;
    this.allowFile = null;
    this.supportEnable = null;
    this.productName = null;
    this.mediaIDs = null;
    setSlotPositionIsSet(false);
    this.slotPosition = 0;
  }

  public long getID() {
    return this.iD;
  }

  public TDbSync_Dsp_Tencent_Ad_Space setID(long iD) {
    this.iD = iD;
    setIDIsSet(true);
    return this;
  }

  public void unsetID() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field iD is set (has been assigned a value) and false otherwise */
  public boolean isSetID() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIDIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getStatus() {
    return this.status;
  }

  public TDbSync_Dsp_Tencent_Ad_Space setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public String getLastChanged() {
    return this.lastChanged;
  }

  public TDbSync_Dsp_Tencent_Ad_Space setLastChanged(String lastChanged) {
    this.lastChanged = lastChanged;
    return this;
  }

  public void unsetLastChanged() {
    this.lastChanged = null;
  }

  /** Returns true if field lastChanged is set (has been assigned a value) and false otherwise */
  public boolean isSetLastChanged() {
    return this.lastChanged != null;
  }

  public void setLastChangedIsSet(boolean value) {
    if (!value) {
      this.lastChanged = null;
    }
  }

  public String getLocationID() {
    return this.locationID;
  }

  public TDbSync_Dsp_Tencent_Ad_Space setLocationID(String locationID) {
    this.locationID = locationID;
    return this;
  }

  public void unsetLocationID() {
    this.locationID = null;
  }

  /** Returns true if field locationID is set (has been assigned a value) and false otherwise */
  public boolean isSetLocationID() {
    return this.locationID != null;
  }

  public void setLocationIDIsSet(boolean value) {
    if (!value) {
      this.locationID = null;
    }
  }

  public String getLocationName() {
    return this.locationName;
  }

  public TDbSync_Dsp_Tencent_Ad_Space setLocationName(String locationName) {
    this.locationName = locationName;
    return this;
  }

  public void unsetLocationName() {
    this.locationName = null;
  }

  /** Returns true if field locationName is set (has been assigned a value) and false otherwise */
  public boolean isSetLocationName() {
    return this.locationName != null;
  }

  public void setLocationNameIsSet(boolean value) {
    if (!value) {
      this.locationName = null;
    }
  }

  public String getStyle() {
    return this.style;
  }

  public TDbSync_Dsp_Tencent_Ad_Space setStyle(String style) {
    this.style = style;
    return this;
  }

  public void unsetStyle() {
    this.style = null;
  }

  /** Returns true if field style is set (has been assigned a value) and false otherwise */
  public boolean isSetStyle() {
    return this.style != null;
  }

  public void setStyleIsSet(boolean value) {
    if (!value) {
      this.style = null;
    }
  }

  public String getCpmStartPrice() {
    return this.cpmStartPrice;
  }

  public TDbSync_Dsp_Tencent_Ad_Space setCpmStartPrice(String cpmStartPrice) {
    this.cpmStartPrice = cpmStartPrice;
    return this;
  }

  public void unsetCpmStartPrice() {
    this.cpmStartPrice = null;
  }

  /** Returns true if field cpmStartPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetCpmStartPrice() {
    return this.cpmStartPrice != null;
  }

  public void setCpmStartPriceIsSet(boolean value) {
    if (!value) {
      this.cpmStartPrice = null;
    }
  }

  public String getBlockVocation() {
    return this.blockVocation;
  }

  public TDbSync_Dsp_Tencent_Ad_Space setBlockVocation(String blockVocation) {
    this.blockVocation = blockVocation;
    return this;
  }

  public void unsetBlockVocation() {
    this.blockVocation = null;
  }

  /** Returns true if field blockVocation is set (has been assigned a value) and false otherwise */
  public boolean isSetBlockVocation() {
    return this.blockVocation != null;
  }

  public void setBlockVocationIsSet(boolean value) {
    if (!value) {
      this.blockVocation = null;
    }
  }

  public String getAllowFile() {
    return this.allowFile;
  }

  public TDbSync_Dsp_Tencent_Ad_Space setAllowFile(String allowFile) {
    this.allowFile = allowFile;
    return this;
  }

  public void unsetAllowFile() {
    this.allowFile = null;
  }

  /** Returns true if field allowFile is set (has been assigned a value) and false otherwise */
  public boolean isSetAllowFile() {
    return this.allowFile != null;
  }

  public void setAllowFileIsSet(boolean value) {
    if (!value) {
      this.allowFile = null;
    }
  }

  public String getSupportEnable() {
    return this.supportEnable;
  }

  public TDbSync_Dsp_Tencent_Ad_Space setSupportEnable(String supportEnable) {
    this.supportEnable = supportEnable;
    return this;
  }

  public void unsetSupportEnable() {
    this.supportEnable = null;
  }

  /** Returns true if field supportEnable is set (has been assigned a value) and false otherwise */
  public boolean isSetSupportEnable() {
    return this.supportEnable != null;
  }

  public void setSupportEnableIsSet(boolean value) {
    if (!value) {
      this.supportEnable = null;
    }
  }

  public String getProductName() {
    return this.productName;
  }

  public TDbSync_Dsp_Tencent_Ad_Space setProductName(String productName) {
    this.productName = productName;
    return this;
  }

  public void unsetProductName() {
    this.productName = null;
  }

  /** Returns true if field productName is set (has been assigned a value) and false otherwise */
  public boolean isSetProductName() {
    return this.productName != null;
  }

  public void setProductNameIsSet(boolean value) {
    if (!value) {
      this.productName = null;
    }
  }

  public String getMediaIDs() {
    return this.mediaIDs;
  }

  public TDbSync_Dsp_Tencent_Ad_Space setMediaIDs(String mediaIDs) {
    this.mediaIDs = mediaIDs;
    return this;
  }

  public void unsetMediaIDs() {
    this.mediaIDs = null;
  }

  /** Returns true if field mediaIDs is set (has been assigned a value) and false otherwise */
  public boolean isSetMediaIDs() {
    return this.mediaIDs != null;
  }

  public void setMediaIDsIsSet(boolean value) {
    if (!value) {
      this.mediaIDs = null;
    }
  }

  public int getSlotPosition() {
    return this.slotPosition;
  }

  public TDbSync_Dsp_Tencent_Ad_Space setSlotPosition(int slotPosition) {
    this.slotPosition = slotPosition;
    setSlotPositionIsSet(true);
    return this;
  }

  public void unsetSlotPosition() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SLOTPOSITION_ISSET_ID);
  }

  /** Returns true if field slotPosition is set (has been assigned a value) and false otherwise */
  public boolean isSetSlotPosition() {
    return EncodingUtils.testBit(__isset_bitfield, __SLOTPOSITION_ISSET_ID);
  }

  public void setSlotPositionIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SLOTPOSITION_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case I_D:
      if (value == null) {
        unsetID();
      } else {
        setID((Long)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    case LAST_CHANGED:
      if (value == null) {
        unsetLastChanged();
      } else {
        setLastChanged((String)value);
      }
      break;

    case LOCATION_ID:
      if (value == null) {
        unsetLocationID();
      } else {
        setLocationID((String)value);
      }
      break;

    case LOCATION_NAME:
      if (value == null) {
        unsetLocationName();
      } else {
        setLocationName((String)value);
      }
      break;

    case STYLE:
      if (value == null) {
        unsetStyle();
      } else {
        setStyle((String)value);
      }
      break;

    case CPM_START_PRICE:
      if (value == null) {
        unsetCpmStartPrice();
      } else {
        setCpmStartPrice((String)value);
      }
      break;

    case BLOCK_VOCATION:
      if (value == null) {
        unsetBlockVocation();
      } else {
        setBlockVocation((String)value);
      }
      break;

    case ALLOW_FILE:
      if (value == null) {
        unsetAllowFile();
      } else {
        setAllowFile((String)value);
      }
      break;

    case SUPPORT_ENABLE:
      if (value == null) {
        unsetSupportEnable();
      } else {
        setSupportEnable((String)value);
      }
      break;

    case PRODUCT_NAME:
      if (value == null) {
        unsetProductName();
      } else {
        setProductName((String)value);
      }
      break;

    case MEDIA_IDS:
      if (value == null) {
        unsetMediaIDs();
      } else {
        setMediaIDs((String)value);
      }
      break;

    case SLOT_POSITION:
      if (value == null) {
        unsetSlotPosition();
      } else {
        setSlotPosition((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case I_D:
      return Long.valueOf(getID());

    case STATUS:
      return Integer.valueOf(getStatus());

    case LAST_CHANGED:
      return getLastChanged();

    case LOCATION_ID:
      return getLocationID();

    case LOCATION_NAME:
      return getLocationName();

    case STYLE:
      return getStyle();

    case CPM_START_PRICE:
      return getCpmStartPrice();

    case BLOCK_VOCATION:
      return getBlockVocation();

    case ALLOW_FILE:
      return getAllowFile();

    case SUPPORT_ENABLE:
      return getSupportEnable();

    case PRODUCT_NAME:
      return getProductName();

    case MEDIA_IDS:
      return getMediaIDs();

    case SLOT_POSITION:
      return Integer.valueOf(getSlotPosition());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case I_D:
      return isSetID();
    case STATUS:
      return isSetStatus();
    case LAST_CHANGED:
      return isSetLastChanged();
    case LOCATION_ID:
      return isSetLocationID();
    case LOCATION_NAME:
      return isSetLocationName();
    case STYLE:
      return isSetStyle();
    case CPM_START_PRICE:
      return isSetCpmStartPrice();
    case BLOCK_VOCATION:
      return isSetBlockVocation();
    case ALLOW_FILE:
      return isSetAllowFile();
    case SUPPORT_ENABLE:
      return isSetSupportEnable();
    case PRODUCT_NAME:
      return isSetProductName();
    case MEDIA_IDS:
      return isSetMediaIDs();
    case SLOT_POSITION:
      return isSetSlotPosition();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TDbSync_Dsp_Tencent_Ad_Space)
      return this.equals((TDbSync_Dsp_Tencent_Ad_Space)that);
    return false;
  }

  public boolean equals(TDbSync_Dsp_Tencent_Ad_Space that) {
    if (that == null)
      return false;

    boolean this_present_iD = true;
    boolean that_present_iD = true;
    if (this_present_iD || that_present_iD) {
      if (!(this_present_iD && that_present_iD))
        return false;
      if (this.iD != that.iD)
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_lastChanged = true && this.isSetLastChanged();
    boolean that_present_lastChanged = true && that.isSetLastChanged();
    if (this_present_lastChanged || that_present_lastChanged) {
      if (!(this_present_lastChanged && that_present_lastChanged))
        return false;
      if (!this.lastChanged.equals(that.lastChanged))
        return false;
    }

    boolean this_present_locationID = true && this.isSetLocationID();
    boolean that_present_locationID = true && that.isSetLocationID();
    if (this_present_locationID || that_present_locationID) {
      if (!(this_present_locationID && that_present_locationID))
        return false;
      if (!this.locationID.equals(that.locationID))
        return false;
    }

    boolean this_present_locationName = true && this.isSetLocationName();
    boolean that_present_locationName = true && that.isSetLocationName();
    if (this_present_locationName || that_present_locationName) {
      if (!(this_present_locationName && that_present_locationName))
        return false;
      if (!this.locationName.equals(that.locationName))
        return false;
    }

    boolean this_present_style = true && this.isSetStyle();
    boolean that_present_style = true && that.isSetStyle();
    if (this_present_style || that_present_style) {
      if (!(this_present_style && that_present_style))
        return false;
      if (!this.style.equals(that.style))
        return false;
    }

    boolean this_present_cpmStartPrice = true && this.isSetCpmStartPrice();
    boolean that_present_cpmStartPrice = true && that.isSetCpmStartPrice();
    if (this_present_cpmStartPrice || that_present_cpmStartPrice) {
      if (!(this_present_cpmStartPrice && that_present_cpmStartPrice))
        return false;
      if (!this.cpmStartPrice.equals(that.cpmStartPrice))
        return false;
    }

    boolean this_present_blockVocation = true && this.isSetBlockVocation();
    boolean that_present_blockVocation = true && that.isSetBlockVocation();
    if (this_present_blockVocation || that_present_blockVocation) {
      if (!(this_present_blockVocation && that_present_blockVocation))
        return false;
      if (!this.blockVocation.equals(that.blockVocation))
        return false;
    }

    boolean this_present_allowFile = true && this.isSetAllowFile();
    boolean that_present_allowFile = true && that.isSetAllowFile();
    if (this_present_allowFile || that_present_allowFile) {
      if (!(this_present_allowFile && that_present_allowFile))
        return false;
      if (!this.allowFile.equals(that.allowFile))
        return false;
    }

    boolean this_present_supportEnable = true && this.isSetSupportEnable();
    boolean that_present_supportEnable = true && that.isSetSupportEnable();
    if (this_present_supportEnable || that_present_supportEnable) {
      if (!(this_present_supportEnable && that_present_supportEnable))
        return false;
      if (!this.supportEnable.equals(that.supportEnable))
        return false;
    }

    boolean this_present_productName = true && this.isSetProductName();
    boolean that_present_productName = true && that.isSetProductName();
    if (this_present_productName || that_present_productName) {
      if (!(this_present_productName && that_present_productName))
        return false;
      if (!this.productName.equals(that.productName))
        return false;
    }

    boolean this_present_mediaIDs = true && this.isSetMediaIDs();
    boolean that_present_mediaIDs = true && that.isSetMediaIDs();
    if (this_present_mediaIDs || that_present_mediaIDs) {
      if (!(this_present_mediaIDs && that_present_mediaIDs))
        return false;
      if (!this.mediaIDs.equals(that.mediaIDs))
        return false;
    }

    boolean this_present_slotPosition = true;
    boolean that_present_slotPosition = true;
    if (this_present_slotPosition || that_present_slotPosition) {
      if (!(this_present_slotPosition && that_present_slotPosition))
        return false;
      if (this.slotPosition != that.slotPosition)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(TDbSync_Dsp_Tencent_Ad_Space other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetID()).compareTo(other.isSetID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.iD, other.iD);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastChanged()).compareTo(other.isSetLastChanged());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastChanged()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastChanged, other.lastChanged);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLocationID()).compareTo(other.isSetLocationID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocationID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.locationID, other.locationID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLocationName()).compareTo(other.isSetLocationName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocationName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.locationName, other.locationName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStyle()).compareTo(other.isSetStyle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStyle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.style, other.style);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpmStartPrice()).compareTo(other.isSetCpmStartPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpmStartPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpmStartPrice, other.cpmStartPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBlockVocation()).compareTo(other.isSetBlockVocation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBlockVocation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.blockVocation, other.blockVocation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAllowFile()).compareTo(other.isSetAllowFile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAllowFile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.allowFile, other.allowFile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSupportEnable()).compareTo(other.isSetSupportEnable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSupportEnable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.supportEnable, other.supportEnable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductName()).compareTo(other.isSetProductName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productName, other.productName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMediaIDs()).compareTo(other.isSetMediaIDs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMediaIDs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mediaIDs, other.mediaIDs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSlotPosition()).compareTo(other.isSetSlotPosition());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSlotPosition()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.slotPosition, other.slotPosition);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TDbSync_Dsp_Tencent_Ad_Space(");
    boolean first = true;

    sb.append("iD:");
    sb.append(this.iD);
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastChanged:");
    if (this.lastChanged == null) {
      sb.append("null");
    } else {
      sb.append(this.lastChanged);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("locationID:");
    if (this.locationID == null) {
      sb.append("null");
    } else {
      sb.append(this.locationID);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("locationName:");
    if (this.locationName == null) {
      sb.append("null");
    } else {
      sb.append(this.locationName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("style:");
    if (this.style == null) {
      sb.append("null");
    } else {
      sb.append(this.style);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cpmStartPrice:");
    if (this.cpmStartPrice == null) {
      sb.append("null");
    } else {
      sb.append(this.cpmStartPrice);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("blockVocation:");
    if (this.blockVocation == null) {
      sb.append("null");
    } else {
      sb.append(this.blockVocation);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("allowFile:");
    if (this.allowFile == null) {
      sb.append("null");
    } else {
      sb.append(this.allowFile);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("supportEnable:");
    if (this.supportEnable == null) {
      sb.append("null");
    } else {
      sb.append(this.supportEnable);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productName:");
    if (this.productName == null) {
      sb.append("null");
    } else {
      sb.append(this.productName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("mediaIDs:");
    if (this.mediaIDs == null) {
      sb.append("null");
    } else {
      sb.append(this.mediaIDs);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("slotPosition:");
    sb.append(this.slotPosition);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'iD' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'status' because it's a primitive and you chose the non-beans generator.
    if (lastChanged == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'lastChanged' was not present! Struct: " + toString());
    }
    if (locationID == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'locationID' was not present! Struct: " + toString());
    }
    if (locationName == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'locationName' was not present! Struct: " + toString());
    }
    if (style == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'style' was not present! Struct: " + toString());
    }
    if (cpmStartPrice == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'cpmStartPrice' was not present! Struct: " + toString());
    }
    if (blockVocation == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'blockVocation' was not present! Struct: " + toString());
    }
    if (allowFile == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'allowFile' was not present! Struct: " + toString());
    }
    if (supportEnable == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'supportEnable' was not present! Struct: " + toString());
    }
    if (productName == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'productName' was not present! Struct: " + toString());
    }
    if (mediaIDs == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'mediaIDs' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'slotPosition' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TDbSync_Dsp_Tencent_Ad_SpaceStandardSchemeFactory implements SchemeFactory {
    public TDbSync_Dsp_Tencent_Ad_SpaceStandardScheme getScheme() {
      return new TDbSync_Dsp_Tencent_Ad_SpaceStandardScheme();
    }
  }

  private static class TDbSync_Dsp_Tencent_Ad_SpaceStandardScheme extends StandardScheme<TDbSync_Dsp_Tencent_Ad_Space> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TDbSync_Dsp_Tencent_Ad_Space struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // I_D
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.iD = iprot.readI64();
              struct.setIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LAST_CHANGED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lastChanged = iprot.readString();
              struct.setLastChangedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LOCATION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.locationID = iprot.readString();
              struct.setLocationIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LOCATION_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.locationName = iprot.readString();
              struct.setLocationNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // STYLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.style = iprot.readString();
              struct.setStyleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CPM_START_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpmStartPrice = iprot.readString();
              struct.setCpmStartPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // BLOCK_VOCATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.blockVocation = iprot.readString();
              struct.setBlockVocationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ALLOW_FILE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.allowFile = iprot.readString();
              struct.setAllowFileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // SUPPORT_ENABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.supportEnable = iprot.readString();
              struct.setSupportEnableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PRODUCT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productName = iprot.readString();
              struct.setProductNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // MEDIA_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mediaIDs = iprot.readString();
              struct.setMediaIDsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // SLOT_POSITION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.slotPosition = iprot.readI32();
              struct.setSlotPositionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetID()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'iD' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetStatus()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'status' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetSlotPosition()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'slotPosition' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TDbSync_Dsp_Tencent_Ad_Space struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(I_D_FIELD_DESC);
      oprot.writeI64(struct.iD);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.status);
      oprot.writeFieldEnd();
      if (struct.lastChanged != null) {
        oprot.writeFieldBegin(LAST_CHANGED_FIELD_DESC);
        oprot.writeString(struct.lastChanged);
        oprot.writeFieldEnd();
      }
      if (struct.locationID != null) {
        oprot.writeFieldBegin(LOCATION_ID_FIELD_DESC);
        oprot.writeString(struct.locationID);
        oprot.writeFieldEnd();
      }
      if (struct.locationName != null) {
        oprot.writeFieldBegin(LOCATION_NAME_FIELD_DESC);
        oprot.writeString(struct.locationName);
        oprot.writeFieldEnd();
      }
      if (struct.style != null) {
        oprot.writeFieldBegin(STYLE_FIELD_DESC);
        oprot.writeString(struct.style);
        oprot.writeFieldEnd();
      }
      if (struct.cpmStartPrice != null) {
        oprot.writeFieldBegin(CPM_START_PRICE_FIELD_DESC);
        oprot.writeString(struct.cpmStartPrice);
        oprot.writeFieldEnd();
      }
      if (struct.blockVocation != null) {
        oprot.writeFieldBegin(BLOCK_VOCATION_FIELD_DESC);
        oprot.writeString(struct.blockVocation);
        oprot.writeFieldEnd();
      }
      if (struct.allowFile != null) {
        oprot.writeFieldBegin(ALLOW_FILE_FIELD_DESC);
        oprot.writeString(struct.allowFile);
        oprot.writeFieldEnd();
      }
      if (struct.supportEnable != null) {
        oprot.writeFieldBegin(SUPPORT_ENABLE_FIELD_DESC);
        oprot.writeString(struct.supportEnable);
        oprot.writeFieldEnd();
      }
      if (struct.productName != null) {
        oprot.writeFieldBegin(PRODUCT_NAME_FIELD_DESC);
        oprot.writeString(struct.productName);
        oprot.writeFieldEnd();
      }
      if (struct.mediaIDs != null) {
        oprot.writeFieldBegin(MEDIA_IDS_FIELD_DESC);
        oprot.writeString(struct.mediaIDs);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SLOT_POSITION_FIELD_DESC);
      oprot.writeI32(struct.slotPosition);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TDbSync_Dsp_Tencent_Ad_SpaceTupleSchemeFactory implements SchemeFactory {
    public TDbSync_Dsp_Tencent_Ad_SpaceTupleScheme getScheme() {
      return new TDbSync_Dsp_Tencent_Ad_SpaceTupleScheme();
    }
  }

  private static class TDbSync_Dsp_Tencent_Ad_SpaceTupleScheme extends TupleScheme<TDbSync_Dsp_Tencent_Ad_Space> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TDbSync_Dsp_Tencent_Ad_Space struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI64(struct.iD);
      oprot.writeI32(struct.status);
      oprot.writeString(struct.lastChanged);
      oprot.writeString(struct.locationID);
      oprot.writeString(struct.locationName);
      oprot.writeString(struct.style);
      oprot.writeString(struct.cpmStartPrice);
      oprot.writeString(struct.blockVocation);
      oprot.writeString(struct.allowFile);
      oprot.writeString(struct.supportEnable);
      oprot.writeString(struct.productName);
      oprot.writeString(struct.mediaIDs);
      oprot.writeI32(struct.slotPosition);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TDbSync_Dsp_Tencent_Ad_Space struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.iD = iprot.readI64();
      struct.setIDIsSet(true);
      struct.status = iprot.readI32();
      struct.setStatusIsSet(true);
      struct.lastChanged = iprot.readString();
      struct.setLastChangedIsSet(true);
      struct.locationID = iprot.readString();
      struct.setLocationIDIsSet(true);
      struct.locationName = iprot.readString();
      struct.setLocationNameIsSet(true);
      struct.style = iprot.readString();
      struct.setStyleIsSet(true);
      struct.cpmStartPrice = iprot.readString();
      struct.setCpmStartPriceIsSet(true);
      struct.blockVocation = iprot.readString();
      struct.setBlockVocationIsSet(true);
      struct.allowFile = iprot.readString();
      struct.setAllowFileIsSet(true);
      struct.supportEnable = iprot.readString();
      struct.setSupportEnableIsSet(true);
      struct.productName = iprot.readString();
      struct.setProductNameIsSet(true);
      struct.mediaIDs = iprot.readString();
      struct.setMediaIDsIsSet(true);
      struct.slotPosition = iprot.readI32();
      struct.setSlotPositionIsSet(true);
    }
  }

}

