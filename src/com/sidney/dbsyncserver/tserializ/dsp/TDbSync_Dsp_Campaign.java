/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.sidney.dbsyncserver.tserializ.dsp;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TDbSync_Dsp_Campaign implements org.apache.thrift.TBase<TDbSync_Dsp_Campaign, TDbSync_Dsp_Campaign._Fields>, java.io.Serializable, Cloneable, Comparable<TDbSync_Dsp_Campaign> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TDbSync_Dsp_Campaign");

  private static final org.apache.thrift.protocol.TField CAMPAIGN_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("campaignID", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField LAST_CHANGED_FIELD_DESC = new org.apache.thrift.protocol.TField("lastChanged", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ADVERTISER_FIELD_DESC = new org.apache.thrift.protocol.TField("advertiser", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField AGENCY_FIELD_DESC = new org.apache.thrift.protocol.TField("Agency", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField BRAND_FIELD_DESC = new org.apache.thrift.protocol.TField("brand", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField PRODUCT_FIELD_DESC = new org.apache.thrift.protocol.TField("product", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField SECTOR_FIELD_DESC = new org.apache.thrift.protocol.TField("sector", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField BUDGET_FIELD_DESC = new org.apache.thrift.protocol.TField("budget", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField KPI_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("kpiType", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField KPI_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("kpiValue", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField PACING_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("pacingType", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField PACING_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("pacingValue", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField ADV_FEATURE_FIELD_DESC = new org.apache.thrift.protocol.TField("advFeature", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField KPI_DAILY_HIT_FIELD_DESC = new org.apache.thrift.protocol.TField("kpiDailyHit", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField KPI_TOTAL_HIT_FIELD_DESC = new org.apache.thrift.protocol.TField("kpiTotalHit", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField DAILY_HIT_FIELD_DESC = new org.apache.thrift.protocol.TField("dailyHit", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField TOTAL_HIT_FIELD_DESC = new org.apache.thrift.protocol.TField("totalHit", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField KPI_ACTION_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("kpiActionType", org.apache.thrift.protocol.TType.I32, (short)23);
  private static final org.apache.thrift.protocol.TField BRAND_SAFTY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("brandSaftyType", org.apache.thrift.protocol.TType.I32, (short)24);
  private static final org.apache.thrift.protocol.TField VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("version", org.apache.thrift.protocol.TType.I32, (short)25);
  private static final org.apache.thrift.protocol.TField ROTATION_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("rotationType", org.apache.thrift.protocol.TType.I32, (short)26);
  private static final org.apache.thrift.protocol.TField SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("source", org.apache.thrift.protocol.TType.I32, (short)27);
  private static final org.apache.thrift.protocol.TField MAX_DAILY_HIT_FIELD_DESC = new org.apache.thrift.protocol.TField("maxDailyHit", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField QUANTITY_BUDGET_FIELD_DESC = new org.apache.thrift.protocol.TField("quantityBudget", org.apache.thrift.protocol.TType.STRING, (short)29);
  private static final org.apache.thrift.protocol.TField MAX_DAILY_QUANTITY_FIELD_DESC = new org.apache.thrift.protocol.TField("maxDailyQuantity", org.apache.thrift.protocol.TType.STRING, (short)30);
  private static final org.apache.thrift.protocol.TField QUANTITY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("quantityType", org.apache.thrift.protocol.TType.I32, (short)31);
  private static final org.apache.thrift.protocol.TField TOTAL_QUANTITY_FIELD_DESC = new org.apache.thrift.protocol.TField("totalQuantity", org.apache.thrift.protocol.TType.STRING, (short)32);
  private static final org.apache.thrift.protocol.TField DAILY_QUANTITY_FIELD_DESC = new org.apache.thrift.protocol.TField("dailyQuantity", org.apache.thrift.protocol.TType.STRING, (short)33);
  private static final org.apache.thrift.protocol.TField CLICK_BUDGET_FIELD_DESC = new org.apache.thrift.protocol.TField("clickBudget", org.apache.thrift.protocol.TType.STRING, (short)34);
  private static final org.apache.thrift.protocol.TField MAX_DAILY_CLICK_FIELD_DESC = new org.apache.thrift.protocol.TField("maxDailyClick", org.apache.thrift.protocol.TType.STRING, (short)35);
  private static final org.apache.thrift.protocol.TField DAILY_HIT_CLICK_FIELD_DESC = new org.apache.thrift.protocol.TField("dailyHitClick", org.apache.thrift.protocol.TType.STRING, (short)36);
  private static final org.apache.thrift.protocol.TField TOTAL_HIT_CLICK_FIELD_DESC = new org.apache.thrift.protocol.TField("totalHitClick", org.apache.thrift.protocol.TType.STRING, (short)37);
  private static final org.apache.thrift.protocol.TField PV_BUDGET_FIELD_DESC = new org.apache.thrift.protocol.TField("pvBudget", org.apache.thrift.protocol.TType.STRING, (short)38);
  private static final org.apache.thrift.protocol.TField MAX_DAILY_PV_FIELD_DESC = new org.apache.thrift.protocol.TField("maxDailyPV", org.apache.thrift.protocol.TType.STRING, (short)39);
  private static final org.apache.thrift.protocol.TField DAILY_HIT_PV_FIELD_DESC = new org.apache.thrift.protocol.TField("dailyHitPV", org.apache.thrift.protocol.TType.STRING, (short)40);
  private static final org.apache.thrift.protocol.TField TOTAL_HIT_PV_FIELD_DESC = new org.apache.thrift.protocol.TField("totalHitPV", org.apache.thrift.protocol.TType.STRING, (short)41);
  private static final org.apache.thrift.protocol.TField AGENCY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("agencyId", org.apache.thrift.protocol.TType.I32, (short)42);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TDbSync_Dsp_CampaignStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TDbSync_Dsp_CampaignTupleSchemeFactory());
  }

  public int campaignID; // required
  public int status; // required
  public String lastChanged; // required
  public String name; // required
  public int advertiser; // required
  public String Agency; // required
  public int brand; // required
  public int product; // required
  public int sector; // required
  public String budget; // required
  public int kpiType; // required
  public String kpiValue; // required
  public String startTime; // required
  public String endTime; // required
  public int pacingType; // required
  public String pacingValue; // required
  public int advFeature; // required
  public String description; // required
  public String kpiDailyHit; // required
  public String kpiTotalHit; // required
  public String dailyHit; // required
  public String totalHit; // required
  public int kpiActionType; // required
  public int brandSaftyType; // required
  public int version; // required
  public int rotationType; // required
  public int source; // required
  public String maxDailyHit; // required
  public String quantityBudget; // required
  public String maxDailyQuantity; // required
  public int quantityType; // required
  public String totalQuantity; // required
  public String dailyQuantity; // required
  public String clickBudget; // required
  public String maxDailyClick; // required
  public String dailyHitClick; // required
  public String totalHitClick; // required
  public String pvBudget; // required
  public String maxDailyPV; // required
  public String dailyHitPV; // required
  public String totalHitPV; // required
  public int agencyId; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    CAMPAIGN_ID((short)1, "campaignID"),
    STATUS((short)2, "status"),
    LAST_CHANGED((short)3, "lastChanged"),
    NAME((short)4, "name"),
    ADVERTISER((short)5, "advertiser"),
    AGENCY((short)6, "Agency"),
    BRAND((short)7, "brand"),
    PRODUCT((short)8, "product"),
    SECTOR((short)9, "sector"),
    BUDGET((short)10, "budget"),
    KPI_TYPE((short)11, "kpiType"),
    KPI_VALUE((short)12, "kpiValue"),
    START_TIME((short)13, "startTime"),
    END_TIME((short)14, "endTime"),
    PACING_TYPE((short)15, "pacingType"),
    PACING_VALUE((short)16, "pacingValue"),
    ADV_FEATURE((short)17, "advFeature"),
    DESCRIPTION((short)18, "description"),
    KPI_DAILY_HIT((short)19, "kpiDailyHit"),
    KPI_TOTAL_HIT((short)20, "kpiTotalHit"),
    DAILY_HIT((short)21, "dailyHit"),
    TOTAL_HIT((short)22, "totalHit"),
    KPI_ACTION_TYPE((short)23, "kpiActionType"),
    BRAND_SAFTY_TYPE((short)24, "brandSaftyType"),
    VERSION((short)25, "version"),
    ROTATION_TYPE((short)26, "rotationType"),
    SOURCE((short)27, "source"),
    MAX_DAILY_HIT((short)28, "maxDailyHit"),
    QUANTITY_BUDGET((short)29, "quantityBudget"),
    MAX_DAILY_QUANTITY((short)30, "maxDailyQuantity"),
    QUANTITY_TYPE((short)31, "quantityType"),
    TOTAL_QUANTITY((short)32, "totalQuantity"),
    DAILY_QUANTITY((short)33, "dailyQuantity"),
    CLICK_BUDGET((short)34, "clickBudget"),
    MAX_DAILY_CLICK((short)35, "maxDailyClick"),
    DAILY_HIT_CLICK((short)36, "dailyHitClick"),
    TOTAL_HIT_CLICK((short)37, "totalHitClick"),
    PV_BUDGET((short)38, "pvBudget"),
    MAX_DAILY_PV((short)39, "maxDailyPV"),
    DAILY_HIT_PV((short)40, "dailyHitPV"),
    TOTAL_HIT_PV((short)41, "totalHitPV"),
    AGENCY_ID((short)42, "agencyId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CAMPAIGN_ID
          return CAMPAIGN_ID;
        case 2: // STATUS
          return STATUS;
        case 3: // LAST_CHANGED
          return LAST_CHANGED;
        case 4: // NAME
          return NAME;
        case 5: // ADVERTISER
          return ADVERTISER;
        case 6: // AGENCY
          return AGENCY;
        case 7: // BRAND
          return BRAND;
        case 8: // PRODUCT
          return PRODUCT;
        case 9: // SECTOR
          return SECTOR;
        case 10: // BUDGET
          return BUDGET;
        case 11: // KPI_TYPE
          return KPI_TYPE;
        case 12: // KPI_VALUE
          return KPI_VALUE;
        case 13: // START_TIME
          return START_TIME;
        case 14: // END_TIME
          return END_TIME;
        case 15: // PACING_TYPE
          return PACING_TYPE;
        case 16: // PACING_VALUE
          return PACING_VALUE;
        case 17: // ADV_FEATURE
          return ADV_FEATURE;
        case 18: // DESCRIPTION
          return DESCRIPTION;
        case 19: // KPI_DAILY_HIT
          return KPI_DAILY_HIT;
        case 20: // KPI_TOTAL_HIT
          return KPI_TOTAL_HIT;
        case 21: // DAILY_HIT
          return DAILY_HIT;
        case 22: // TOTAL_HIT
          return TOTAL_HIT;
        case 23: // KPI_ACTION_TYPE
          return KPI_ACTION_TYPE;
        case 24: // BRAND_SAFTY_TYPE
          return BRAND_SAFTY_TYPE;
        case 25: // VERSION
          return VERSION;
        case 26: // ROTATION_TYPE
          return ROTATION_TYPE;
        case 27: // SOURCE
          return SOURCE;
        case 28: // MAX_DAILY_HIT
          return MAX_DAILY_HIT;
        case 29: // QUANTITY_BUDGET
          return QUANTITY_BUDGET;
        case 30: // MAX_DAILY_QUANTITY
          return MAX_DAILY_QUANTITY;
        case 31: // QUANTITY_TYPE
          return QUANTITY_TYPE;
        case 32: // TOTAL_QUANTITY
          return TOTAL_QUANTITY;
        case 33: // DAILY_QUANTITY
          return DAILY_QUANTITY;
        case 34: // CLICK_BUDGET
          return CLICK_BUDGET;
        case 35: // MAX_DAILY_CLICK
          return MAX_DAILY_CLICK;
        case 36: // DAILY_HIT_CLICK
          return DAILY_HIT_CLICK;
        case 37: // TOTAL_HIT_CLICK
          return TOTAL_HIT_CLICK;
        case 38: // PV_BUDGET
          return PV_BUDGET;
        case 39: // MAX_DAILY_PV
          return MAX_DAILY_PV;
        case 40: // DAILY_HIT_PV
          return DAILY_HIT_PV;
        case 41: // TOTAL_HIT_PV
          return TOTAL_HIT_PV;
        case 42: // AGENCY_ID
          return AGENCY_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CAMPAIGNID_ISSET_ID = 0;
  private static final int __STATUS_ISSET_ID = 1;
  private static final int __ADVERTISER_ISSET_ID = 2;
  private static final int __BRAND_ISSET_ID = 3;
  private static final int __PRODUCT_ISSET_ID = 4;
  private static final int __SECTOR_ISSET_ID = 5;
  private static final int __KPITYPE_ISSET_ID = 6;
  private static final int __PACINGTYPE_ISSET_ID = 7;
  private static final int __ADVFEATURE_ISSET_ID = 8;
  private static final int __KPIACTIONTYPE_ISSET_ID = 9;
  private static final int __BRANDSAFTYTYPE_ISSET_ID = 10;
  private static final int __VERSION_ISSET_ID = 11;
  private static final int __ROTATIONTYPE_ISSET_ID = 12;
  private static final int __SOURCE_ISSET_ID = 13;
  private static final int __QUANTITYTYPE_ISSET_ID = 14;
  private static final int __AGENCYID_ISSET_ID = 15;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CAMPAIGN_ID, new org.apache.thrift.meta_data.FieldMetaData("campaignID", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LAST_CHANGED, new org.apache.thrift.meta_data.FieldMetaData("lastChanged", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADVERTISER, new org.apache.thrift.meta_data.FieldMetaData("advertiser", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AGENCY, new org.apache.thrift.meta_data.FieldMetaData("Agency", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BRAND, new org.apache.thrift.meta_data.FieldMetaData("brand", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRODUCT, new org.apache.thrift.meta_data.FieldMetaData("product", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SECTOR, new org.apache.thrift.meta_data.FieldMetaData("sector", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BUDGET, new org.apache.thrift.meta_data.FieldMetaData("budget", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.KPI_TYPE, new org.apache.thrift.meta_data.FieldMetaData("kpiType", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.KPI_VALUE, new org.apache.thrift.meta_data.FieldMetaData("kpiValue", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PACING_TYPE, new org.apache.thrift.meta_data.FieldMetaData("pacingType", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PACING_VALUE, new org.apache.thrift.meta_data.FieldMetaData("pacingValue", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADV_FEATURE, new org.apache.thrift.meta_data.FieldMetaData("advFeature", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.KPI_DAILY_HIT, new org.apache.thrift.meta_data.FieldMetaData("kpiDailyHit", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.KPI_TOTAL_HIT, new org.apache.thrift.meta_data.FieldMetaData("kpiTotalHit", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DAILY_HIT, new org.apache.thrift.meta_data.FieldMetaData("dailyHit", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TOTAL_HIT, new org.apache.thrift.meta_data.FieldMetaData("totalHit", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.KPI_ACTION_TYPE, new org.apache.thrift.meta_data.FieldMetaData("kpiActionType", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BRAND_SAFTY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("brandSaftyType", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.VERSION, new org.apache.thrift.meta_data.FieldMetaData("version", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ROTATION_TYPE, new org.apache.thrift.meta_data.FieldMetaData("rotationType", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SOURCE, new org.apache.thrift.meta_data.FieldMetaData("source", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MAX_DAILY_HIT, new org.apache.thrift.meta_data.FieldMetaData("maxDailyHit", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUANTITY_BUDGET, new org.apache.thrift.meta_data.FieldMetaData("quantityBudget", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MAX_DAILY_QUANTITY, new org.apache.thrift.meta_data.FieldMetaData("maxDailyQuantity", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUANTITY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("quantityType", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TOTAL_QUANTITY, new org.apache.thrift.meta_data.FieldMetaData("totalQuantity", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DAILY_QUANTITY, new org.apache.thrift.meta_data.FieldMetaData("dailyQuantity", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLICK_BUDGET, new org.apache.thrift.meta_data.FieldMetaData("clickBudget", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MAX_DAILY_CLICK, new org.apache.thrift.meta_data.FieldMetaData("maxDailyClick", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DAILY_HIT_CLICK, new org.apache.thrift.meta_data.FieldMetaData("dailyHitClick", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TOTAL_HIT_CLICK, new org.apache.thrift.meta_data.FieldMetaData("totalHitClick", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PV_BUDGET, new org.apache.thrift.meta_data.FieldMetaData("pvBudget", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MAX_DAILY_PV, new org.apache.thrift.meta_data.FieldMetaData("maxDailyPV", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DAILY_HIT_PV, new org.apache.thrift.meta_data.FieldMetaData("dailyHitPV", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TOTAL_HIT_PV, new org.apache.thrift.meta_data.FieldMetaData("totalHitPV", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AGENCY_ID, new org.apache.thrift.meta_data.FieldMetaData("agencyId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TDbSync_Dsp_Campaign.class, metaDataMap);
  }

  public TDbSync_Dsp_Campaign() {
  }

  public TDbSync_Dsp_Campaign(
    int campaignID,
    int status,
    String lastChanged,
    String name,
    int advertiser,
    String Agency,
    int brand,
    int product,
    int sector,
    String budget,
    int kpiType,
    String kpiValue,
    String startTime,
    String endTime,
    int pacingType,
    String pacingValue,
    int advFeature,
    String description,
    String kpiDailyHit,
    String kpiTotalHit,
    String dailyHit,
    String totalHit,
    int kpiActionType,
    int brandSaftyType,
    int version,
    int rotationType,
    int source,
    String maxDailyHit,
    String quantityBudget,
    String maxDailyQuantity,
    int quantityType,
    String totalQuantity,
    String dailyQuantity,
    String clickBudget,
    String maxDailyClick,
    String dailyHitClick,
    String totalHitClick,
    String pvBudget,
    String maxDailyPV,
    String dailyHitPV,
    String totalHitPV,
    int agencyId)
  {
    this();
    this.campaignID = campaignID;
    setCampaignIDIsSet(true);
    this.status = status;
    setStatusIsSet(true);
    this.lastChanged = lastChanged;
    this.name = name;
    this.advertiser = advertiser;
    setAdvertiserIsSet(true);
    this.Agency = Agency;
    this.brand = brand;
    setBrandIsSet(true);
    this.product = product;
    setProductIsSet(true);
    this.sector = sector;
    setSectorIsSet(true);
    this.budget = budget;
    this.kpiType = kpiType;
    setKpiTypeIsSet(true);
    this.kpiValue = kpiValue;
    this.startTime = startTime;
    this.endTime = endTime;
    this.pacingType = pacingType;
    setPacingTypeIsSet(true);
    this.pacingValue = pacingValue;
    this.advFeature = advFeature;
    setAdvFeatureIsSet(true);
    this.description = description;
    this.kpiDailyHit = kpiDailyHit;
    this.kpiTotalHit = kpiTotalHit;
    this.dailyHit = dailyHit;
    this.totalHit = totalHit;
    this.kpiActionType = kpiActionType;
    setKpiActionTypeIsSet(true);
    this.brandSaftyType = brandSaftyType;
    setBrandSaftyTypeIsSet(true);
    this.version = version;
    setVersionIsSet(true);
    this.rotationType = rotationType;
    setRotationTypeIsSet(true);
    this.source = source;
    setSourceIsSet(true);
    this.maxDailyHit = maxDailyHit;
    this.quantityBudget = quantityBudget;
    this.maxDailyQuantity = maxDailyQuantity;
    this.quantityType = quantityType;
    setQuantityTypeIsSet(true);
    this.totalQuantity = totalQuantity;
    this.dailyQuantity = dailyQuantity;
    this.clickBudget = clickBudget;
    this.maxDailyClick = maxDailyClick;
    this.dailyHitClick = dailyHitClick;
    this.totalHitClick = totalHitClick;
    this.pvBudget = pvBudget;
    this.maxDailyPV = maxDailyPV;
    this.dailyHitPV = dailyHitPV;
    this.totalHitPV = totalHitPV;
    this.agencyId = agencyId;
    setAgencyIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TDbSync_Dsp_Campaign(TDbSync_Dsp_Campaign other) {
    __isset_bitfield = other.__isset_bitfield;
    this.campaignID = other.campaignID;
    this.status = other.status;
    if (other.isSetLastChanged()) {
      this.lastChanged = other.lastChanged;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    this.advertiser = other.advertiser;
    if (other.isSetAgency()) {
      this.Agency = other.Agency;
    }
    this.brand = other.brand;
    this.product = other.product;
    this.sector = other.sector;
    if (other.isSetBudget()) {
      this.budget = other.budget;
    }
    this.kpiType = other.kpiType;
    if (other.isSetKpiValue()) {
      this.kpiValue = other.kpiValue;
    }
    if (other.isSetStartTime()) {
      this.startTime = other.startTime;
    }
    if (other.isSetEndTime()) {
      this.endTime = other.endTime;
    }
    this.pacingType = other.pacingType;
    if (other.isSetPacingValue()) {
      this.pacingValue = other.pacingValue;
    }
    this.advFeature = other.advFeature;
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetKpiDailyHit()) {
      this.kpiDailyHit = other.kpiDailyHit;
    }
    if (other.isSetKpiTotalHit()) {
      this.kpiTotalHit = other.kpiTotalHit;
    }
    if (other.isSetDailyHit()) {
      this.dailyHit = other.dailyHit;
    }
    if (other.isSetTotalHit()) {
      this.totalHit = other.totalHit;
    }
    this.kpiActionType = other.kpiActionType;
    this.brandSaftyType = other.brandSaftyType;
    this.version = other.version;
    this.rotationType = other.rotationType;
    this.source = other.source;
    if (other.isSetMaxDailyHit()) {
      this.maxDailyHit = other.maxDailyHit;
    }
    if (other.isSetQuantityBudget()) {
      this.quantityBudget = other.quantityBudget;
    }
    if (other.isSetMaxDailyQuantity()) {
      this.maxDailyQuantity = other.maxDailyQuantity;
    }
    this.quantityType = other.quantityType;
    if (other.isSetTotalQuantity()) {
      this.totalQuantity = other.totalQuantity;
    }
    if (other.isSetDailyQuantity()) {
      this.dailyQuantity = other.dailyQuantity;
    }
    if (other.isSetClickBudget()) {
      this.clickBudget = other.clickBudget;
    }
    if (other.isSetMaxDailyClick()) {
      this.maxDailyClick = other.maxDailyClick;
    }
    if (other.isSetDailyHitClick()) {
      this.dailyHitClick = other.dailyHitClick;
    }
    if (other.isSetTotalHitClick()) {
      this.totalHitClick = other.totalHitClick;
    }
    if (other.isSetPvBudget()) {
      this.pvBudget = other.pvBudget;
    }
    if (other.isSetMaxDailyPV()) {
      this.maxDailyPV = other.maxDailyPV;
    }
    if (other.isSetDailyHitPV()) {
      this.dailyHitPV = other.dailyHitPV;
    }
    if (other.isSetTotalHitPV()) {
      this.totalHitPV = other.totalHitPV;
    }
    this.agencyId = other.agencyId;
  }

  public TDbSync_Dsp_Campaign deepCopy() {
    return new TDbSync_Dsp_Campaign(this);
  }

  @Override
  public void clear() {
    setCampaignIDIsSet(false);
    this.campaignID = 0;
    setStatusIsSet(false);
    this.status = 0;
    this.lastChanged = null;
    this.name = null;
    setAdvertiserIsSet(false);
    this.advertiser = 0;
    this.Agency = null;
    setBrandIsSet(false);
    this.brand = 0;
    setProductIsSet(false);
    this.product = 0;
    setSectorIsSet(false);
    this.sector = 0;
    this.budget = null;
    setKpiTypeIsSet(false);
    this.kpiType = 0;
    this.kpiValue = null;
    this.startTime = null;
    this.endTime = null;
    setPacingTypeIsSet(false);
    this.pacingType = 0;
    this.pacingValue = null;
    setAdvFeatureIsSet(false);
    this.advFeature = 0;
    this.description = null;
    this.kpiDailyHit = null;
    this.kpiTotalHit = null;
    this.dailyHit = null;
    this.totalHit = null;
    setKpiActionTypeIsSet(false);
    this.kpiActionType = 0;
    setBrandSaftyTypeIsSet(false);
    this.brandSaftyType = 0;
    setVersionIsSet(false);
    this.version = 0;
    setRotationTypeIsSet(false);
    this.rotationType = 0;
    setSourceIsSet(false);
    this.source = 0;
    this.maxDailyHit = null;
    this.quantityBudget = null;
    this.maxDailyQuantity = null;
    setQuantityTypeIsSet(false);
    this.quantityType = 0;
    this.totalQuantity = null;
    this.dailyQuantity = null;
    this.clickBudget = null;
    this.maxDailyClick = null;
    this.dailyHitClick = null;
    this.totalHitClick = null;
    this.pvBudget = null;
    this.maxDailyPV = null;
    this.dailyHitPV = null;
    this.totalHitPV = null;
    setAgencyIdIsSet(false);
    this.agencyId = 0;
  }

  public int getCampaignID() {
    return this.campaignID;
  }

  public TDbSync_Dsp_Campaign setCampaignID(int campaignID) {
    this.campaignID = campaignID;
    setCampaignIDIsSet(true);
    return this;
  }

  public void unsetCampaignID() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CAMPAIGNID_ISSET_ID);
  }

  /** Returns true if field campaignID is set (has been assigned a value) and false otherwise */
  public boolean isSetCampaignID() {
    return EncodingUtils.testBit(__isset_bitfield, __CAMPAIGNID_ISSET_ID);
  }

  public void setCampaignIDIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CAMPAIGNID_ISSET_ID, value);
  }

  public int getStatus() {
    return this.status;
  }

  public TDbSync_Dsp_Campaign setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public String getLastChanged() {
    return this.lastChanged;
  }

  public TDbSync_Dsp_Campaign setLastChanged(String lastChanged) {
    this.lastChanged = lastChanged;
    return this;
  }

  public void unsetLastChanged() {
    this.lastChanged = null;
  }

  /** Returns true if field lastChanged is set (has been assigned a value) and false otherwise */
  public boolean isSetLastChanged() {
    return this.lastChanged != null;
  }

  public void setLastChangedIsSet(boolean value) {
    if (!value) {
      this.lastChanged = null;
    }
  }

  public String getName() {
    return this.name;
  }

  public TDbSync_Dsp_Campaign setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public int getAdvertiser() {
    return this.advertiser;
  }

  public TDbSync_Dsp_Campaign setAdvertiser(int advertiser) {
    this.advertiser = advertiser;
    setAdvertiserIsSet(true);
    return this;
  }

  public void unsetAdvertiser() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ADVERTISER_ISSET_ID);
  }

  /** Returns true if field advertiser is set (has been assigned a value) and false otherwise */
  public boolean isSetAdvertiser() {
    return EncodingUtils.testBit(__isset_bitfield, __ADVERTISER_ISSET_ID);
  }

  public void setAdvertiserIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ADVERTISER_ISSET_ID, value);
  }

  public String getAgency() {
    return this.Agency;
  }

  public TDbSync_Dsp_Campaign setAgency(String Agency) {
    this.Agency = Agency;
    return this;
  }

  public void unsetAgency() {
    this.Agency = null;
  }

  /** Returns true if field Agency is set (has been assigned a value) and false otherwise */
  public boolean isSetAgency() {
    return this.Agency != null;
  }

  public void setAgencyIsSet(boolean value) {
    if (!value) {
      this.Agency = null;
    }
  }

  public int getBrand() {
    return this.brand;
  }

  public TDbSync_Dsp_Campaign setBrand(int brand) {
    this.brand = brand;
    setBrandIsSet(true);
    return this;
  }

  public void unsetBrand() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BRAND_ISSET_ID);
  }

  /** Returns true if field brand is set (has been assigned a value) and false otherwise */
  public boolean isSetBrand() {
    return EncodingUtils.testBit(__isset_bitfield, __BRAND_ISSET_ID);
  }

  public void setBrandIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BRAND_ISSET_ID, value);
  }

  public int getProduct() {
    return this.product;
  }

  public TDbSync_Dsp_Campaign setProduct(int product) {
    this.product = product;
    setProductIsSet(true);
    return this;
  }

  public void unsetProduct() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRODUCT_ISSET_ID);
  }

  /** Returns true if field product is set (has been assigned a value) and false otherwise */
  public boolean isSetProduct() {
    return EncodingUtils.testBit(__isset_bitfield, __PRODUCT_ISSET_ID);
  }

  public void setProductIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRODUCT_ISSET_ID, value);
  }

  public int getSector() {
    return this.sector;
  }

  public TDbSync_Dsp_Campaign setSector(int sector) {
    this.sector = sector;
    setSectorIsSet(true);
    return this;
  }

  public void unsetSector() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SECTOR_ISSET_ID);
  }

  /** Returns true if field sector is set (has been assigned a value) and false otherwise */
  public boolean isSetSector() {
    return EncodingUtils.testBit(__isset_bitfield, __SECTOR_ISSET_ID);
  }

  public void setSectorIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SECTOR_ISSET_ID, value);
  }

  public String getBudget() {
    return this.budget;
  }

  public TDbSync_Dsp_Campaign setBudget(String budget) {
    this.budget = budget;
    return this;
  }

  public void unsetBudget() {
    this.budget = null;
  }

  /** Returns true if field budget is set (has been assigned a value) and false otherwise */
  public boolean isSetBudget() {
    return this.budget != null;
  }

  public void setBudgetIsSet(boolean value) {
    if (!value) {
      this.budget = null;
    }
  }

  public int getKpiType() {
    return this.kpiType;
  }

  public TDbSync_Dsp_Campaign setKpiType(int kpiType) {
    this.kpiType = kpiType;
    setKpiTypeIsSet(true);
    return this;
  }

  public void unsetKpiType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __KPITYPE_ISSET_ID);
  }

  /** Returns true if field kpiType is set (has been assigned a value) and false otherwise */
  public boolean isSetKpiType() {
    return EncodingUtils.testBit(__isset_bitfield, __KPITYPE_ISSET_ID);
  }

  public void setKpiTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __KPITYPE_ISSET_ID, value);
  }

  public String getKpiValue() {
    return this.kpiValue;
  }

  public TDbSync_Dsp_Campaign setKpiValue(String kpiValue) {
    this.kpiValue = kpiValue;
    return this;
  }

  public void unsetKpiValue() {
    this.kpiValue = null;
  }

  /** Returns true if field kpiValue is set (has been assigned a value) and false otherwise */
  public boolean isSetKpiValue() {
    return this.kpiValue != null;
  }

  public void setKpiValueIsSet(boolean value) {
    if (!value) {
      this.kpiValue = null;
    }
  }

  public String getStartTime() {
    return this.startTime;
  }

  public TDbSync_Dsp_Campaign setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  public void unsetStartTime() {
    this.startTime = null;
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return this.startTime != null;
  }

  public void setStartTimeIsSet(boolean value) {
    if (!value) {
      this.startTime = null;
    }
  }

  public String getEndTime() {
    return this.endTime;
  }

  public TDbSync_Dsp_Campaign setEndTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  public void unsetEndTime() {
    this.endTime = null;
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return this.endTime != null;
  }

  public void setEndTimeIsSet(boolean value) {
    if (!value) {
      this.endTime = null;
    }
  }

  public int getPacingType() {
    return this.pacingType;
  }

  public TDbSync_Dsp_Campaign setPacingType(int pacingType) {
    this.pacingType = pacingType;
    setPacingTypeIsSet(true);
    return this;
  }

  public void unsetPacingType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PACINGTYPE_ISSET_ID);
  }

  /** Returns true if field pacingType is set (has been assigned a value) and false otherwise */
  public boolean isSetPacingType() {
    return EncodingUtils.testBit(__isset_bitfield, __PACINGTYPE_ISSET_ID);
  }

  public void setPacingTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PACINGTYPE_ISSET_ID, value);
  }

  public String getPacingValue() {
    return this.pacingValue;
  }

  public TDbSync_Dsp_Campaign setPacingValue(String pacingValue) {
    this.pacingValue = pacingValue;
    return this;
  }

  public void unsetPacingValue() {
    this.pacingValue = null;
  }

  /** Returns true if field pacingValue is set (has been assigned a value) and false otherwise */
  public boolean isSetPacingValue() {
    return this.pacingValue != null;
  }

  public void setPacingValueIsSet(boolean value) {
    if (!value) {
      this.pacingValue = null;
    }
  }

  public int getAdvFeature() {
    return this.advFeature;
  }

  public TDbSync_Dsp_Campaign setAdvFeature(int advFeature) {
    this.advFeature = advFeature;
    setAdvFeatureIsSet(true);
    return this;
  }

  public void unsetAdvFeature() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ADVFEATURE_ISSET_ID);
  }

  /** Returns true if field advFeature is set (has been assigned a value) and false otherwise */
  public boolean isSetAdvFeature() {
    return EncodingUtils.testBit(__isset_bitfield, __ADVFEATURE_ISSET_ID);
  }

  public void setAdvFeatureIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ADVFEATURE_ISSET_ID, value);
  }

  public String getDescription() {
    return this.description;
  }

  public TDbSync_Dsp_Campaign setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public String getKpiDailyHit() {
    return this.kpiDailyHit;
  }

  public TDbSync_Dsp_Campaign setKpiDailyHit(String kpiDailyHit) {
    this.kpiDailyHit = kpiDailyHit;
    return this;
  }

  public void unsetKpiDailyHit() {
    this.kpiDailyHit = null;
  }

  /** Returns true if field kpiDailyHit is set (has been assigned a value) and false otherwise */
  public boolean isSetKpiDailyHit() {
    return this.kpiDailyHit != null;
  }

  public void setKpiDailyHitIsSet(boolean value) {
    if (!value) {
      this.kpiDailyHit = null;
    }
  }

  public String getKpiTotalHit() {
    return this.kpiTotalHit;
  }

  public TDbSync_Dsp_Campaign setKpiTotalHit(String kpiTotalHit) {
    this.kpiTotalHit = kpiTotalHit;
    return this;
  }

  public void unsetKpiTotalHit() {
    this.kpiTotalHit = null;
  }

  /** Returns true if field kpiTotalHit is set (has been assigned a value) and false otherwise */
  public boolean isSetKpiTotalHit() {
    return this.kpiTotalHit != null;
  }

  public void setKpiTotalHitIsSet(boolean value) {
    if (!value) {
      this.kpiTotalHit = null;
    }
  }

  public String getDailyHit() {
    return this.dailyHit;
  }

  public TDbSync_Dsp_Campaign setDailyHit(String dailyHit) {
    this.dailyHit = dailyHit;
    return this;
  }

  public void unsetDailyHit() {
    this.dailyHit = null;
  }

  /** Returns true if field dailyHit is set (has been assigned a value) and false otherwise */
  public boolean isSetDailyHit() {
    return this.dailyHit != null;
  }

  public void setDailyHitIsSet(boolean value) {
    if (!value) {
      this.dailyHit = null;
    }
  }

  public String getTotalHit() {
    return this.totalHit;
  }

  public TDbSync_Dsp_Campaign setTotalHit(String totalHit) {
    this.totalHit = totalHit;
    return this;
  }

  public void unsetTotalHit() {
    this.totalHit = null;
  }

  /** Returns true if field totalHit is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalHit() {
    return this.totalHit != null;
  }

  public void setTotalHitIsSet(boolean value) {
    if (!value) {
      this.totalHit = null;
    }
  }

  public int getKpiActionType() {
    return this.kpiActionType;
  }

  public TDbSync_Dsp_Campaign setKpiActionType(int kpiActionType) {
    this.kpiActionType = kpiActionType;
    setKpiActionTypeIsSet(true);
    return this;
  }

  public void unsetKpiActionType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __KPIACTIONTYPE_ISSET_ID);
  }

  /** Returns true if field kpiActionType is set (has been assigned a value) and false otherwise */
  public boolean isSetKpiActionType() {
    return EncodingUtils.testBit(__isset_bitfield, __KPIACTIONTYPE_ISSET_ID);
  }

  public void setKpiActionTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __KPIACTIONTYPE_ISSET_ID, value);
  }

  public int getBrandSaftyType() {
    return this.brandSaftyType;
  }

  public TDbSync_Dsp_Campaign setBrandSaftyType(int brandSaftyType) {
    this.brandSaftyType = brandSaftyType;
    setBrandSaftyTypeIsSet(true);
    return this;
  }

  public void unsetBrandSaftyType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BRANDSAFTYTYPE_ISSET_ID);
  }

  /** Returns true if field brandSaftyType is set (has been assigned a value) and false otherwise */
  public boolean isSetBrandSaftyType() {
    return EncodingUtils.testBit(__isset_bitfield, __BRANDSAFTYTYPE_ISSET_ID);
  }

  public void setBrandSaftyTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BRANDSAFTYTYPE_ISSET_ID, value);
  }

  public int getVersion() {
    return this.version;
  }

  public TDbSync_Dsp_Campaign setVersion(int version) {
    this.version = version;
    setVersionIsSet(true);
    return this;
  }

  public void unsetVersion() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VERSION_ISSET_ID);
  }

  /** Returns true if field version is set (has been assigned a value) and false otherwise */
  public boolean isSetVersion() {
    return EncodingUtils.testBit(__isset_bitfield, __VERSION_ISSET_ID);
  }

  public void setVersionIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VERSION_ISSET_ID, value);
  }

  public int getRotationType() {
    return this.rotationType;
  }

  public TDbSync_Dsp_Campaign setRotationType(int rotationType) {
    this.rotationType = rotationType;
    setRotationTypeIsSet(true);
    return this;
  }

  public void unsetRotationType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ROTATIONTYPE_ISSET_ID);
  }

  /** Returns true if field rotationType is set (has been assigned a value) and false otherwise */
  public boolean isSetRotationType() {
    return EncodingUtils.testBit(__isset_bitfield, __ROTATIONTYPE_ISSET_ID);
  }

  public void setRotationTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ROTATIONTYPE_ISSET_ID, value);
  }

  public int getSource() {
    return this.source;
  }

  public TDbSync_Dsp_Campaign setSource(int source) {
    this.source = source;
    setSourceIsSet(true);
    return this;
  }

  public void unsetSource() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SOURCE_ISSET_ID);
  }

  /** Returns true if field source is set (has been assigned a value) and false otherwise */
  public boolean isSetSource() {
    return EncodingUtils.testBit(__isset_bitfield, __SOURCE_ISSET_ID);
  }

  public void setSourceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SOURCE_ISSET_ID, value);
  }

  public String getMaxDailyHit() {
    return this.maxDailyHit;
  }

  public TDbSync_Dsp_Campaign setMaxDailyHit(String maxDailyHit) {
    this.maxDailyHit = maxDailyHit;
    return this;
  }

  public void unsetMaxDailyHit() {
    this.maxDailyHit = null;
  }

  /** Returns true if field maxDailyHit is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxDailyHit() {
    return this.maxDailyHit != null;
  }

  public void setMaxDailyHitIsSet(boolean value) {
    if (!value) {
      this.maxDailyHit = null;
    }
  }

  public String getQuantityBudget() {
    return this.quantityBudget;
  }

  public TDbSync_Dsp_Campaign setQuantityBudget(String quantityBudget) {
    this.quantityBudget = quantityBudget;
    return this;
  }

  public void unsetQuantityBudget() {
    this.quantityBudget = null;
  }

  /** Returns true if field quantityBudget is set (has been assigned a value) and false otherwise */
  public boolean isSetQuantityBudget() {
    return this.quantityBudget != null;
  }

  public void setQuantityBudgetIsSet(boolean value) {
    if (!value) {
      this.quantityBudget = null;
    }
  }

  public String getMaxDailyQuantity() {
    return this.maxDailyQuantity;
  }

  public TDbSync_Dsp_Campaign setMaxDailyQuantity(String maxDailyQuantity) {
    this.maxDailyQuantity = maxDailyQuantity;
    return this;
  }

  public void unsetMaxDailyQuantity() {
    this.maxDailyQuantity = null;
  }

  /** Returns true if field maxDailyQuantity is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxDailyQuantity() {
    return this.maxDailyQuantity != null;
  }

  public void setMaxDailyQuantityIsSet(boolean value) {
    if (!value) {
      this.maxDailyQuantity = null;
    }
  }

  public int getQuantityType() {
    return this.quantityType;
  }

  public TDbSync_Dsp_Campaign setQuantityType(int quantityType) {
    this.quantityType = quantityType;
    setQuantityTypeIsSet(true);
    return this;
  }

  public void unsetQuantityType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __QUANTITYTYPE_ISSET_ID);
  }

  /** Returns true if field quantityType is set (has been assigned a value) and false otherwise */
  public boolean isSetQuantityType() {
    return EncodingUtils.testBit(__isset_bitfield, __QUANTITYTYPE_ISSET_ID);
  }

  public void setQuantityTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __QUANTITYTYPE_ISSET_ID, value);
  }

  public String getTotalQuantity() {
    return this.totalQuantity;
  }

  public TDbSync_Dsp_Campaign setTotalQuantity(String totalQuantity) {
    this.totalQuantity = totalQuantity;
    return this;
  }

  public void unsetTotalQuantity() {
    this.totalQuantity = null;
  }

  /** Returns true if field totalQuantity is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalQuantity() {
    return this.totalQuantity != null;
  }

  public void setTotalQuantityIsSet(boolean value) {
    if (!value) {
      this.totalQuantity = null;
    }
  }

  public String getDailyQuantity() {
    return this.dailyQuantity;
  }

  public TDbSync_Dsp_Campaign setDailyQuantity(String dailyQuantity) {
    this.dailyQuantity = dailyQuantity;
    return this;
  }

  public void unsetDailyQuantity() {
    this.dailyQuantity = null;
  }

  /** Returns true if field dailyQuantity is set (has been assigned a value) and false otherwise */
  public boolean isSetDailyQuantity() {
    return this.dailyQuantity != null;
  }

  public void setDailyQuantityIsSet(boolean value) {
    if (!value) {
      this.dailyQuantity = null;
    }
  }

  public String getClickBudget() {
    return this.clickBudget;
  }

  public TDbSync_Dsp_Campaign setClickBudget(String clickBudget) {
    this.clickBudget = clickBudget;
    return this;
  }

  public void unsetClickBudget() {
    this.clickBudget = null;
  }

  /** Returns true if field clickBudget is set (has been assigned a value) and false otherwise */
  public boolean isSetClickBudget() {
    return this.clickBudget != null;
  }

  public void setClickBudgetIsSet(boolean value) {
    if (!value) {
      this.clickBudget = null;
    }
  }

  public String getMaxDailyClick() {
    return this.maxDailyClick;
  }

  public TDbSync_Dsp_Campaign setMaxDailyClick(String maxDailyClick) {
    this.maxDailyClick = maxDailyClick;
    return this;
  }

  public void unsetMaxDailyClick() {
    this.maxDailyClick = null;
  }

  /** Returns true if field maxDailyClick is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxDailyClick() {
    return this.maxDailyClick != null;
  }

  public void setMaxDailyClickIsSet(boolean value) {
    if (!value) {
      this.maxDailyClick = null;
    }
  }

  public String getDailyHitClick() {
    return this.dailyHitClick;
  }

  public TDbSync_Dsp_Campaign setDailyHitClick(String dailyHitClick) {
    this.dailyHitClick = dailyHitClick;
    return this;
  }

  public void unsetDailyHitClick() {
    this.dailyHitClick = null;
  }

  /** Returns true if field dailyHitClick is set (has been assigned a value) and false otherwise */
  public boolean isSetDailyHitClick() {
    return this.dailyHitClick != null;
  }

  public void setDailyHitClickIsSet(boolean value) {
    if (!value) {
      this.dailyHitClick = null;
    }
  }

  public String getTotalHitClick() {
    return this.totalHitClick;
  }

  public TDbSync_Dsp_Campaign setTotalHitClick(String totalHitClick) {
    this.totalHitClick = totalHitClick;
    return this;
  }

  public void unsetTotalHitClick() {
    this.totalHitClick = null;
  }

  /** Returns true if field totalHitClick is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalHitClick() {
    return this.totalHitClick != null;
  }

  public void setTotalHitClickIsSet(boolean value) {
    if (!value) {
      this.totalHitClick = null;
    }
  }

  public String getPvBudget() {
    return this.pvBudget;
  }

  public TDbSync_Dsp_Campaign setPvBudget(String pvBudget) {
    this.pvBudget = pvBudget;
    return this;
  }

  public void unsetPvBudget() {
    this.pvBudget = null;
  }

  /** Returns true if field pvBudget is set (has been assigned a value) and false otherwise */
  public boolean isSetPvBudget() {
    return this.pvBudget != null;
  }

  public void setPvBudgetIsSet(boolean value) {
    if (!value) {
      this.pvBudget = null;
    }
  }

  public String getMaxDailyPV() {
    return this.maxDailyPV;
  }

  public TDbSync_Dsp_Campaign setMaxDailyPV(String maxDailyPV) {
    this.maxDailyPV = maxDailyPV;
    return this;
  }

  public void unsetMaxDailyPV() {
    this.maxDailyPV = null;
  }

  /** Returns true if field maxDailyPV is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxDailyPV() {
    return this.maxDailyPV != null;
  }

  public void setMaxDailyPVIsSet(boolean value) {
    if (!value) {
      this.maxDailyPV = null;
    }
  }

  public String getDailyHitPV() {
    return this.dailyHitPV;
  }

  public TDbSync_Dsp_Campaign setDailyHitPV(String dailyHitPV) {
    this.dailyHitPV = dailyHitPV;
    return this;
  }

  public void unsetDailyHitPV() {
    this.dailyHitPV = null;
  }

  /** Returns true if field dailyHitPV is set (has been assigned a value) and false otherwise */
  public boolean isSetDailyHitPV() {
    return this.dailyHitPV != null;
  }

  public void setDailyHitPVIsSet(boolean value) {
    if (!value) {
      this.dailyHitPV = null;
    }
  }

  public String getTotalHitPV() {
    return this.totalHitPV;
  }

  public TDbSync_Dsp_Campaign setTotalHitPV(String totalHitPV) {
    this.totalHitPV = totalHitPV;
    return this;
  }

  public void unsetTotalHitPV() {
    this.totalHitPV = null;
  }

  /** Returns true if field totalHitPV is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalHitPV() {
    return this.totalHitPV != null;
  }

  public void setTotalHitPVIsSet(boolean value) {
    if (!value) {
      this.totalHitPV = null;
    }
  }

  public int getAgencyId() {
    return this.agencyId;
  }

  public TDbSync_Dsp_Campaign setAgencyId(int agencyId) {
    this.agencyId = agencyId;
    setAgencyIdIsSet(true);
    return this;
  }

  public void unsetAgencyId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AGENCYID_ISSET_ID);
  }

  /** Returns true if field agencyId is set (has been assigned a value) and false otherwise */
  public boolean isSetAgencyId() {
    return EncodingUtils.testBit(__isset_bitfield, __AGENCYID_ISSET_ID);
  }

  public void setAgencyIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AGENCYID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CAMPAIGN_ID:
      if (value == null) {
        unsetCampaignID();
      } else {
        setCampaignID((Integer)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    case LAST_CHANGED:
      if (value == null) {
        unsetLastChanged();
      } else {
        setLastChanged((String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case ADVERTISER:
      if (value == null) {
        unsetAdvertiser();
      } else {
        setAdvertiser((Integer)value);
      }
      break;

    case AGENCY:
      if (value == null) {
        unsetAgency();
      } else {
        setAgency((String)value);
      }
      break;

    case BRAND:
      if (value == null) {
        unsetBrand();
      } else {
        setBrand((Integer)value);
      }
      break;

    case PRODUCT:
      if (value == null) {
        unsetProduct();
      } else {
        setProduct((Integer)value);
      }
      break;

    case SECTOR:
      if (value == null) {
        unsetSector();
      } else {
        setSector((Integer)value);
      }
      break;

    case BUDGET:
      if (value == null) {
        unsetBudget();
      } else {
        setBudget((String)value);
      }
      break;

    case KPI_TYPE:
      if (value == null) {
        unsetKpiType();
      } else {
        setKpiType((Integer)value);
      }
      break;

    case KPI_VALUE:
      if (value == null) {
        unsetKpiValue();
      } else {
        setKpiValue((String)value);
      }
      break;

    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((String)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((String)value);
      }
      break;

    case PACING_TYPE:
      if (value == null) {
        unsetPacingType();
      } else {
        setPacingType((Integer)value);
      }
      break;

    case PACING_VALUE:
      if (value == null) {
        unsetPacingValue();
      } else {
        setPacingValue((String)value);
      }
      break;

    case ADV_FEATURE:
      if (value == null) {
        unsetAdvFeature();
      } else {
        setAdvFeature((Integer)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    case KPI_DAILY_HIT:
      if (value == null) {
        unsetKpiDailyHit();
      } else {
        setKpiDailyHit((String)value);
      }
      break;

    case KPI_TOTAL_HIT:
      if (value == null) {
        unsetKpiTotalHit();
      } else {
        setKpiTotalHit((String)value);
      }
      break;

    case DAILY_HIT:
      if (value == null) {
        unsetDailyHit();
      } else {
        setDailyHit((String)value);
      }
      break;

    case TOTAL_HIT:
      if (value == null) {
        unsetTotalHit();
      } else {
        setTotalHit((String)value);
      }
      break;

    case KPI_ACTION_TYPE:
      if (value == null) {
        unsetKpiActionType();
      } else {
        setKpiActionType((Integer)value);
      }
      break;

    case BRAND_SAFTY_TYPE:
      if (value == null) {
        unsetBrandSaftyType();
      } else {
        setBrandSaftyType((Integer)value);
      }
      break;

    case VERSION:
      if (value == null) {
        unsetVersion();
      } else {
        setVersion((Integer)value);
      }
      break;

    case ROTATION_TYPE:
      if (value == null) {
        unsetRotationType();
      } else {
        setRotationType((Integer)value);
      }
      break;

    case SOURCE:
      if (value == null) {
        unsetSource();
      } else {
        setSource((Integer)value);
      }
      break;

    case MAX_DAILY_HIT:
      if (value == null) {
        unsetMaxDailyHit();
      } else {
        setMaxDailyHit((String)value);
      }
      break;

    case QUANTITY_BUDGET:
      if (value == null) {
        unsetQuantityBudget();
      } else {
        setQuantityBudget((String)value);
      }
      break;

    case MAX_DAILY_QUANTITY:
      if (value == null) {
        unsetMaxDailyQuantity();
      } else {
        setMaxDailyQuantity((String)value);
      }
      break;

    case QUANTITY_TYPE:
      if (value == null) {
        unsetQuantityType();
      } else {
        setQuantityType((Integer)value);
      }
      break;

    case TOTAL_QUANTITY:
      if (value == null) {
        unsetTotalQuantity();
      } else {
        setTotalQuantity((String)value);
      }
      break;

    case DAILY_QUANTITY:
      if (value == null) {
        unsetDailyQuantity();
      } else {
        setDailyQuantity((String)value);
      }
      break;

    case CLICK_BUDGET:
      if (value == null) {
        unsetClickBudget();
      } else {
        setClickBudget((String)value);
      }
      break;

    case MAX_DAILY_CLICK:
      if (value == null) {
        unsetMaxDailyClick();
      } else {
        setMaxDailyClick((String)value);
      }
      break;

    case DAILY_HIT_CLICK:
      if (value == null) {
        unsetDailyHitClick();
      } else {
        setDailyHitClick((String)value);
      }
      break;

    case TOTAL_HIT_CLICK:
      if (value == null) {
        unsetTotalHitClick();
      } else {
        setTotalHitClick((String)value);
      }
      break;

    case PV_BUDGET:
      if (value == null) {
        unsetPvBudget();
      } else {
        setPvBudget((String)value);
      }
      break;

    case MAX_DAILY_PV:
      if (value == null) {
        unsetMaxDailyPV();
      } else {
        setMaxDailyPV((String)value);
      }
      break;

    case DAILY_HIT_PV:
      if (value == null) {
        unsetDailyHitPV();
      } else {
        setDailyHitPV((String)value);
      }
      break;

    case TOTAL_HIT_PV:
      if (value == null) {
        unsetTotalHitPV();
      } else {
        setTotalHitPV((String)value);
      }
      break;

    case AGENCY_ID:
      if (value == null) {
        unsetAgencyId();
      } else {
        setAgencyId((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CAMPAIGN_ID:
      return Integer.valueOf(getCampaignID());

    case STATUS:
      return Integer.valueOf(getStatus());

    case LAST_CHANGED:
      return getLastChanged();

    case NAME:
      return getName();

    case ADVERTISER:
      return Integer.valueOf(getAdvertiser());

    case AGENCY:
      return getAgency();

    case BRAND:
      return Integer.valueOf(getBrand());

    case PRODUCT:
      return Integer.valueOf(getProduct());

    case SECTOR:
      return Integer.valueOf(getSector());

    case BUDGET:
      return getBudget();

    case KPI_TYPE:
      return Integer.valueOf(getKpiType());

    case KPI_VALUE:
      return getKpiValue();

    case START_TIME:
      return getStartTime();

    case END_TIME:
      return getEndTime();

    case PACING_TYPE:
      return Integer.valueOf(getPacingType());

    case PACING_VALUE:
      return getPacingValue();

    case ADV_FEATURE:
      return Integer.valueOf(getAdvFeature());

    case DESCRIPTION:
      return getDescription();

    case KPI_DAILY_HIT:
      return getKpiDailyHit();

    case KPI_TOTAL_HIT:
      return getKpiTotalHit();

    case DAILY_HIT:
      return getDailyHit();

    case TOTAL_HIT:
      return getTotalHit();

    case KPI_ACTION_TYPE:
      return Integer.valueOf(getKpiActionType());

    case BRAND_SAFTY_TYPE:
      return Integer.valueOf(getBrandSaftyType());

    case VERSION:
      return Integer.valueOf(getVersion());

    case ROTATION_TYPE:
      return Integer.valueOf(getRotationType());

    case SOURCE:
      return Integer.valueOf(getSource());

    case MAX_DAILY_HIT:
      return getMaxDailyHit();

    case QUANTITY_BUDGET:
      return getQuantityBudget();

    case MAX_DAILY_QUANTITY:
      return getMaxDailyQuantity();

    case QUANTITY_TYPE:
      return Integer.valueOf(getQuantityType());

    case TOTAL_QUANTITY:
      return getTotalQuantity();

    case DAILY_QUANTITY:
      return getDailyQuantity();

    case CLICK_BUDGET:
      return getClickBudget();

    case MAX_DAILY_CLICK:
      return getMaxDailyClick();

    case DAILY_HIT_CLICK:
      return getDailyHitClick();

    case TOTAL_HIT_CLICK:
      return getTotalHitClick();

    case PV_BUDGET:
      return getPvBudget();

    case MAX_DAILY_PV:
      return getMaxDailyPV();

    case DAILY_HIT_PV:
      return getDailyHitPV();

    case TOTAL_HIT_PV:
      return getTotalHitPV();

    case AGENCY_ID:
      return Integer.valueOf(getAgencyId());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CAMPAIGN_ID:
      return isSetCampaignID();
    case STATUS:
      return isSetStatus();
    case LAST_CHANGED:
      return isSetLastChanged();
    case NAME:
      return isSetName();
    case ADVERTISER:
      return isSetAdvertiser();
    case AGENCY:
      return isSetAgency();
    case BRAND:
      return isSetBrand();
    case PRODUCT:
      return isSetProduct();
    case SECTOR:
      return isSetSector();
    case BUDGET:
      return isSetBudget();
    case KPI_TYPE:
      return isSetKpiType();
    case KPI_VALUE:
      return isSetKpiValue();
    case START_TIME:
      return isSetStartTime();
    case END_TIME:
      return isSetEndTime();
    case PACING_TYPE:
      return isSetPacingType();
    case PACING_VALUE:
      return isSetPacingValue();
    case ADV_FEATURE:
      return isSetAdvFeature();
    case DESCRIPTION:
      return isSetDescription();
    case KPI_DAILY_HIT:
      return isSetKpiDailyHit();
    case KPI_TOTAL_HIT:
      return isSetKpiTotalHit();
    case DAILY_HIT:
      return isSetDailyHit();
    case TOTAL_HIT:
      return isSetTotalHit();
    case KPI_ACTION_TYPE:
      return isSetKpiActionType();
    case BRAND_SAFTY_TYPE:
      return isSetBrandSaftyType();
    case VERSION:
      return isSetVersion();
    case ROTATION_TYPE:
      return isSetRotationType();
    case SOURCE:
      return isSetSource();
    case MAX_DAILY_HIT:
      return isSetMaxDailyHit();
    case QUANTITY_BUDGET:
      return isSetQuantityBudget();
    case MAX_DAILY_QUANTITY:
      return isSetMaxDailyQuantity();
    case QUANTITY_TYPE:
      return isSetQuantityType();
    case TOTAL_QUANTITY:
      return isSetTotalQuantity();
    case DAILY_QUANTITY:
      return isSetDailyQuantity();
    case CLICK_BUDGET:
      return isSetClickBudget();
    case MAX_DAILY_CLICK:
      return isSetMaxDailyClick();
    case DAILY_HIT_CLICK:
      return isSetDailyHitClick();
    case TOTAL_HIT_CLICK:
      return isSetTotalHitClick();
    case PV_BUDGET:
      return isSetPvBudget();
    case MAX_DAILY_PV:
      return isSetMaxDailyPV();
    case DAILY_HIT_PV:
      return isSetDailyHitPV();
    case TOTAL_HIT_PV:
      return isSetTotalHitPV();
    case AGENCY_ID:
      return isSetAgencyId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TDbSync_Dsp_Campaign)
      return this.equals((TDbSync_Dsp_Campaign)that);
    return false;
  }

  public boolean equals(TDbSync_Dsp_Campaign that) {
    if (that == null)
      return false;

    boolean this_present_campaignID = true;
    boolean that_present_campaignID = true;
    if (this_present_campaignID || that_present_campaignID) {
      if (!(this_present_campaignID && that_present_campaignID))
        return false;
      if (this.campaignID != that.campaignID)
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_lastChanged = true && this.isSetLastChanged();
    boolean that_present_lastChanged = true && that.isSetLastChanged();
    if (this_present_lastChanged || that_present_lastChanged) {
      if (!(this_present_lastChanged && that_present_lastChanged))
        return false;
      if (!this.lastChanged.equals(that.lastChanged))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_advertiser = true;
    boolean that_present_advertiser = true;
    if (this_present_advertiser || that_present_advertiser) {
      if (!(this_present_advertiser && that_present_advertiser))
        return false;
      if (this.advertiser != that.advertiser)
        return false;
    }

    boolean this_present_Agency = true && this.isSetAgency();
    boolean that_present_Agency = true && that.isSetAgency();
    if (this_present_Agency || that_present_Agency) {
      if (!(this_present_Agency && that_present_Agency))
        return false;
      if (!this.Agency.equals(that.Agency))
        return false;
    }

    boolean this_present_brand = true;
    boolean that_present_brand = true;
    if (this_present_brand || that_present_brand) {
      if (!(this_present_brand && that_present_brand))
        return false;
      if (this.brand != that.brand)
        return false;
    }

    boolean this_present_product = true;
    boolean that_present_product = true;
    if (this_present_product || that_present_product) {
      if (!(this_present_product && that_present_product))
        return false;
      if (this.product != that.product)
        return false;
    }

    boolean this_present_sector = true;
    boolean that_present_sector = true;
    if (this_present_sector || that_present_sector) {
      if (!(this_present_sector && that_present_sector))
        return false;
      if (this.sector != that.sector)
        return false;
    }

    boolean this_present_budget = true && this.isSetBudget();
    boolean that_present_budget = true && that.isSetBudget();
    if (this_present_budget || that_present_budget) {
      if (!(this_present_budget && that_present_budget))
        return false;
      if (!this.budget.equals(that.budget))
        return false;
    }

    boolean this_present_kpiType = true;
    boolean that_present_kpiType = true;
    if (this_present_kpiType || that_present_kpiType) {
      if (!(this_present_kpiType && that_present_kpiType))
        return false;
      if (this.kpiType != that.kpiType)
        return false;
    }

    boolean this_present_kpiValue = true && this.isSetKpiValue();
    boolean that_present_kpiValue = true && that.isSetKpiValue();
    if (this_present_kpiValue || that_present_kpiValue) {
      if (!(this_present_kpiValue && that_present_kpiValue))
        return false;
      if (!this.kpiValue.equals(that.kpiValue))
        return false;
    }

    boolean this_present_startTime = true && this.isSetStartTime();
    boolean that_present_startTime = true && that.isSetStartTime();
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (!this.startTime.equals(that.startTime))
        return false;
    }

    boolean this_present_endTime = true && this.isSetEndTime();
    boolean that_present_endTime = true && that.isSetEndTime();
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (!this.endTime.equals(that.endTime))
        return false;
    }

    boolean this_present_pacingType = true;
    boolean that_present_pacingType = true;
    if (this_present_pacingType || that_present_pacingType) {
      if (!(this_present_pacingType && that_present_pacingType))
        return false;
      if (this.pacingType != that.pacingType)
        return false;
    }

    boolean this_present_pacingValue = true && this.isSetPacingValue();
    boolean that_present_pacingValue = true && that.isSetPacingValue();
    if (this_present_pacingValue || that_present_pacingValue) {
      if (!(this_present_pacingValue && that_present_pacingValue))
        return false;
      if (!this.pacingValue.equals(that.pacingValue))
        return false;
    }

    boolean this_present_advFeature = true;
    boolean that_present_advFeature = true;
    if (this_present_advFeature || that_present_advFeature) {
      if (!(this_present_advFeature && that_present_advFeature))
        return false;
      if (this.advFeature != that.advFeature)
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_kpiDailyHit = true && this.isSetKpiDailyHit();
    boolean that_present_kpiDailyHit = true && that.isSetKpiDailyHit();
    if (this_present_kpiDailyHit || that_present_kpiDailyHit) {
      if (!(this_present_kpiDailyHit && that_present_kpiDailyHit))
        return false;
      if (!this.kpiDailyHit.equals(that.kpiDailyHit))
        return false;
    }

    boolean this_present_kpiTotalHit = true && this.isSetKpiTotalHit();
    boolean that_present_kpiTotalHit = true && that.isSetKpiTotalHit();
    if (this_present_kpiTotalHit || that_present_kpiTotalHit) {
      if (!(this_present_kpiTotalHit && that_present_kpiTotalHit))
        return false;
      if (!this.kpiTotalHit.equals(that.kpiTotalHit))
        return false;
    }

    boolean this_present_dailyHit = true && this.isSetDailyHit();
    boolean that_present_dailyHit = true && that.isSetDailyHit();
    if (this_present_dailyHit || that_present_dailyHit) {
      if (!(this_present_dailyHit && that_present_dailyHit))
        return false;
      if (!this.dailyHit.equals(that.dailyHit))
        return false;
    }

    boolean this_present_totalHit = true && this.isSetTotalHit();
    boolean that_present_totalHit = true && that.isSetTotalHit();
    if (this_present_totalHit || that_present_totalHit) {
      if (!(this_present_totalHit && that_present_totalHit))
        return false;
      if (!this.totalHit.equals(that.totalHit))
        return false;
    }

    boolean this_present_kpiActionType = true;
    boolean that_present_kpiActionType = true;
    if (this_present_kpiActionType || that_present_kpiActionType) {
      if (!(this_present_kpiActionType && that_present_kpiActionType))
        return false;
      if (this.kpiActionType != that.kpiActionType)
        return false;
    }

    boolean this_present_brandSaftyType = true;
    boolean that_present_brandSaftyType = true;
    if (this_present_brandSaftyType || that_present_brandSaftyType) {
      if (!(this_present_brandSaftyType && that_present_brandSaftyType))
        return false;
      if (this.brandSaftyType != that.brandSaftyType)
        return false;
    }

    boolean this_present_version = true;
    boolean that_present_version = true;
    if (this_present_version || that_present_version) {
      if (!(this_present_version && that_present_version))
        return false;
      if (this.version != that.version)
        return false;
    }

    boolean this_present_rotationType = true;
    boolean that_present_rotationType = true;
    if (this_present_rotationType || that_present_rotationType) {
      if (!(this_present_rotationType && that_present_rotationType))
        return false;
      if (this.rotationType != that.rotationType)
        return false;
    }

    boolean this_present_source = true;
    boolean that_present_source = true;
    if (this_present_source || that_present_source) {
      if (!(this_present_source && that_present_source))
        return false;
      if (this.source != that.source)
        return false;
    }

    boolean this_present_maxDailyHit = true && this.isSetMaxDailyHit();
    boolean that_present_maxDailyHit = true && that.isSetMaxDailyHit();
    if (this_present_maxDailyHit || that_present_maxDailyHit) {
      if (!(this_present_maxDailyHit && that_present_maxDailyHit))
        return false;
      if (!this.maxDailyHit.equals(that.maxDailyHit))
        return false;
    }

    boolean this_present_quantityBudget = true && this.isSetQuantityBudget();
    boolean that_present_quantityBudget = true && that.isSetQuantityBudget();
    if (this_present_quantityBudget || that_present_quantityBudget) {
      if (!(this_present_quantityBudget && that_present_quantityBudget))
        return false;
      if (!this.quantityBudget.equals(that.quantityBudget))
        return false;
    }

    boolean this_present_maxDailyQuantity = true && this.isSetMaxDailyQuantity();
    boolean that_present_maxDailyQuantity = true && that.isSetMaxDailyQuantity();
    if (this_present_maxDailyQuantity || that_present_maxDailyQuantity) {
      if (!(this_present_maxDailyQuantity && that_present_maxDailyQuantity))
        return false;
      if (!this.maxDailyQuantity.equals(that.maxDailyQuantity))
        return false;
    }

    boolean this_present_quantityType = true;
    boolean that_present_quantityType = true;
    if (this_present_quantityType || that_present_quantityType) {
      if (!(this_present_quantityType && that_present_quantityType))
        return false;
      if (this.quantityType != that.quantityType)
        return false;
    }

    boolean this_present_totalQuantity = true && this.isSetTotalQuantity();
    boolean that_present_totalQuantity = true && that.isSetTotalQuantity();
    if (this_present_totalQuantity || that_present_totalQuantity) {
      if (!(this_present_totalQuantity && that_present_totalQuantity))
        return false;
      if (!this.totalQuantity.equals(that.totalQuantity))
        return false;
    }

    boolean this_present_dailyQuantity = true && this.isSetDailyQuantity();
    boolean that_present_dailyQuantity = true && that.isSetDailyQuantity();
    if (this_present_dailyQuantity || that_present_dailyQuantity) {
      if (!(this_present_dailyQuantity && that_present_dailyQuantity))
        return false;
      if (!this.dailyQuantity.equals(that.dailyQuantity))
        return false;
    }

    boolean this_present_clickBudget = true && this.isSetClickBudget();
    boolean that_present_clickBudget = true && that.isSetClickBudget();
    if (this_present_clickBudget || that_present_clickBudget) {
      if (!(this_present_clickBudget && that_present_clickBudget))
        return false;
      if (!this.clickBudget.equals(that.clickBudget))
        return false;
    }

    boolean this_present_maxDailyClick = true && this.isSetMaxDailyClick();
    boolean that_present_maxDailyClick = true && that.isSetMaxDailyClick();
    if (this_present_maxDailyClick || that_present_maxDailyClick) {
      if (!(this_present_maxDailyClick && that_present_maxDailyClick))
        return false;
      if (!this.maxDailyClick.equals(that.maxDailyClick))
        return false;
    }

    boolean this_present_dailyHitClick = true && this.isSetDailyHitClick();
    boolean that_present_dailyHitClick = true && that.isSetDailyHitClick();
    if (this_present_dailyHitClick || that_present_dailyHitClick) {
      if (!(this_present_dailyHitClick && that_present_dailyHitClick))
        return false;
      if (!this.dailyHitClick.equals(that.dailyHitClick))
        return false;
    }

    boolean this_present_totalHitClick = true && this.isSetTotalHitClick();
    boolean that_present_totalHitClick = true && that.isSetTotalHitClick();
    if (this_present_totalHitClick || that_present_totalHitClick) {
      if (!(this_present_totalHitClick && that_present_totalHitClick))
        return false;
      if (!this.totalHitClick.equals(that.totalHitClick))
        return false;
    }

    boolean this_present_pvBudget = true && this.isSetPvBudget();
    boolean that_present_pvBudget = true && that.isSetPvBudget();
    if (this_present_pvBudget || that_present_pvBudget) {
      if (!(this_present_pvBudget && that_present_pvBudget))
        return false;
      if (!this.pvBudget.equals(that.pvBudget))
        return false;
    }

    boolean this_present_maxDailyPV = true && this.isSetMaxDailyPV();
    boolean that_present_maxDailyPV = true && that.isSetMaxDailyPV();
    if (this_present_maxDailyPV || that_present_maxDailyPV) {
      if (!(this_present_maxDailyPV && that_present_maxDailyPV))
        return false;
      if (!this.maxDailyPV.equals(that.maxDailyPV))
        return false;
    }

    boolean this_present_dailyHitPV = true && this.isSetDailyHitPV();
    boolean that_present_dailyHitPV = true && that.isSetDailyHitPV();
    if (this_present_dailyHitPV || that_present_dailyHitPV) {
      if (!(this_present_dailyHitPV && that_present_dailyHitPV))
        return false;
      if (!this.dailyHitPV.equals(that.dailyHitPV))
        return false;
    }

    boolean this_present_totalHitPV = true && this.isSetTotalHitPV();
    boolean that_present_totalHitPV = true && that.isSetTotalHitPV();
    if (this_present_totalHitPV || that_present_totalHitPV) {
      if (!(this_present_totalHitPV && that_present_totalHitPV))
        return false;
      if (!this.totalHitPV.equals(that.totalHitPV))
        return false;
    }

    boolean this_present_agencyId = true;
    boolean that_present_agencyId = true;
    if (this_present_agencyId || that_present_agencyId) {
      if (!(this_present_agencyId && that_present_agencyId))
        return false;
      if (this.agencyId != that.agencyId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(TDbSync_Dsp_Campaign other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetCampaignID()).compareTo(other.isSetCampaignID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCampaignID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.campaignID, other.campaignID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastChanged()).compareTo(other.isSetLastChanged());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastChanged()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastChanged, other.lastChanged);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdvertiser()).compareTo(other.isSetAdvertiser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdvertiser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.advertiser, other.advertiser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAgency()).compareTo(other.isSetAgency());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgency()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Agency, other.Agency);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBrand()).compareTo(other.isSetBrand());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBrand()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.brand, other.brand);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProduct()).compareTo(other.isSetProduct());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProduct()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.product, other.product);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSector()).compareTo(other.isSetSector());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSector()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sector, other.sector);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBudget()).compareTo(other.isSetBudget());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBudget()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.budget, other.budget);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetKpiType()).compareTo(other.isSetKpiType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKpiType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.kpiType, other.kpiType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetKpiValue()).compareTo(other.isSetKpiValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKpiValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.kpiValue, other.kpiValue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPacingType()).compareTo(other.isSetPacingType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPacingType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pacingType, other.pacingType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPacingValue()).compareTo(other.isSetPacingValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPacingValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pacingValue, other.pacingValue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdvFeature()).compareTo(other.isSetAdvFeature());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdvFeature()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.advFeature, other.advFeature);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetKpiDailyHit()).compareTo(other.isSetKpiDailyHit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKpiDailyHit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.kpiDailyHit, other.kpiDailyHit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetKpiTotalHit()).compareTo(other.isSetKpiTotalHit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKpiTotalHit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.kpiTotalHit, other.kpiTotalHit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDailyHit()).compareTo(other.isSetDailyHit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDailyHit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dailyHit, other.dailyHit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalHit()).compareTo(other.isSetTotalHit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalHit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalHit, other.totalHit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetKpiActionType()).compareTo(other.isSetKpiActionType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKpiActionType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.kpiActionType, other.kpiActionType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBrandSaftyType()).compareTo(other.isSetBrandSaftyType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBrandSaftyType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.brandSaftyType, other.brandSaftyType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVersion()).compareTo(other.isSetVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.version, other.version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRotationType()).compareTo(other.isSetRotationType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRotationType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rotationType, other.rotationType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSource()).compareTo(other.isSetSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.source, other.source);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaxDailyHit()).compareTo(other.isSetMaxDailyHit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxDailyHit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxDailyHit, other.maxDailyHit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQuantityBudget()).compareTo(other.isSetQuantityBudget());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuantityBudget()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.quantityBudget, other.quantityBudget);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaxDailyQuantity()).compareTo(other.isSetMaxDailyQuantity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxDailyQuantity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxDailyQuantity, other.maxDailyQuantity);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQuantityType()).compareTo(other.isSetQuantityType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuantityType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.quantityType, other.quantityType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalQuantity()).compareTo(other.isSetTotalQuantity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalQuantity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalQuantity, other.totalQuantity);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDailyQuantity()).compareTo(other.isSetDailyQuantity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDailyQuantity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dailyQuantity, other.dailyQuantity);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClickBudget()).compareTo(other.isSetClickBudget());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClickBudget()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clickBudget, other.clickBudget);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaxDailyClick()).compareTo(other.isSetMaxDailyClick());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxDailyClick()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxDailyClick, other.maxDailyClick);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDailyHitClick()).compareTo(other.isSetDailyHitClick());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDailyHitClick()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dailyHitClick, other.dailyHitClick);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalHitClick()).compareTo(other.isSetTotalHitClick());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalHitClick()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalHitClick, other.totalHitClick);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPvBudget()).compareTo(other.isSetPvBudget());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPvBudget()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pvBudget, other.pvBudget);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaxDailyPV()).compareTo(other.isSetMaxDailyPV());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxDailyPV()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxDailyPV, other.maxDailyPV);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDailyHitPV()).compareTo(other.isSetDailyHitPV());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDailyHitPV()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dailyHitPV, other.dailyHitPV);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalHitPV()).compareTo(other.isSetTotalHitPV());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalHitPV()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalHitPV, other.totalHitPV);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAgencyId()).compareTo(other.isSetAgencyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgencyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agencyId, other.agencyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TDbSync_Dsp_Campaign(");
    boolean first = true;

    sb.append("campaignID:");
    sb.append(this.campaignID);
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastChanged:");
    if (this.lastChanged == null) {
      sb.append("null");
    } else {
      sb.append(this.lastChanged);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("advertiser:");
    sb.append(this.advertiser);
    first = false;
    if (!first) sb.append(", ");
    sb.append("Agency:");
    if (this.Agency == null) {
      sb.append("null");
    } else {
      sb.append(this.Agency);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("brand:");
    sb.append(this.brand);
    first = false;
    if (!first) sb.append(", ");
    sb.append("product:");
    sb.append(this.product);
    first = false;
    if (!first) sb.append(", ");
    sb.append("sector:");
    sb.append(this.sector);
    first = false;
    if (!first) sb.append(", ");
    sb.append("budget:");
    if (this.budget == null) {
      sb.append("null");
    } else {
      sb.append(this.budget);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("kpiType:");
    sb.append(this.kpiType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("kpiValue:");
    if (this.kpiValue == null) {
      sb.append("null");
    } else {
      sb.append(this.kpiValue);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    if (this.startTime == null) {
      sb.append("null");
    } else {
      sb.append(this.startTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    if (this.endTime == null) {
      sb.append("null");
    } else {
      sb.append(this.endTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pacingType:");
    sb.append(this.pacingType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("pacingValue:");
    if (this.pacingValue == null) {
      sb.append("null");
    } else {
      sb.append(this.pacingValue);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("advFeature:");
    sb.append(this.advFeature);
    first = false;
    if (!first) sb.append(", ");
    sb.append("description:");
    if (this.description == null) {
      sb.append("null");
    } else {
      sb.append(this.description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("kpiDailyHit:");
    if (this.kpiDailyHit == null) {
      sb.append("null");
    } else {
      sb.append(this.kpiDailyHit);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("kpiTotalHit:");
    if (this.kpiTotalHit == null) {
      sb.append("null");
    } else {
      sb.append(this.kpiTotalHit);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dailyHit:");
    if (this.dailyHit == null) {
      sb.append("null");
    } else {
      sb.append(this.dailyHit);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalHit:");
    if (this.totalHit == null) {
      sb.append("null");
    } else {
      sb.append(this.totalHit);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("kpiActionType:");
    sb.append(this.kpiActionType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("brandSaftyType:");
    sb.append(this.brandSaftyType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("version:");
    sb.append(this.version);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rotationType:");
    sb.append(this.rotationType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("source:");
    sb.append(this.source);
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxDailyHit:");
    if (this.maxDailyHit == null) {
      sb.append("null");
    } else {
      sb.append(this.maxDailyHit);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("quantityBudget:");
    if (this.quantityBudget == null) {
      sb.append("null");
    } else {
      sb.append(this.quantityBudget);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxDailyQuantity:");
    if (this.maxDailyQuantity == null) {
      sb.append("null");
    } else {
      sb.append(this.maxDailyQuantity);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("quantityType:");
    sb.append(this.quantityType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalQuantity:");
    if (this.totalQuantity == null) {
      sb.append("null");
    } else {
      sb.append(this.totalQuantity);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dailyQuantity:");
    if (this.dailyQuantity == null) {
      sb.append("null");
    } else {
      sb.append(this.dailyQuantity);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clickBudget:");
    if (this.clickBudget == null) {
      sb.append("null");
    } else {
      sb.append(this.clickBudget);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxDailyClick:");
    if (this.maxDailyClick == null) {
      sb.append("null");
    } else {
      sb.append(this.maxDailyClick);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dailyHitClick:");
    if (this.dailyHitClick == null) {
      sb.append("null");
    } else {
      sb.append(this.dailyHitClick);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalHitClick:");
    if (this.totalHitClick == null) {
      sb.append("null");
    } else {
      sb.append(this.totalHitClick);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pvBudget:");
    if (this.pvBudget == null) {
      sb.append("null");
    } else {
      sb.append(this.pvBudget);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("maxDailyPV:");
    if (this.maxDailyPV == null) {
      sb.append("null");
    } else {
      sb.append(this.maxDailyPV);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dailyHitPV:");
    if (this.dailyHitPV == null) {
      sb.append("null");
    } else {
      sb.append(this.dailyHitPV);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalHitPV:");
    if (this.totalHitPV == null) {
      sb.append("null");
    } else {
      sb.append(this.totalHitPV);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("agencyId:");
    sb.append(this.agencyId);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'campaignID' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'status' because it's a primitive and you chose the non-beans generator.
    if (lastChanged == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'lastChanged' was not present! Struct: " + toString());
    }
    if (name == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'name' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'advertiser' because it's a primitive and you chose the non-beans generator.
    if (Agency == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'Agency' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'brand' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'product' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'sector' because it's a primitive and you chose the non-beans generator.
    if (budget == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'budget' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'kpiType' because it's a primitive and you chose the non-beans generator.
    if (kpiValue == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'kpiValue' was not present! Struct: " + toString());
    }
    if (startTime == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'startTime' was not present! Struct: " + toString());
    }
    if (endTime == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'endTime' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'pacingType' because it's a primitive and you chose the non-beans generator.
    if (pacingValue == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'pacingValue' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'advFeature' because it's a primitive and you chose the non-beans generator.
    if (description == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'description' was not present! Struct: " + toString());
    }
    if (kpiDailyHit == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'kpiDailyHit' was not present! Struct: " + toString());
    }
    if (kpiTotalHit == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'kpiTotalHit' was not present! Struct: " + toString());
    }
    if (dailyHit == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'dailyHit' was not present! Struct: " + toString());
    }
    if (totalHit == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'totalHit' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'kpiActionType' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'brandSaftyType' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'version' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'rotationType' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'source' because it's a primitive and you chose the non-beans generator.
    if (maxDailyHit == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'maxDailyHit' was not present! Struct: " + toString());
    }
    if (quantityBudget == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'quantityBudget' was not present! Struct: " + toString());
    }
    if (maxDailyQuantity == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'maxDailyQuantity' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'quantityType' because it's a primitive and you chose the non-beans generator.
    if (totalQuantity == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'totalQuantity' was not present! Struct: " + toString());
    }
    if (dailyQuantity == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'dailyQuantity' was not present! Struct: " + toString());
    }
    if (clickBudget == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'clickBudget' was not present! Struct: " + toString());
    }
    if (maxDailyClick == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'maxDailyClick' was not present! Struct: " + toString());
    }
    if (dailyHitClick == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'dailyHitClick' was not present! Struct: " + toString());
    }
    if (totalHitClick == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'totalHitClick' was not present! Struct: " + toString());
    }
    if (pvBudget == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'pvBudget' was not present! Struct: " + toString());
    }
    if (maxDailyPV == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'maxDailyPV' was not present! Struct: " + toString());
    }
    if (dailyHitPV == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'dailyHitPV' was not present! Struct: " + toString());
    }
    if (totalHitPV == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'totalHitPV' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'agencyId' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TDbSync_Dsp_CampaignStandardSchemeFactory implements SchemeFactory {
    public TDbSync_Dsp_CampaignStandardScheme getScheme() {
      return new TDbSync_Dsp_CampaignStandardScheme();
    }
  }

  private static class TDbSync_Dsp_CampaignStandardScheme extends StandardScheme<TDbSync_Dsp_Campaign> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TDbSync_Dsp_Campaign struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CAMPAIGN_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.campaignID = iprot.readI32();
              struct.setCampaignIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LAST_CHANGED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lastChanged = iprot.readString();
              struct.setLastChangedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ADVERTISER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.advertiser = iprot.readI32();
              struct.setAdvertiserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // AGENCY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Agency = iprot.readString();
              struct.setAgencyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BRAND
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.brand = iprot.readI32();
              struct.setBrandIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PRODUCT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.product = iprot.readI32();
              struct.setProductIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SECTOR
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sector = iprot.readI32();
              struct.setSectorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // BUDGET
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.budget = iprot.readString();
              struct.setBudgetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // KPI_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.kpiType = iprot.readI32();
              struct.setKpiTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // KPI_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.kpiValue = iprot.readString();
              struct.setKpiValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.startTime = iprot.readString();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endTime = iprot.readString();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // PACING_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pacingType = iprot.readI32();
              struct.setPacingTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // PACING_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pacingValue = iprot.readString();
              struct.setPacingValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // ADV_FEATURE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.advFeature = iprot.readI32();
              struct.setAdvFeatureIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // KPI_DAILY_HIT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.kpiDailyHit = iprot.readString();
              struct.setKpiDailyHitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // KPI_TOTAL_HIT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.kpiTotalHit = iprot.readString();
              struct.setKpiTotalHitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // DAILY_HIT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.dailyHit = iprot.readString();
              struct.setDailyHitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // TOTAL_HIT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.totalHit = iprot.readString();
              struct.setTotalHitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // KPI_ACTION_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.kpiActionType = iprot.readI32();
              struct.setKpiActionTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // BRAND_SAFTY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.brandSaftyType = iprot.readI32();
              struct.setBrandSaftyTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.version = iprot.readI32();
              struct.setVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // ROTATION_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rotationType = iprot.readI32();
              struct.setRotationTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.source = iprot.readI32();
              struct.setSourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // MAX_DAILY_HIT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.maxDailyHit = iprot.readString();
              struct.setMaxDailyHitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // QUANTITY_BUDGET
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.quantityBudget = iprot.readString();
              struct.setQuantityBudgetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // MAX_DAILY_QUANTITY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.maxDailyQuantity = iprot.readString();
              struct.setMaxDailyQuantityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // QUANTITY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.quantityType = iprot.readI32();
              struct.setQuantityTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // TOTAL_QUANTITY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.totalQuantity = iprot.readString();
              struct.setTotalQuantityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // DAILY_QUANTITY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.dailyQuantity = iprot.readString();
              struct.setDailyQuantityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // CLICK_BUDGET
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clickBudget = iprot.readString();
              struct.setClickBudgetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // MAX_DAILY_CLICK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.maxDailyClick = iprot.readString();
              struct.setMaxDailyClickIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 36: // DAILY_HIT_CLICK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.dailyHitClick = iprot.readString();
              struct.setDailyHitClickIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 37: // TOTAL_HIT_CLICK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.totalHitClick = iprot.readString();
              struct.setTotalHitClickIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 38: // PV_BUDGET
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pvBudget = iprot.readString();
              struct.setPvBudgetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 39: // MAX_DAILY_PV
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.maxDailyPV = iprot.readString();
              struct.setMaxDailyPVIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 40: // DAILY_HIT_PV
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.dailyHitPV = iprot.readString();
              struct.setDailyHitPVIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 41: // TOTAL_HIT_PV
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.totalHitPV = iprot.readString();
              struct.setTotalHitPVIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 42: // AGENCY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.agencyId = iprot.readI32();
              struct.setAgencyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetCampaignID()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'campaignID' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetStatus()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'status' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetAdvertiser()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'advertiser' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetBrand()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'brand' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetProduct()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'product' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetSector()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'sector' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetKpiType()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'kpiType' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetPacingType()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'pacingType' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetAdvFeature()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'advFeature' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetKpiActionType()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'kpiActionType' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetBrandSaftyType()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'brandSaftyType' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetVersion()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'version' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetRotationType()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'rotationType' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetSource()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'source' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetQuantityType()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'quantityType' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetAgencyId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'agencyId' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TDbSync_Dsp_Campaign struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(CAMPAIGN_ID_FIELD_DESC);
      oprot.writeI32(struct.campaignID);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.status);
      oprot.writeFieldEnd();
      if (struct.lastChanged != null) {
        oprot.writeFieldBegin(LAST_CHANGED_FIELD_DESC);
        oprot.writeString(struct.lastChanged);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ADVERTISER_FIELD_DESC);
      oprot.writeI32(struct.advertiser);
      oprot.writeFieldEnd();
      if (struct.Agency != null) {
        oprot.writeFieldBegin(AGENCY_FIELD_DESC);
        oprot.writeString(struct.Agency);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BRAND_FIELD_DESC);
      oprot.writeI32(struct.brand);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PRODUCT_FIELD_DESC);
      oprot.writeI32(struct.product);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SECTOR_FIELD_DESC);
      oprot.writeI32(struct.sector);
      oprot.writeFieldEnd();
      if (struct.budget != null) {
        oprot.writeFieldBegin(BUDGET_FIELD_DESC);
        oprot.writeString(struct.budget);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(KPI_TYPE_FIELD_DESC);
      oprot.writeI32(struct.kpiType);
      oprot.writeFieldEnd();
      if (struct.kpiValue != null) {
        oprot.writeFieldBegin(KPI_VALUE_FIELD_DESC);
        oprot.writeString(struct.kpiValue);
        oprot.writeFieldEnd();
      }
      if (struct.startTime != null) {
        oprot.writeFieldBegin(START_TIME_FIELD_DESC);
        oprot.writeString(struct.startTime);
        oprot.writeFieldEnd();
      }
      if (struct.endTime != null) {
        oprot.writeFieldBegin(END_TIME_FIELD_DESC);
        oprot.writeString(struct.endTime);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PACING_TYPE_FIELD_DESC);
      oprot.writeI32(struct.pacingType);
      oprot.writeFieldEnd();
      if (struct.pacingValue != null) {
        oprot.writeFieldBegin(PACING_VALUE_FIELD_DESC);
        oprot.writeString(struct.pacingValue);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ADV_FEATURE_FIELD_DESC);
      oprot.writeI32(struct.advFeature);
      oprot.writeFieldEnd();
      if (struct.description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.description);
        oprot.writeFieldEnd();
      }
      if (struct.kpiDailyHit != null) {
        oprot.writeFieldBegin(KPI_DAILY_HIT_FIELD_DESC);
        oprot.writeString(struct.kpiDailyHit);
        oprot.writeFieldEnd();
      }
      if (struct.kpiTotalHit != null) {
        oprot.writeFieldBegin(KPI_TOTAL_HIT_FIELD_DESC);
        oprot.writeString(struct.kpiTotalHit);
        oprot.writeFieldEnd();
      }
      if (struct.dailyHit != null) {
        oprot.writeFieldBegin(DAILY_HIT_FIELD_DESC);
        oprot.writeString(struct.dailyHit);
        oprot.writeFieldEnd();
      }
      if (struct.totalHit != null) {
        oprot.writeFieldBegin(TOTAL_HIT_FIELD_DESC);
        oprot.writeString(struct.totalHit);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(KPI_ACTION_TYPE_FIELD_DESC);
      oprot.writeI32(struct.kpiActionType);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BRAND_SAFTY_TYPE_FIELD_DESC);
      oprot.writeI32(struct.brandSaftyType);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VERSION_FIELD_DESC);
      oprot.writeI32(struct.version);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROTATION_TYPE_FIELD_DESC);
      oprot.writeI32(struct.rotationType);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SOURCE_FIELD_DESC);
      oprot.writeI32(struct.source);
      oprot.writeFieldEnd();
      if (struct.maxDailyHit != null) {
        oprot.writeFieldBegin(MAX_DAILY_HIT_FIELD_DESC);
        oprot.writeString(struct.maxDailyHit);
        oprot.writeFieldEnd();
      }
      if (struct.quantityBudget != null) {
        oprot.writeFieldBegin(QUANTITY_BUDGET_FIELD_DESC);
        oprot.writeString(struct.quantityBudget);
        oprot.writeFieldEnd();
      }
      if (struct.maxDailyQuantity != null) {
        oprot.writeFieldBegin(MAX_DAILY_QUANTITY_FIELD_DESC);
        oprot.writeString(struct.maxDailyQuantity);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(QUANTITY_TYPE_FIELD_DESC);
      oprot.writeI32(struct.quantityType);
      oprot.writeFieldEnd();
      if (struct.totalQuantity != null) {
        oprot.writeFieldBegin(TOTAL_QUANTITY_FIELD_DESC);
        oprot.writeString(struct.totalQuantity);
        oprot.writeFieldEnd();
      }
      if (struct.dailyQuantity != null) {
        oprot.writeFieldBegin(DAILY_QUANTITY_FIELD_DESC);
        oprot.writeString(struct.dailyQuantity);
        oprot.writeFieldEnd();
      }
      if (struct.clickBudget != null) {
        oprot.writeFieldBegin(CLICK_BUDGET_FIELD_DESC);
        oprot.writeString(struct.clickBudget);
        oprot.writeFieldEnd();
      }
      if (struct.maxDailyClick != null) {
        oprot.writeFieldBegin(MAX_DAILY_CLICK_FIELD_DESC);
        oprot.writeString(struct.maxDailyClick);
        oprot.writeFieldEnd();
      }
      if (struct.dailyHitClick != null) {
        oprot.writeFieldBegin(DAILY_HIT_CLICK_FIELD_DESC);
        oprot.writeString(struct.dailyHitClick);
        oprot.writeFieldEnd();
      }
      if (struct.totalHitClick != null) {
        oprot.writeFieldBegin(TOTAL_HIT_CLICK_FIELD_DESC);
        oprot.writeString(struct.totalHitClick);
        oprot.writeFieldEnd();
      }
      if (struct.pvBudget != null) {
        oprot.writeFieldBegin(PV_BUDGET_FIELD_DESC);
        oprot.writeString(struct.pvBudget);
        oprot.writeFieldEnd();
      }
      if (struct.maxDailyPV != null) {
        oprot.writeFieldBegin(MAX_DAILY_PV_FIELD_DESC);
        oprot.writeString(struct.maxDailyPV);
        oprot.writeFieldEnd();
      }
      if (struct.dailyHitPV != null) {
        oprot.writeFieldBegin(DAILY_HIT_PV_FIELD_DESC);
        oprot.writeString(struct.dailyHitPV);
        oprot.writeFieldEnd();
      }
      if (struct.totalHitPV != null) {
        oprot.writeFieldBegin(TOTAL_HIT_PV_FIELD_DESC);
        oprot.writeString(struct.totalHitPV);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(AGENCY_ID_FIELD_DESC);
      oprot.writeI32(struct.agencyId);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TDbSync_Dsp_CampaignTupleSchemeFactory implements SchemeFactory {
    public TDbSync_Dsp_CampaignTupleScheme getScheme() {
      return new TDbSync_Dsp_CampaignTupleScheme();
    }
  }

  private static class TDbSync_Dsp_CampaignTupleScheme extends TupleScheme<TDbSync_Dsp_Campaign> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TDbSync_Dsp_Campaign struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI32(struct.campaignID);
      oprot.writeI32(struct.status);
      oprot.writeString(struct.lastChanged);
      oprot.writeString(struct.name);
      oprot.writeI32(struct.advertiser);
      oprot.writeString(struct.Agency);
      oprot.writeI32(struct.brand);
      oprot.writeI32(struct.product);
      oprot.writeI32(struct.sector);
      oprot.writeString(struct.budget);
      oprot.writeI32(struct.kpiType);
      oprot.writeString(struct.kpiValue);
      oprot.writeString(struct.startTime);
      oprot.writeString(struct.endTime);
      oprot.writeI32(struct.pacingType);
      oprot.writeString(struct.pacingValue);
      oprot.writeI32(struct.advFeature);
      oprot.writeString(struct.description);
      oprot.writeString(struct.kpiDailyHit);
      oprot.writeString(struct.kpiTotalHit);
      oprot.writeString(struct.dailyHit);
      oprot.writeString(struct.totalHit);
      oprot.writeI32(struct.kpiActionType);
      oprot.writeI32(struct.brandSaftyType);
      oprot.writeI32(struct.version);
      oprot.writeI32(struct.rotationType);
      oprot.writeI32(struct.source);
      oprot.writeString(struct.maxDailyHit);
      oprot.writeString(struct.quantityBudget);
      oprot.writeString(struct.maxDailyQuantity);
      oprot.writeI32(struct.quantityType);
      oprot.writeString(struct.totalQuantity);
      oprot.writeString(struct.dailyQuantity);
      oprot.writeString(struct.clickBudget);
      oprot.writeString(struct.maxDailyClick);
      oprot.writeString(struct.dailyHitClick);
      oprot.writeString(struct.totalHitClick);
      oprot.writeString(struct.pvBudget);
      oprot.writeString(struct.maxDailyPV);
      oprot.writeString(struct.dailyHitPV);
      oprot.writeString(struct.totalHitPV);
      oprot.writeI32(struct.agencyId);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TDbSync_Dsp_Campaign struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.campaignID = iprot.readI32();
      struct.setCampaignIDIsSet(true);
      struct.status = iprot.readI32();
      struct.setStatusIsSet(true);
      struct.lastChanged = iprot.readString();
      struct.setLastChangedIsSet(true);
      struct.name = iprot.readString();
      struct.setNameIsSet(true);
      struct.advertiser = iprot.readI32();
      struct.setAdvertiserIsSet(true);
      struct.Agency = iprot.readString();
      struct.setAgencyIsSet(true);
      struct.brand = iprot.readI32();
      struct.setBrandIsSet(true);
      struct.product = iprot.readI32();
      struct.setProductIsSet(true);
      struct.sector = iprot.readI32();
      struct.setSectorIsSet(true);
      struct.budget = iprot.readString();
      struct.setBudgetIsSet(true);
      struct.kpiType = iprot.readI32();
      struct.setKpiTypeIsSet(true);
      struct.kpiValue = iprot.readString();
      struct.setKpiValueIsSet(true);
      struct.startTime = iprot.readString();
      struct.setStartTimeIsSet(true);
      struct.endTime = iprot.readString();
      struct.setEndTimeIsSet(true);
      struct.pacingType = iprot.readI32();
      struct.setPacingTypeIsSet(true);
      struct.pacingValue = iprot.readString();
      struct.setPacingValueIsSet(true);
      struct.advFeature = iprot.readI32();
      struct.setAdvFeatureIsSet(true);
      struct.description = iprot.readString();
      struct.setDescriptionIsSet(true);
      struct.kpiDailyHit = iprot.readString();
      struct.setKpiDailyHitIsSet(true);
      struct.kpiTotalHit = iprot.readString();
      struct.setKpiTotalHitIsSet(true);
      struct.dailyHit = iprot.readString();
      struct.setDailyHitIsSet(true);
      struct.totalHit = iprot.readString();
      struct.setTotalHitIsSet(true);
      struct.kpiActionType = iprot.readI32();
      struct.setKpiActionTypeIsSet(true);
      struct.brandSaftyType = iprot.readI32();
      struct.setBrandSaftyTypeIsSet(true);
      struct.version = iprot.readI32();
      struct.setVersionIsSet(true);
      struct.rotationType = iprot.readI32();
      struct.setRotationTypeIsSet(true);
      struct.source = iprot.readI32();
      struct.setSourceIsSet(true);
      struct.maxDailyHit = iprot.readString();
      struct.setMaxDailyHitIsSet(true);
      struct.quantityBudget = iprot.readString();
      struct.setQuantityBudgetIsSet(true);
      struct.maxDailyQuantity = iprot.readString();
      struct.setMaxDailyQuantityIsSet(true);
      struct.quantityType = iprot.readI32();
      struct.setQuantityTypeIsSet(true);
      struct.totalQuantity = iprot.readString();
      struct.setTotalQuantityIsSet(true);
      struct.dailyQuantity = iprot.readString();
      struct.setDailyQuantityIsSet(true);
      struct.clickBudget = iprot.readString();
      struct.setClickBudgetIsSet(true);
      struct.maxDailyClick = iprot.readString();
      struct.setMaxDailyClickIsSet(true);
      struct.dailyHitClick = iprot.readString();
      struct.setDailyHitClickIsSet(true);
      struct.totalHitClick = iprot.readString();
      struct.setTotalHitClickIsSet(true);
      struct.pvBudget = iprot.readString();
      struct.setPvBudgetIsSet(true);
      struct.maxDailyPV = iprot.readString();
      struct.setMaxDailyPVIsSet(true);
      struct.dailyHitPV = iprot.readString();
      struct.setDailyHitPVIsSet(true);
      struct.totalHitPV = iprot.readString();
      struct.setTotalHitPVIsSet(true);
      struct.agencyId = iprot.readI32();
      struct.setAgencyIdIsSet(true);
    }
  }

}

